{
  "175": {
    "original_schema": "CREATE TABLE PERSON (\n    PERSONID INT PRIMARY KEY,\n    FIRSTNAME VARCHAR,\n    LASTNAME VARCHAR\n);\n\nCREATE TABLE ADDRESS (\n    ADDRESSID INT PRIMARY KEY,\n    PERSONID INT,\n    CITY VARCHAR,\n    STATE VARCHAR,\n    FOREIGN KEY (PERSONID) REFERENCES PERSON(PERSONID)\n);"
  },
  "182": {
    "original_schema": "CREATE TABLE PERSON (\n    ID INT,\n    EMAIL VARCHAR,\n    PRIMARY KEY (ID)\n);"
  },
  "183": {
    "original_schema": "CREATE TABLE CUSTOMERS (\n    ID INT PRIMARY KEY,\n    NAME VARCHAR\n);\n\nCREATE TABLE ORDERS (\n    ID INT PRIMARY KEY,\n    CUSTOMERID INT,\n    FOREIGN KEY (CUSTOMERID) REFERENCES CUSTOMERS(ID)\n);"
  },
  "511": {
    "original_schema": "CREATE TABLE ACTIVITY (\n    PLAYER_ID INT,\n    EVENT_DATE DATE,\n    DEVICE_ID INT,\n    GAMES_PLAYED INT,\n    PRIMARY KEY (PLAYER_ID, EVENT_DATE)\n);"
  },
  "512": {
    "original_schema": "CREATE TABLE ACTIVITY (\n    PLAYER_ID INT,\n    EVENT_DATE DATE,\n    DEVICE_ID INT,\n    GAMES_PLAYED INT,\n    PRIMARY KEY (PLAYER_ID, EVENT_DATE)\n);"
  },
  "550": {
    "original_schema": "CREATE TABLE ACTIVITY (\n    PLAYER_ID INT,\n    EVENT_DATE DATE,\n    DEVICE_ID INT,\n    GAMES_PLAYED INT,\n    PRIMARY KEY (PLAYER_ID, EVENT_DATE)\n);"
  },
  "577": {
    "original_schema": "CREATE TABLE EMPLOYEE (\n    EMPID INT PRIMARY KEY,\n    NAME VARCHAR,\n    SUPERVISOR INT,\n    SALARY INT\n);\n\nCREATE TABLE BONUS (\n    EMPID INT PRIMARY KEY,\n    BONUS INT,\n    FOREIGN KEY (EMPID) REFERENCES EMPLOYEE (EMPID)\n);"
  },
  "584": {
    "original_schema": "CREATE TABLE CUSTOMER (\n    ID INT PRIMARY KEY,\n    NAME VARCHAR,\n    REFEREE_ID INT,\n    FOREIGN KEY (REFEREE_ID) REFERENCES CUSTOMER(ID)\n);"
  },
  "585": {
    "original_schema": "CREATE TABLE INSURANCE (\n    PID INT PRIMARY KEY,\n    TIV_2015 NUMERIC,\n    TIV_2016 NUMERIC,\n    LAT NUMERIC,\n    LON NUMERIC\n);"
  },
  "595": {
    "original_schema": "CREATE TABLE WORLD (\n    NAME VARCHAR PRIMARY KEY,\n    CONTINENT VARCHAR,\n    AREA INT,\n    POPULATION INT,\n    GDP INT\n);"
  },
  "596": {
    "original_schema": "CREATE TABLE COURSES (\n    STUDENT VARCHAR NOT NULL,\n    CLASS VARCHAR,\n    PRIMARY KEY (STUDENT)\n);"
  },
  "603": {
    "original_schema": "CREATE TABLE CINEMA (\n    SEAT_ID INT PRIMARY KEY,\n    FREE BOOL\n);"
  },
  "607": {
    "original_schema": "CREATE TABLE SALESPERSON (\n    SALES_ID INT PRIMARY KEY,\n    NAME VARCHAR,\n    SALARY INT,\n    COMMISSION_RATE INT,\n    HIRE_DATE VARCHAR\n);\n\nCREATE TABLE COMPANY (\n    COM_ID INT PRIMARY KEY,\n    NAME VARCHAR,\n    CITY VARCHAR\n);\n\nCREATE TABLE ORDERS (\n    ORDER_ID INT PRIMARY KEY,\n    COM_ID INT,\n    SALES_ID INT,\n    ORDER_DATE VARCHAR,\n    AMOUNT INT,\n    FOREIGN KEY (COM_ID) REFERENCES COMPANY (COM_ID),\n    FOREIGN KEY (SALES_ID) REFERENCES SALESPERSON (SALES_ID)\n);"
  },
  "610": {
    "original_schema": "CREATE TABLE TRIANGLE (\n    X INT,\n    Y INT,\n    Z INT,\n    PRIMARY KEY (X, Y, Z)\n);"
  },
  "613": {
    "original_schema": "CREATE TABLE POINT (\n    X INT PRIMARY KEY\n);"
  },
  "614": {
    "original_schema": "CREATE TABLE FOLLOW (\n    FOLLOWEE VARCHAR,\n    FOLLOWER VARCHAR,\n    PRIMARY KEY (FOLLOWEE, FOLLOWER)\n);"
  },
  "619": {
    "original_schema": "CREATE TABLE MYNUMBERS (\n    NUM INT\n);"
  },
  "627": {
    "original_schema": "CREATE TABLE SALARY (\n    ID INT PRIMARY KEY,\n    NAME VARCHAR,\n    SEX CHAR CHECK(SEX IN ('M', 'F')),\n    SALARY INT\n);"
  },
  "1045": {
    "original_schema": "CREATE TABLE CUSTOMER (\n    CUSTOMER_ID INT PRIMARY KEY,\n    PRODUCT_KEY INT\n);\n\nCREATE TABLE PRODUCT (\n    PRODUCT_KEY INT PRIMARY KEY\n);\n\nALTER TABLE CUSTOMER\nADD FOREIGN KEY (PRODUCT_KEY)\nREFERENCES PRODUCT(PRODUCT_KEY);"
  },
  "1050": {
    "original_schema": "CREATE TABLE ACTORDIRECTOR (\n    TIMESTAMP INT PRIMARY KEY,\n    ACTOR_ID INT,\n    DIRECTOR_ID INT\n);"
  },
  "1075": {
    "original_schema": "CREATE TABLE PROJECT (\n    PROJECT_ID INT,\n    EMPLOYEE_ID INT,\n    PRIMARY KEY (PROJECT_ID, EMPLOYEE_ID)\n);\n\nCREATE TABLE EMPLOYEE (\n    EMPLOYEE_ID INT PRIMARY KEY,\n    NAME VARCHAR,\n    EXPERIENCE_YEARS INT\n);\n\nCREATE INDEX idx_PROJECT_EMPLOYEE_ID ON PROJECT (EMPLOYEE_ID);\n\nALTER TABLE PROJECT\nADD FOREIGN KEY (EMPLOYEE_ID)\nREFERENCES EMPLOYEE (EMPLOYEE_ID);"
  },
  "1083": {
    "original_schema": "CREATE TABLE PRODUCT (\n    PRODUCT_ID INT PRIMARY KEY,\n    PRODUCT_NAME VARCHAR,\n    UNIT_PRICE INT\n);\n\nCREATE TABLE SALES (\n    PRODUCT_ID INT,\n    SELLER_ID INT,\n    BUYER_ID INT,\n    SALE_DATE DATE,\n    QUANTITY INT,\n    PRICE INT,\n    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)\n);"
  },
  "1084": {
    "original_schema": "CREATE TABLE PRODUCT (\n    PRODUCT_ID INT PRIMARY KEY,\n    PRODUCT_NAME VARCHAR,\n    UNIT_PRICE INT\n);\n\nCREATE TABLE SALES (\n    PRODUCT_ID INT,\n    SELLER_ID INT,\n    BUYER_ID INT,\n    SALE_DATE DATE,\n    QUANTITY INT,\n    PRICE INT,\n    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)\n);"
  },
  "1097": {
    "original_schema": "CREATE TABLE ACTIVITY (\n    PLAYER_ID INT,\n    EVENT_DATE DATE,\n    DEVICE_ID INT,\n    GAMES_PLAYED INT,\n    PRIMARY KEY (PLAYER_ID, EVENT_DATE)\n);"
  },
  "1113": {
    "original_schema": "CREATE TABLE ACTIONS (\n    USER_ID INT,\n    POST_ID INT,\n    ACTION_DATE DATE,\n    ACTION TEXT CHECK( ACTION IN ('VIEW','LIKE','REACTION','COMMENT','REPORT','SHARE')),\n    EXTRA VARCHAR\n);"
  },
  "1127": {
    "original_schema": "CREATE TABLE SPENDING (\n    USER_ID INT,\n    SPEND_DATE DATE,\n    PLATFORM TEXT CHECK(PLATFORM IN ('DESKTOP', 'MOBILE')),\n    AMOUNT INT,\n    PRIMARY KEY (USER_ID, SPEND_DATE, PLATFORM)\n);"
  },
  "1132": {
    "original_schema": "CREATE TABLE ACTIONS (\n    USER_ID INT,\n    POST_ID INT,\n    ACTION_DATE DATE,\n    ACTION TEXT CHECK( ACTION IN ('VIEW','LIKE','REACTION','COMMENT','REPORT','SHARE')),\n    EXTRA TEXT CHECK( EXTRA IN ('SPAM','RACISM','NULL'))\n);\n\nCREATE TABLE REMOVALS (\n    POST_ID INT PRIMARY KEY,\n    REMOVE_DATE DATE\n);\n\nCREATE INDEX idx_ACTIONS_POST_ID ON ACTIONS (POST_ID);\n\nALTER TABLE ACTIONS\nADD CONSTRAINT fk_ACTIONS_post_id\nFOREIGN KEY (POST_ID) \nREFERENCES REMOVALS (POST_ID);"
  },
  "1141": {
    "original_schema": "CREATE TABLE ACTIVITY (\n    USER_ID INT,\n    SESSION_ID INT,\n    ACTIVITY_DATE DATE,\n    ACTIVITY_TYPE TEXT CHECK(ACTIVITY_TYPE IN ('OPEN_SESSION', 'END_SESSION', 'SCROLL_DOWN', 'SEND_MESSAGE'))\n);"
  },
  "1148": {
    "original_schema": "CREATE TABLE VIEWS (\n    ARTICLE_ID INT,\n    AUTHOR_ID INT,\n    VIEWER_ID INT,\n    VIEW_DATE DATE\n);"
  },
  "1149": {
    "original_schema": "CREATE TABLE VIEWS (\n    ARTICLE_ID INT,\n    AUTHOR_ID INT,\n    VIEWER_ID INT,\n    VIEW_DATE DATE\n);"
  },
  "1173": {
    "original_schema": "CREATE TABLE DELIVERY (\n    DELIVERY_ID INT,\n    CUSTOMER_ID INT,\n    ORDER_DATE DATE,\n    CUSTOMER_PREF_DELIVERY_DATE DATE,\n    PRIMARY KEY (DELIVERY_ID)\n);"
  },
  "1211": {
    "original_schema": "CREATE TABLE QUERIES (\n    QUERY_NAME VARCHAR,\n    RESULT VARCHAR,\n    POSITION INT,\n    RATING INT\n);"
  },
  "1251": {
    "original_schema": "CREATE TABLE PRICES (\n    PRODUCT_ID INT,\n    START_DATE DATE,\n    END_DATE DATE,\n    PRICE INT,\n    PRIMARY KEY (PRODUCT_ID, START_DATE, END_DATE)\n);\n\nCREATE TABLE UNITSSOLD (\n    PRODUCT_ID INT,\n    PURCHASE_DATE DATE,\n    UNITS INT,\n    FOREIGN KEY (PRODUCT_ID) REFERENCES PRICES(PRODUCT_ID)\n);"
  },
  "1264": {
    "original_schema": "CREATE TABLE FRIENDSHIP (\n    USER1_ID INT NOT NULL,\n    USER2_ID INT NOT NULL,\n    PRIMARY KEY (USER1_ID, USER2_ID)\n);\n\nCREATE TABLE LIKES (\n    USER_ID INT NOT NULL,\n    PAGE_ID INT NOT NULL,\n    PRIMARY KEY (USER_ID, PAGE_ID)\n);"
  },
  "1350": {
    "original_schema": "CREATE TABLE DEPARTMENTS (\n    ID INT PRIMARY KEY,\n    NAME VARCHAR\n);\n\nCREATE TABLE STUDENTS (\n    ID INT PRIMARY KEY,\n    NAME VARCHAR,\n    DEPARTMENT_ID INT,\n    FOREIGN KEY(DEPARTMENT_ID) REFERENCES DEPARTMENTS(ID)\n);"
  },
  "1364": {
    "original_schema": "CREATE TABLE CUSTOMERS (\n    CUSTOMER_ID INT PRIMARY KEY,\n    CUSTOMER_NAME VARCHAR,\n    EMAIL VARCHAR\n);\n\nCREATE TABLE CONTACTS (\n    USER_ID INT,\n    CONTACT_EMAIL VARCHAR,\n    CONTACT_NAME VARCHAR,\n    PRIMARY KEY (USER_ID, CONTACT_EMAIL),\n    FOREIGN KEY (USER_ID) REFERENCES CUSTOMERS (CUSTOMER_ID)\n);\n\nCREATE TABLE INVOICES (\n    INVOICE_ID INT PRIMARY KEY,\n    USER_ID INT,\n    PRICE INT,\n    FOREIGN KEY (USER_ID) REFERENCES CUSTOMERS (CUSTOMER_ID)\n);"
  },
  "1378": {
    "original_schema": "CREATE TABLE EMPLOYEES (\n    ID INT PRIMARY KEY,\n    NAME VARCHAR\n);\n\nCREATE TABLE EMPLOYEEUNI (\n    ID INT PRIMARY KEY,\n    UNIQUE_ID INT,\n    FOREIGN KEY (ID) REFERENCES EMPLOYEES (ID)\n);"
  },
  "1398": {
    "original_schema": "CREATE TABLE CUSTOMERS (\n    CUSTOMER_ID INT PRIMARY KEY,\n    CUSTOMER_NAME VARCHAR\n);\n\nCREATE TABLE ORDERS (\n    ORDER_ID INT PRIMARY KEY,\n    CUSTOMER_ID INT,\n    PRODUCT_NAME VARCHAR,\n    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)\n);"
  },
  "1421": {
    "original_schema": "CREATE TABLE NPV (\n    ID INT PRIMARY KEY,\n    YEAR INT,\n    NPV INT\n);\n\nCREATE TABLE QUERIES (\n    ID INT PRIMARY KEY,\n    YEAR INT,\n    FOREIGN KEY (ID) REFERENCES NPV (ID)\n);"
  },
  "1435": {
    "original_schema": "CREATE TABLE SESSIONS (\n    SESSION_ID INT PRIMARY KEY,\n    DURATION INT\n);"
  },
  "1440": {
    "original_schema": "CREATE TABLE VARIABLES (\n    NAME VARCHAR PRIMARY KEY,\n    VALUE INT\n);\n\nCREATE TABLE EXPRESSIONS (\n    LEFT_OPERAND VARCHAR,\n    OPERATOR VARCHAR CHECK(OPERATOR IN ('<', '>', '=')),\n    RIGHT_OPERAND VARCHAR,\n    PRIMARY KEY (LEFT_OPERAND, OPERATOR, RIGHT_OPERAND),\n    FOREIGN KEY (LEFT_OPERAND) REFERENCES VARIABLES (NAME),\n    FOREIGN KEY (RIGHT_OPERAND) REFERENCES VARIABLES (NAME)\n);"
  },
  "1468": {
    "original_schema": "CREATE TABLE SALARIES (\n    COMPANY_ID INT,\n    EMPLOYEE_ID INT,\n    EMPLOYEE_NAME VARCHAR,\n    SALARY INT,\n    PRIMARY KEY (COMPANY_ID, EMPLOYEE_ID)\n);"
  },
  "1581": {
    "original_schema": "CREATE TABLE VISITS (\n    VISIT_ID INT PRIMARY KEY,\n    CUSTOMER_ID INT\n);\n\nCREATE TABLE TRANSACTIONS (\n    TRANSACTION_ID INT PRIMARY KEY,\n    VISIT_ID INT,\n    AMOUNT INT,\n    FOREIGN KEY (VISIT_ID) REFERENCES VISITS(VISIT_ID)\n);"
  },
  "1587": {
    "original_schema": "CREATE TABLE USERS (\n    ACCOUNT INT PRIMARY KEY,\n    NAME VARCHAR NOT NULL\n);\n\nCREATE TABLE TRANSACTIONS (\n    TRANS_ID INT PRIMARY KEY,\n    ACCOUNT INT,\n    AMOUNT INT,\n    TRANSACTED_ON DATE,\n    FOREIGN KEY (ACCOUNT) REFERENCES USERS(ACCOUNT)\n);"
  },
  "1661": {
    "original_schema": "CREATE TABLE ACTIVITY (\n    MACHINE_ID INT,\n    PROCESS_ID INT,\n    ACTIVITY_TYPE TEXT CHECK(ACTIVITY_TYPE IN ('START', 'END')),\n    TIMESTAMP NUMERIC,\n    PRIMARY KEY (MACHINE_ID, PROCESS_ID, ACTIVITY_TYPE)\n);"
  },
  "1677": {
    "original_schema": "CREATE TABLE PRODUCT (\n    PRODUCT_ID INT PRIMARY KEY,\n    NAME VARCHAR NOT NULL\n);\n\nCREATE TABLE INVOICE (\n    INVOICE_ID INT PRIMARY KEY,\n    PRODUCT_ID INT,\n    REST INT,\n    PAID INT,\n    CANCELED INT,\n    REFUNDED INT,\n    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)\n);"
  },
  "1683": {
    "original_schema": "CREATE TABLE TWEETS (\n    TWEET_ID INT PRIMARY KEY,\n    CONTENT VARCHAR\n);"
  },
  "1693": {
    "original_schema": "CREATE TABLE DAILYSALES (\n    DATE_ID DATE,\n    MAKE_NAME VARCHAR,\n    LEAD_ID INT,\n    PARTNER_ID INT\n);"
  },
  "1715": {
    "original_schema": "CREATE TABLE CHESTS (\n    CHEST_ID INT PRIMARY KEY,\n    APPLE_COUNT INT,\n    ORANGE_COUNT INT\n);\n\nCREATE TABLE BOXES (\n    BOX_ID INT PRIMARY KEY,\n    CHEST_ID INT,\n    APPLE_COUNT INT,\n    ORANGE_COUNT INT,\n    FOREIGN KEY (CHEST_ID) REFERENCES CHESTS(CHEST_ID)\n);"
  },
  "1731": {
    "original_schema": "CREATE TABLE EMPLOYEES (\n    EMPLOYEE_ID INT PRIMARY KEY,\n    NAME VARCHAR,\n    REPORTS_TO INT,\n    AGE INT,\n    FOREIGN KEY (REPORTS_TO) REFERENCES EMPLOYEES(EMPLOYEE_ID)\n);"
  },
  "1747": {
    "original_schema": "CREATE TABLE LOGINFO (\n    ACCOUNT_ID INT,\n    IP_ADDRESS INT,\n    LOGIN TIME,\n    LOGOUT TIME\n);"
  },
  "1777": {
    "original_schema": "CREATE TABLE PRODUCTS (\n    PRODUCT_ID INT,\n    STORE TEXT CHECK( STORE IN ('STORE1','STORE2','STORE3') ),\n    PRICE INT,\n    PRIMARY KEY (PRODUCT_ID, STORE)\n);"
  },
  "1783": {
    "original_schema": "CREATE TABLE PLAYERS (\n    PLAYER_ID INT PRIMARY KEY,\n    PLAYER_NAME VARCHAR\n);\n\nCREATE TABLE CHAMPIONSHIPS (\n    YEAR INT PRIMARY KEY,\n    WIMBLEDON INT,\n    FR_OPEN INT,\n    US_OPEN INT,\n    AU_OPEN INT,\n    FOREIGN KEY (WIMBLEDON) REFERENCES PLAYERS (PLAYER_ID),\n    FOREIGN KEY (FR_OPEN) REFERENCES PLAYERS (PLAYER_ID),\n    FOREIGN KEY (US_OPEN) REFERENCES PLAYERS (PLAYER_ID),\n    FOREIGN KEY (AU_OPEN) REFERENCES PLAYERS (PLAYER_ID)\n);"
  },
  "1789": {
    "original_schema": "CREATE TABLE EMPLOYEE (\n    EMPLOYEE_ID INT,\n    DEPARTMENT_ID INT,\n    PRIMARY_FLAG CHAR(1) CHECK( PRIMARY_FLAG IN ('Y','N')),\n    PRIMARY KEY (EMPLOYEE_ID, DEPARTMENT_ID)\n);"
  },
  "1795": {
    "original_schema": "CREATE TABLE PRODUCTS (\n    PRODUCT_ID INT PRIMARY KEY,\n    STORE1 INT,\n    STORE2 INT,\n    STORE3 INT\n);"
  },
  "1809": {
    "original_schema": "CREATE TABLE PLAYBACK (\n    SESSION_ID INT PRIMARY KEY,\n    CUSTOMER_ID INT,\n    START_TIME INT,\n    END_TIME INT\n);\n\nCREATE TABLE ADS (\n    AD_ID INT PRIMARY KEY,\n    CUSTOMER_ID INT,\n    TIMESTAMP INT,\n    FOREIGN KEY (CUSTOMER_ID) REFERENCES PLAYBACK(CUSTOMER_ID)\n);"
  }
}