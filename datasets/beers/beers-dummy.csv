id,question_id,outputs,schema,q1,q2,ground_truth,q1_map_correct,q2_map_correct
33,1,"{'student_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['Talk of the Town'], ['The Edge']], 'teacher_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['The Edge']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t5 WHERE (c2 = 'Amstel' OR c2 = 'Corona') AND c3 > 2;,SELECT DISTINCT t5.c1 FROM t5 WHERE t5.c2 = 'Amstel' OR t5.c2 = 'Corona' AND t5.c3 > 2;,N,Y,REMAPPED
50,1,"{'student_result': [['Down Under Pub'], ['Down Under Pub'], ['The Edge'], ['The Edge'], ['James Joyce Pub'], ['James Joyce Pub'], ['Satisfaction'], ['Satisfaction'], ['Talk of the Town']], 'teacher_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['The Edge']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t5 WHERE (c2 = 'Amstel' OR c2 = 'Corona') AND c3 > 2;,SELECT c1 FROM t5 WHERE c2 = 'Amstel' OR c2 = 'Corona' AND c3 > 2;,N,Y,Y
243,1,"{'student_result': [['Amy'], ['Ben'], ['Coy'], ['Dan'], ['Eve']], 'teacher_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['The Edge']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t5 WHERE (c2 = 'Amstel' OR c2 = 'Corona') AND c3 > 2;,SELECT DISTINCT c1 FROM t4 WHERE (c1 IN (SELECT DISTINCT c1 FROM t6 WHERE c2 <> 'Corona') AND c2 IN (SELECT DISTINCT c1 FROM t5 WHERE c2 = 'Corona'));,N,Y,Y
1917,1,"{'student_result': [['Amy'], ['Dan'], ['Eve'], ['Amy'], ['Dan'], ['Eve'], ['Amy'], ['Dan'], ['Eve'], ['Amy'], ['Dan'], ['Eve'], ['Amy'], ['Dan'], ['Eve'], ['Amy'], ['Dan'], ['Eve'], ['Amy'], ['Dan'], ['Eve'], ['Amy'], ['Dan'], ['Eve'], ['Amy'], ['Dan'], ['Eve'], ['Amy'], ['Dan'], ['Eve']], 'teacher_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['The Edge']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t5 WHERE (c2 = 'Amstel' OR c2 = 'Corona') AND c3 > 2;,"SELECT alias1.c1 FROM t6 alias1, t4 alias2, t5 alias3 WHERE alias1.c2 = 'Corona' AND alias3.c2 = 'Corona' AND alias3.c1 = alias2.c2;",N,Y,Y
1954,1,"{'student_result': [['Down Under Pub'], ['Down Under Pub'], ['The Edge'], ['The Edge'], ['James Joyce Pub'], ['James Joyce Pub'], ['James Joyce Pub'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Talk of the Town']], 'teacher_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['The Edge']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t5 WHERE (c2 = 'Amstel' OR c2 = 'Corona') AND c3 > 2;,SELECT c1 FROM t5 WHERE c3 > 2,N,Y,Y
3259,1,"{'student_result': [['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Coy'], ['Eve'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben']], 'teacher_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['The Edge']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t5 WHERE (c2 = 'Amstel' OR c2 = 'Corona') AND c3 > 2;,"SELECT alias1.c1 FROM t4 AS alias1, (SELECT c1 FROM t5 WHERE c2 = 'Corona') AS alias2, (SELECT c1 FROM t6 WHERE c2 != 'Corona') AS alias3 WHERE alias1.c2 = alias2.c1 AND alias1.c1 = alias3.c1;",N,Y,Y
4139,1,"{'student_result': [['Amy'], ['Eve']], 'teacher_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['The Edge']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t5 WHERE (c2 = 'Amstel' OR c2 = 'Corona') AND c3 > 2;,"SELECT alias1.c1 FROM (SELECT alias2.c1 as c1, COUNT(alias2.c2) as NumBarFreq FROM t4 as alias2 GROUP BY alias2.c1 ORDER BY alias2.c1 ASC) as alias1 JOIN (SELECT alias3.c1 as c1, COUNT(alias3.c2) as NumBarFreqLike FROM t4 as alias3 JOIN (SELECT alias4.c1 as c1, alias4.c2 as c2 FROM (SELECT alias5.c1 as c1, t5.c1 as c2, COUNT(t5.c1) as CountBarServesBeerLiked FROM t5, t6 as alias5 WHERE alias5.c2 = t5.c2 GROUP BY alias5.c1, t5.c1 ORDER BY alias5.c1 ASC, t5.c1 ASC) AS alias4 JOIN (SELECT alias6.c1 as c1, COUNT(alias6.c2) as CountBeerLiked FROM t6 as alias6 GROUP BY alias6.c1 ORDER BY alias6.c1 ASC) AS alias5 ON alias4.c1 = alias5.c1 AND alias4.CountBarServesBeerLiked = alias5.CountBeerLiked) as alias6 ON alias3.c1 = alias6.c1 AND alias3.c2 = alias6.c2 GROUP BY alias3.c1) as alias7 ON alias1.c1 = alias7.c1 AND alias1.NumBarFreq = alias7.NumBarFreqLike ORDER BY alias1.c1 ASC;",N,Y,Y
4471,1,"{'student_result': [['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Amy'], ['Amy'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Amy'], ['Amy'], ['Eve'], ['Eve'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Amy'], ['Amy'], ['Eve'], ['Eve'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Amy'], ['Amy'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Coy'], ['Coy'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Coy'], ['Coy'], [None], [None], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Ben'], ['Ben']], 'teacher_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['The Edge']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 AS alias1 FROM t5 WHERE (c2 = 'Amstel' OR c2 = 'Corona') AND c3 > 2;,SELECT t6.c1 AS alias1 FROM t5 LEFT JOIN t6 ON t6.c2 = t5.c2 LEFT JOIN t4 ON t4.c2 = t5.c1;,N,Y,Y
4473,1,"{'student_result': [[None], ['Dan'], ['Coy'], ['Ben'], ['Amy'], ['Eve']], 'teacher_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['The Edge']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t5 WHERE (c2 = 'Amstel' OR c2 = 'Corona') AND c3 > 2;,SELECT DISTINCT alias1.c1 FROM t5 LEFT JOIN t6 alias1 ON alias1.c2 = t5.c2 LEFT JOIN t4 alias2 ON alias2.c2 = t5.c1;,N,Y,Y
5238,1,"{'student_result': [['Ben'], ['Ben'], ['Coy'], ['Coy']], 'teacher_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['The Edge']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 AS alias1 FROM t5 WHERE (c2 = 'Amstel' OR c2 = 'Corona') AND c3 > 2;,SELECT t3.c1 AS alias1 FROM t3 JOIN t4 ON t3.c1 = t4.c1 JOIN t5 ON t4.c2 = t5.c1 WHERE t5.c2 = 'Corona' AND t3.c1 NOT IN ( SELECT c1 AS alias2 FROM t6 WHERE c2 = 'Corona' );,N,Y,Y
85,2,"{'student_result': [['Coy'], ['Coy'], ['Ben'], ['Ben']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,SELECT alias1.c1 FROM t4 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c1 WHERE alias2.c2 = 'Corona' AND alias1.c1 NOT IN (SELECT alias3.c1 FROM t6 alias3 WHERE alias3.c2 = 'Corona');,N,Y,Y
93,2,"{'student_result': [['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Coy'], ['Eve'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,"SELECT t4.c1 FROM t4, t5, t6 WHERE t4.c2 = t5.c1 AND t4.c1 = t6.c1 AND t5.c2 = 'Corona' AND t6.c2 <> 'Corona';",N,Y,Y
401,2,"{'student_result': [['Down Under Pub'], ['The Edge'], ['James Joyce Pub'], ['Satisfaction']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT alias1.c1 FROM t4 alias1 NATURAL JOIN t5 alias2 WHERE alias2.c2 = 'Corona' AND alias1.c1 NOT IN (SELECT alias3.c1 FROM t6 alias3 WHERE alias3.c2 = 'Corona');,SELECT alias1.c1 FROM t5 alias1 WHERE (alias1.c2 = 'Amstel' OR alias1.c2 = 'Corona') AND alias1.c3 > 2;,N,Y,Y
536,2,"{'student_result': [['Amy'], ['Dan'], ['Eve']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 AS alias1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 AS alias2 FROM t6 WHERE c2 = 'Corona');,SELECT DISTINCT c1 AS alias1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 IN (SELECT c1 AS alias2 FROM t6 WHERE c2 = 'Corona');,N,Y,Y
627,2,"{'student_result': [['Amy'], ['Ben'], ['Ben'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 AS alias1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,SELECT c1 AS alias1 FROM t6 WHERE (c2 <> 'Corona');,N,Y,Y
638,2,"{'student_result': [['Dan'], ['Coy'], ['Ben'], ['Eve'], ['Amy']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 AS alias1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 AS alias2 FROM t6 WHERE c2 = 'Corona');,"WITH alias1 AS ( SELECT c1 AS alias2 FROM t6 WHERE c2 != 'Corona' ), alias2 AS ( SELECT * FROM t4 NATURAL JOIN t5 ), alias3 AS ( SELECT c1 AS alias4 FROM alias2 WHERE c2 = 'Corona' ) SELECT * FROM alias1 UNION SELECT * FROM alias3;",N,Y,Y
633,2,"{'student_result': [['Dan'], ['Coy'], ['Ben'], ['Amy'], ['Eve']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,"-- Define CTE for alias1
WITH alias1 AS (
    SELECT c1 
    FROM t6
    WHERE c2 <> 'Corona'
),

-- Define CTE for alias2
alias2 AS (
    SELECT * 
    FROM t4
    NATURAL JOIN t5
),

-- Define CTE for alias3 using alias2
alias3 AS (
    SELECT c1
    FROM alias2 
    WHERE c2 = 'Corona'
)

-- Final query to find intersection of alias1 and alias3
SELECT * FROM alias1 INTERSECT SELECT * FROM alias3;",N,Y,Y
642,2,"{'student_result': [['Dan'], ['Coy'], ['Dan'], ['Coy'], ['Eve'], ['Dan'], ['Ben'], ['Amy'], ['Dan'], ['Ben']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 AS alias1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,"WITH v1 AS ( SELECT c1 AS alias1 FROM t6 WHERE c2 != 'Corona' ), v2 AS ( SELECT * FROM t4 NATURAL JOIN t5 ), v3 AS ( SELECT c1 AS alias1 FROM v2 WHERE c2 = 'Corona' ) SELECT * FROM v3;",N,Y,Y
662,2,"{'student_result': [['Amy'], ['Ben'], ['Coy'], ['Dan'], ['Eve']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 AS alias1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,SELECT DISTINCT alias1.c1 AS alias2 FROM (SELECT DISTINCT c1 FROM t6 WHERE c2 <> 'Corona') AS alias1 JOIN t4 AS alias3 ON alias1.c1 = alias3.c1 JOIN t5 AS alias4 ON alias3.c2 = alias4.c1 WHERE alias4.c2 = 'Corona';,N,Y,Y
739,2,"{'student_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['The Edge']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 AS alias1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,SELECT DISTINCT c1 AS alias1 FROM t5 NATURAL JOIN t4 NATURAL JOIN (SELECT c1 AS alias2 FROM t1 WHERE c1 NOT IN (SELECT t6.c1 FROM t6 WHERE c2 = 'Corona')) AS alias3 WHERE c2 = 'Corona';,N,Y,Y
894,2,"{'student_result': [['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT alias1.c1 FROM t4 alias1 NATURAL JOIN t5 alias2 WHERE alias2.c2 = 'Corona' AND alias1.c1 NOT IN (SELECT alias3.c1 FROM t6 alias3 WHERE alias3.c2 = 'Corona');,SELECT alias1.c1 FROM t4 alias1 WHERE alias1.c1 NOT IN (SELECT alias2.c1 FROM t6 alias2 WHERE alias2.c2 = 'Corona');,N,Y,Y
903,2,"{'student_result': [['Amy'], ['Ben'], ['Dan'], ['Eve']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT alias1.c1 FROM t4 alias1 NATURAL JOIN t5 alias2 WHERE alias2.c2 = 'Corona' AND alias1.c1 NOT IN (SELECT alias3.c1 FROM t6 alias3 WHERE alias3.c2 = 'Corona');,SELECT DISTINCT alias1.c1 FROM t4 alias1 WHERE alias1.c2 IN (SELECT alias2.c1 FROM t5 alias2 WHERE alias2.c2 = 'Erdinger');,N,Y,Y
961,2,"{'student_result': [['Satisfaction']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,SELECT c1 FROM t5 GROUP BY c1 HAVING COUNT(c2) >= 5;,N,Y,Y
1576,2,"{'student_result': [['Coy'], ['Ben']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,SELECT DISTINCT c1 FROM t6 alias1 WHERE NOT EXISTS(SELECT * FROM t6 WHERE alias1.c1 = t6.c1 AND t6.c2 = 'Corona'),N,Y,Y
1861,2,"{'student_result': [['Ben'], ['Coy']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,SELECT DISTINCT alias1.c1 FROM t6 AS alias1 WHERE alias1.c1 NOT IN (SELECT DISTINCT alias1.c1 FROM t6 AS alias1 NATURAL JOIN t4 JOIN t5 ON t4.c2 = t5.c1 WHERE alias1.c2 = 'Corona' AND t5.c2 = 'Corona');,N,Y,Y
1906,2,"{'student_result': [['Ben'], ['Ben'], ['Coy']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,SELECT c1 FROM t6 WHERE c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,N,Y,Y
2914,2,"{'student_result': [['Ben'], ['Ben'], ['Coy'], ['Coy']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,SELECT alias1.c1 FROM t1 alias1 JOIN t4 alias2 ON alias1.c1 = alias2.c1 JOIN t5 alias3 ON alias2.c2 = alias3.c1 WHERE alias3.c2 = 'Corona' AND alias1.c1 NOT IN (SELECT alias4.c1 FROM t6 alias4 WHERE alias4.c2 = 'Corona');,N,Y,Y
3055,2,"{'student_result': [['Coy'], ['Coy'], ['Ben'], ['Ben'], ['Ben'], ['Ben']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 as alias1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 as alias2 FROM t6 WHERE c2 = 'Corona');,"SELECT t6.c1 as alias1 FROM t6, t5, t4 WHERE t4.c2 = t5.c1 AND t4.c1 = t6.c1 AND t5.c2 = 'Corona' AND t6.c1 NOT IN (SELECT c1 as alias2 FROM t6 WHERE c2 = 'Corona');",N,Y,Y
3487,2,"{'student_result': [['Amy'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Eve']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,SELECT c1 FROM t6 NATURAL JOIN t4;,N,Y,Y
6880,2,"{'student_result': [['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve']], 'teacher_result': [['Ben'], ['Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT DISTINCT c1 FROM t4 NATURAL JOIN t5 WHERE c2 = 'Corona' AND c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona');,"SELECT t4.c1 FROM t4, t6, t5 WHERE t6.c1 = t4.c1 AND t6.c2 != 'Corona';",N,Y,Y
256,3,"{'student_result': [[1]], 'teacher_result': [['Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT c1 FROM t5 GROUP BY c1 HAVING COUNT(c2) >= 5;,SELECT COUNT(*) AS bar_count FROM ( SELECT c1 FROM t5 GROUP BY c1 HAVING COUNT(DISTINCT c2) >= 5 ) AS alias1;,N,Y,Y
2673,3,"{'student_result': [['Talk of the Town'], ['Satisfaction'], ['James Joyce Pub'], ['The Edge'], ['Down Under Pub']], 'teacher_result': [['Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT c1 FROM t5 GROUP BY c1 HAVING COUNT(c2) >= 5;,SELECT DISTINCT c1 FROM t5 WHERE (5 <= (SELECT COUNT(DISTINCT t5.c2) FROM t5));,N,Y,Y
2671,3,"{'student_result': [['Down Under Pub'], ['Down Under Pub'], ['Down Under Pub'], ['The Edge'], ['The Edge'], ['The Edge'], ['James Joyce Pub'], ['James Joyce Pub'], ['James Joyce Pub'], ['James Joyce Pub'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Talk of the Town'], ['Talk of the Town']], 'teacher_result': [['Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT c1 FROM t5 GROUP BY c1 HAVING COUNT(c2) >= 5;,SELECT c1 FROM t5 WHERE (5<= (SELECT COUNT(Distinct t5.c2) FROM t5));,N,Y,Y
2795,3,"{'student_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['Talk of the Town'], ['The Edge']], 'teacher_result': [['Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT c1 FROM t5 GROUP BY c1 HAVING COUNT(c2) >= 5;,SELECT alias1.c1 FROM t5 alias1 GROUP BY alias1.c1 HAVING COUNT(DISTINCT alias1.c2) > 1;,N,Y,Y
5287,3,"{'student_result': [[2], [5], [4], [3], [3]], 'teacher_result': [['Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT c1 FROM t5 GROUP BY c1 HAVING COUNT(c2) >= 5;,SELECT COUNT(c2) FROM t5 GROUP BY c1;,N,Y,Y
6186,3,"{'student_result': [['Ben'], ['Coy']], 'teacher_result': [['Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT c1 FROM t5 GROUP BY c1 HAVING COUNT(c2) >= 5;,SELECT DISTINCT alias1.c1 FROM t3 alias1 JOIN t4 alias2 ON alias1.c1 = alias2.c1 JOIN t1 alias3 ON alias2.c2 = alias3.c1 JOIN t5 alias4 ON alias3.c1 = alias4.c1 WHERE alias4.c2 = 'Corona' AND alias1.c1 NOT IN (SELECT alias5.c1 FROM t6 alias5 JOIN t2 alias6 ON alias5.c2 = alias6.c1 WHERE alias6.c1 = 'Corona' GROUP BY alias5.c1);,N,Y,Y
7692,3,"{'student_result': [[1], [2]], 'teacher_result': [['Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT c1 FROM t5 GROUP BY c1 HAVING COUNT(c2) >= 5;,SELECT c3 FROM t4 GROUP BY c3 HAVING c3 >= MAX(c3);,N,Y,Y
7702,3,"{'student_result': [['Coy']], 'teacher_result': [['Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT c1 FROM t5 GROUP BY c1 HAVING COUNT(c2) >= 5;,SELECT c1 FROM t4 GROUP BY c1 HAVING COUNT(c1) >= SUM(c3);,N,Y,Y
7727,3,"{'student_result': [['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction'], ['Satisfaction']], 'teacher_result': [['Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);",SELECT c1 FROM t5 GROUP BY c1 HAVING COUNT(c2) >= 5;,"--  Out of all bars that serve beers, group them by bar. (i) Is also (A).
WITH alias1 AS (
	SELECT c1, c2
	FROM t5
), 
-- For each of these entries in (i), select distinct bar group and that bar group's count of beers. (j)
alias2 AS (
	SELECT c1, COUNT(DISTINCT c2) AS count
	FROM alias1
	GROUP BY c1
),
-- For each entry in (j), select those with count < 5.
alias3 AS (
	SELECT c1
	FROM alias2 a
	WHERE a.count < 5
)
SELECT a.c1
FROM alias1 a, alias3 b
WHERE a.c1 NOT IN (SELECT * FROM alias3);",N,Y,Y
47,4,"{'student_result': [['Amy', 'Ben'], ['Amy', 'Dan'], ['Amy', 'Eve'], ['Ben', 'Coy'], ['Ben', 'Dan'], ['Ben', 'Eve'], ['Coy', 'Dan'], ['Dan', 'Eve']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1 AS c1A, alias2.c1 AS c1B FROM t4 alias1, t4 alias2 WHERE alias1.c1 != alias2.c1 AND alias1.c3 = alias2.c3 AND alias1.c1 < alias2.c1",N,Y,Y
156,4,"{'student_result': [['Amy', 'Eve'], ['Amy', 'Dan'], ['Amy', 'Dan'], ['Amy', 'Dan'], ['Amy', 'Ben'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Coy'], ['Ben', 'Coy'], ['Ben', 'Eve'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Coy'], ['Ben', 'Coy'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Dan', 'Eve'], ['Dan', 'Eve'], ['Dan', 'Eve']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1, alias2.c1 FROM t4 alias1 JOIN t4 alias2 ON alias1.c3 = alias2.c3 WHERE alias1.c1 < alias2.c1",N,Y,Y
178,4,"{'student_result': [['Amy', 'Eve'], ['Amy', 'Coy'], ['Amy', 'Amy'], ['Ben', 'Ben'], ['Coy', 'Eve'], ['Coy', 'Coy'], ['Coy', 'Amy'], ['Dan', 'Dan'], ['Eve', 'Eve'], ['Eve', 'Coy'], ['Eve', 'Amy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1, alias2.c1 FROM t3 AS alias1, t3 AS alias2 WHERE (SELECT SUM(t4.c3) FROM t4 WHERE t4.c1 = alias1.c1) = (SELECT SUM(t4.c3) FROM t4 WHERE t4.c1 = alias2.c1)",N,Y,Y
275,4,"{'student_result': [['Amy', 'Ben'], ['Dan', 'Eve'], ['Coy', 'Ben'], ['Amy', 'Eve'], ['Ben', 'Eve'], ['Amy', 'Dan'], ['Dan', 'Amy'], ['Eve', 'Ben'], ['Eve', 'Dan'], ['Dan', 'Ben'], ['Ben', 'Coy'], ['Ben', 'Dan'], ['Ben', 'Amy'], ['Dan', 'Coy'], ['Coy', 'Dan'], ['Eve', 'Amy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1, alias2.c1 FROM t4 AS alias1, t4 AS alias2 WHERE (alias1.c1 <> alias2.c1 AND alias1.c3 = alias2.c3)",N,Y,Y
282,4,"{'student_result': [['Coy', 'Amy'], ['Eve', 'Amy'], ['Eve', 'Coy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as totalVisits FROM t4 GROUP BY c1) AS alias1, (SELECT c1, sum(c3) as totalVisits FROM t4 GROUP BY c1) AS alias2 WHERE (alias1.c1 <> alias2.c1 AND alias1.totalVisits = alias2.totalVisits AND alias1.c1 > alias2.c1)",N,Y,Y
351,4,"{'student_result': [['Amy', 'Eve'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Coy', 'Dan'], ['Dan', 'Coy'], ['Dan', 'Ben'], ['Dan', 'Ben'], ['Eve', 'Amy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1, alias2.c1 FROM t4 alias1 CROSS JOIN t4 alias2 WHERE alias1.c1 != alias2.c1 AND alias1.c2 = alias2.c2 AND alias1.c3 = alias2.c3",N,Y,Y
353,4,"{'student_result': [['Amy', 'Eve'], ['Ben', 'Dan'], ['Coy', 'Dan'], ['Dan', 'Ben'], ['Dan', 'Coy'], ['Eve', 'Amy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1, alias2.c1 FROM t4 alias1 CROSS JOIN t4 alias2 WHERE alias1.c1 != alias2.c1 AND alias1.c2 = alias2.c2 AND alias1.c3 = alias2.c3",N,Y,Y
361,4,"{'student_result': [['Amy', 'Eve'], ['Ben', 'Dan'], ['Coy', 'Dan']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1, alias2.c1 FROM t4 alias1 CROSS JOIN t4 alias2 WHERE alias1.c1 < alias2.c1 AND alias1.c2 = alias2.c2 AND alias1.c3 = alias2.c3",N,Y,Y
693,4,"{'student_result': [['Ben', 'Coy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1, alias2.c1 FROM t4 alias1 JOIN t4 alias2 ON alias1.c1 < alias2.c1 WHERE NOT EXISTS (SELECT alias3.c1 FROM t5 alias3 LEFT JOIN t6 alias4 ON alias3.c2 = alias4.c2 AND (alias1.c1 = alias4.c1 OR alias2.c1 = alias4.c1) WHERE alias1.c2 = alias3.c1 AND alias4.c1 IS NULL) GROUP BY alias1.c1, alias2.c1 HAVING SUM(alias1.c3) = SUM(alias2.c3);",N,Y,Y
711,4,"{'student_result': [['Amy', 'Eve'], ['Amy', 'Dan'], ['Amy', 'Dan'], ['Amy', 'Dan'], ['Amy', 'Ben'], ['Amy', 'Amy'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Coy'], ['Ben', 'Coy'], ['Ben', 'Ben'], ['Ben', 'Ben'], ['Ben', 'Eve'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Ben'], ['Ben', 'Amy'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Coy'], ['Ben', 'Coy'], ['Ben', 'Ben'], ['Ben', 'Ben'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Coy'], ['Coy', 'Coy'], ['Coy', 'Ben'], ['Coy', 'Ben'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Coy'], ['Coy', 'Coy'], ['Coy', 'Ben'], ['Coy', 'Ben'], ['Dan', 'Eve'], ['Dan', 'Dan'], ['Dan', 'Dan'], ['Dan', 'Dan'], ['Dan', 'Ben'], ['Dan', 'Amy'], ['Dan', 'Dan'], ['Dan', 'Dan'], ['Dan', 'Coy'], ['Dan', 'Coy'], ['Dan', 'Ben'], ['Dan', 'Ben'], ['Dan', 'Dan'], ['Dan', 'Dan'], ['Dan', 'Coy'], ['Dan', 'Coy'], ['Dan', 'Ben'], ['Dan', 'Ben'], ['Dan', 'Eve'], ['Dan', 'Dan'], ['Dan', 'Dan'], ['Dan', 'Dan'], ['Dan', 'Ben'], ['Dan', 'Amy'], ['Dan', 'Eve'], ['Dan', 'Dan'], ['Dan', 'Dan'], ['Dan', 'Dan'], ['Dan', 'Ben'], ['Dan', 'Amy'], ['Eve', 'Eve'], ['Eve', 'Dan'], ['Eve', 'Dan'], ['Eve', 'Dan'], ['Eve', 'Ben'], ['Eve', 'Amy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1, alias2.c1 FROM t4 alias1 CROSS JOIN t4 alias2 WHERE alias1.c3 = alias2.c3",N,Y,Y
754,4,"{'student_result': [['Ben', 'Amy'], ['Coy', 'Ben'], ['Coy', 'Ben'], ['Coy', 'Ben'], ['Coy', 'Ben'], ['Dan', 'Ben'], ['Dan', 'Amy'], ['Dan', 'Coy'], ['Dan', 'Coy'], ['Dan', 'Ben'], ['Dan', 'Ben'], ['Dan', 'Coy'], ['Dan', 'Coy'], ['Dan', 'Ben'], ['Dan', 'Ben'], ['Dan', 'Ben'], ['Dan', 'Amy'], ['Dan', 'Ben'], ['Dan', 'Amy'], ['Eve', 'Dan'], ['Eve', 'Dan'], ['Eve', 'Dan'], ['Eve', 'Ben'], ['Eve', 'Amy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1, alias2.c1 FROM t4 alias1 JOIN t4 alias2 ON alias1.c3 = alias2.c3 WHERE alias1.c1 > alias2.c1",N,Y,Y
759,4,"{'student_result': [['Ben', 'Amy'], ['Coy', 'Ben'], ['Dan', 'Amy'], ['Dan', 'Ben'], ['Dan', 'Coy'], ['Eve', 'Amy'], ['Eve', 'Ben'], ['Eve', 'Dan']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1, alias2.c1 FROM t4 alias1 JOIN t4 alias2 ON alias1.c3 = alias2.c3 WHERE alias1.c1 > alias2.c1",N,Y,Y
855,4,"{'student_result': [['Amy', 'Eve'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Coy', 'Dan']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1 AS drinkerA, alias2.c1 AS drinkerB FROM t4 alias1 JOIN t4 alias2 ON alias1.c2 = alias2.c2 AND alias1.c3 = alias2.c3 AND alias1.c1 < alias2.c1;",N,Y,Y
1154,4,"{'student_result': [['Coy', 'Eve'], ['Coy', 'Amy'], ['Eve', 'Coy'], ['Eve', 'Amy'], ['Amy', 'Coy'], ['Amy', 'Eve']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1 AS drinker1, alias2.c1 AS drinker2 FROM ( SELECT t1.c1, SUM(t4.c3) AS total_times_a_week FROM t1 INNER JOIN t4 ON t4.c1 = t1.c1 GROUP BY t1.c1 ) AS alias1 INNER JOIN ( SELECT t1.c1, SUM(t4.c3) AS total_times_a_week FROM t1 INNER JOIN t4 ON t4.c1 = t1.c1 GROUP BY t1.c1 ) AS alias2 ON alias1.total_times_a_week = alias2.total_times_a_week AND alias1.c1 <> alias2.c1 ORDER BY alias1.total_times_a_week;",N,Y,Y
1275,4,"{'student_result': [['Amy', 'Ben'], ['Amy', 'Dan'], ['Amy', 'Eve'], ['Ben', 'Dan'], ['Ben', 'Eve'], ['Dan', 'Eve']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1 AS c1, alias2.c1 AS c2 FROM t4 AS alias1 JOIN t4 AS alias2 ON alias1.c2 = alias2.c2 AND alias1.c1 < alias2.c1 JOIN t6 AS alias3 ON alias1.c1 = alias3.c1 JOIN t6 AS alias4 ON alias2.c1 = alias4.c1 JOIN t5 AS alias5 ON alias1.c2 = alias5.c1 AND alias3.c2 = alias5.c2 AND alias4.c2 = alias5.c2;",N,Y,Y
1371,4,"{'student_result': [['Amy', 'Eve'], ['Amy', 'Dan'], ['Amy', 'Dan'], ['Amy', 'Dan'], ['Amy', 'Ben'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Coy'], ['Ben', 'Coy'], ['Ben', 'Eve'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Amy'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Coy'], ['Ben', 'Coy'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Ben'], ['Coy', 'Ben'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Ben'], ['Coy', 'Ben'], ['Dan', 'Eve'], ['Dan', 'Ben'], ['Dan', 'Amy'], ['Dan', 'Coy'], ['Dan', 'Coy'], ['Dan', 'Ben'], ['Dan', 'Ben'], ['Dan', 'Coy'], ['Dan', 'Coy'], ['Dan', 'Ben'], ['Dan', 'Ben'], ['Dan', 'Eve'], ['Dan', 'Ben'], ['Dan', 'Amy'], ['Dan', 'Eve'], ['Dan', 'Ben'], ['Dan', 'Amy'], ['Eve', 'Dan'], ['Eve', 'Dan'], ['Eve', 'Dan'], ['Eve', 'Ben'], ['Eve', 'Amy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1, alias2.c1 FROM t4 alias1, t4 alias2 WHERE alias1.c1<>alias2.c1 AND alias1.c3=alias2.c3;",N,Y,Y
1591,4,"{'student_result': [['Amy', 'Ben'], ['Dan', 'Eve'], ['Amy', 'Eve'], ['Ben', 'Coy'], ['Amy', 'Coy'], ['Coy', 'Eve'], ['Ben', 'Eve'], ['Amy', 'Dan'], ['Ben', 'Dan'], ['Coy', 'Dan']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1, alias2.c1 FROM t4 alias1, t4 alias2 GROUP BY alias1.c1, alias2.c1 HAVING COUNT(alias1.c3) = COUNT(alias2.c3) AND (alias1.c1 <> alias2.c1 AND alias1.c1 < alias2.c1);",N,Y,Y
1647,4,"{'student_result': [['Amy', 'Ben'], ['Amy', 'Ben'], ['Amy', 'Ben'], ['Amy', 'Coy'], ['Amy', 'Coy'], ['Amy', 'Dan'], ['Amy', 'Dan'], ['Amy', 'Dan'], ['Amy', 'Dan'], ['Amy', 'Dan'], ['Amy', 'Eve'], ['Ben', 'Coy'], ['Ben', 'Coy'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Eve'], ['Ben', 'Coy'], ['Ben', 'Coy'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Eve'], ['Ben', 'Coy'], ['Ben', 'Coy'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Dan'], ['Ben', 'Eve'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Eve'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Dan'], ['Coy', 'Eve'], ['Dan', 'Eve'], ['Dan', 'Eve'], ['Dan', 'Eve'], ['Dan', 'Eve'], ['Dan', 'Eve']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1, alias2.c1 FROM t4 alias1, t4 alias2 WHERE NOT (alias1.c1 = alias2.c1) AND alias1.c1 < alias2.c1;",N,Y,Y
1938,4,"{'student_result': [['Amy', 'Amy'], ['Amy', 'Eve'], ['Ben', 'Ben'], ['Coy', 'Coy'], ['Dan', 'Dan'], ['Eve', 'Amy'], ['Eve', 'Eve']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, SUM(c3) AS st FROM t4 GROUP BY c1) alias1, (SELECT c1, SUM(c3) AS st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1, alias2.c1 FROM t4 alias1, t4 alias2 GROUP BY alias1.c1, alias2.c1 HAVING SUM(alias1.c3) = SUM(alias2.c3)",N,Y,Y
1944,4,"{'student_result': [['Amy', 'Eve'], ['Eve', 'Amy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, SUM(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, SUM(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1, alias2.c1 FROM t4 alias1, t4 alias2 WHERE alias1.c1 <> alias2.c1 GROUP BY alias1.c1, alias2.c1 HAVING SUM(alias1.c3) = SUM(alias2.c3)",N,Y,Y
2794,4,"{'student_result': [['Eve', 'Amy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1 as drinker1, alias2.c1 as drinker2 FROM t4 AS alias1, t4 AS alias2 WHERE alias1.c1 > alias2.c1 GROUP BY alias1.c1, alias2.c1 HAVING sum(alias1.c3) = sum(alias2.c3)",N,Y,Y
2153,4,"{'student_result': [['Amy', 'Eve'], ['Amy', 'Coy'], ['Amy', 'Coy'], ['Coy', 'Eve'], ['Coy', 'Eve']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1 AS drinkerA, alias2.c1 AS drinkerB FROM t4 alias1, t4 alias2 WHERE alias1.c1 < alias2.c1 AND alias1.c1 != alias2.c1 AND (SELECT SUM(alias3.c3) FROM t4 alias3 WHERE alias3.c1 = alias1.c1) = (SELECT SUM(alias4.c3) FROM t4 alias4 WHERE alias4.c1 = alias2.c1);",N,Y,Y
2220,4,"{'student_result': [['Dan', 'Eve'], ['Ben', 'Dan'], ['Amy', 'Dan'], ['Amy', 'Eve'], ['Coy', 'Dan'], ['Amy', 'Ben'], ['Ben', 'Eve']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1 AS drinkerA, alias2.c1 AS drinkerB FROM t4 alias1 JOIN t4 alias2 ON alias1.c2 = alias2.c2 AND alias1.c1 < alias2.c1 GROUP BY alias1.c1, alias2.c1 HAVING COUNT(alias1.c2) = COUNT(alias2.c2);",N,Y,Y
2390,4,"{'student_result': [['Amy', 'Eve'], ['Ben', 'Eve'], ['Coy', 'Eve'], ['Dan', 'Eve']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1 AS drinkerA, alias2.c1 AS drinkerB FROM t4 alias1 JOIN t4 alias2 ON alias1.c1 < alias2.c1 GROUP BY alias1.c1, alias2.c1 HAVING SUM(alias1.c3) = (SELECT SUM(alias2.c3) FROM t4 alias2 WHERE alias2.c1 = alias1.c1)",N,Y,Y
3295,4,"{'student_result': [['Eve', 'Amy'], ['Eve', 'Eve'], ['Ben', 'Ben'], ['Amy', 'Eve'], ['Amy', 'Amy'], ['Coy', 'Coy'], ['Dan', 'Dan']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, SUM(c3) AS st FROM t4 GROUP BY c1) alias1, (SELECT c1, SUM(c3) AS st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1, alias2.c1 FROM t4 alias1, t4 alias2 GROUP BY alias1.c1, alias2.c1 HAVING SUM(alias1.c3) = SUM(alias2.c3);",N,Y,Y
3522,4,"{'student_result': [['Dan', 'Ben'], ['Dan', 'Coy'], ['Eve', 'Amy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1 AS drinkerA, alias2.c1 AS drinkerB FROM t4 AS alias1, t4 AS alias2 WHERE alias1.c2 = alias2.c2 AND alias1.c1 > alias2.c1 AND alias1.c3 = alias2.c3",N,Y,Y
3971,4,"{'student_result': [['Eve', 'Eve'], ['Eve', 'Eve'], ['Coy', 'Coy']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","WITH alias1 AS ( SELECT c1, SUM(c3) AS total_times FROM t4 GROUP BY c1 ) SELECT alias2.c1 AS drinkerA, alias2.c1 AS drinkerB FROM alias1 alias3 JOIN alias1 alias2 ON alias3.total_times = alias2.total_times AND alias3.c1 < alias2.c1;",N,Y,Y
4048,4,"{'student_result': [['Amy', 'Eve'], ['Coy', 'Eve']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, SUM(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, SUM(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1 AS drinkerA, alias2.c1 AS drinkerB FROM t4 alias1, t4 alias2 WHERE alias1.c1 < alias2.c1 GROUP BY alias1.c1, alias2.c1 HAVING SUM(alias1.c3) = (SELECT SUM(alias3.c3) FROM t4 alias3 WHERE alias3.c1 = alias2.c1)",N,Y,Y
4188,4,"{'student_result': [['Dan', 'Eve'], ['Coy', 'Ben'], ['Dan', 'Amy'], ['Dan', 'Dan'], ['Dan', 'Ben'], ['Ben', 'Amy'], ['Coy', 'Amy'], ['Ben', 'Ben'], ['Coy', 'Eve'], ['Ben', 'Eve'], ['Ben', 'Dan'], ['Coy', 'Dan']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT t4.c1 AS drinkerA, frequentsB.drinkerB FROM t4 JOIN (SELECT t4.c1 AS drinkerB, t4.c3 FROM t4) AS frequentsB ON t4.c3 < frequentsB.c3;",N,Y,FIXED
4305,4,"{'student_result': [['Coy', 'Amy'], ['Coy', 'Eve'], ['Ben', 'Eve'], ['Ben', 'Dan'], ['Dan', 'Eve'], ['Coy', 'Ben'], ['Dan', 'Amy'], ['Ben', 'Amy'], ['Coy', 'Dan']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT alias1.c1, alias2.c1 FROM t4 as alias1, t4 as alias2 GROUP BY alias1.c1, alias2.c1 HAVING SUM(alias1.c3) < SUM(alias2.c3);",N,Y,Y
5345,4,"{'student_result': [['Amy', 'Ben'], ['Dan', 'Eve'], ['Coy', 'Ben'], ['Amy', 'Eve'], ['Amy', 'Amy'], ['Ben', 'Eve'], ['Eve', 'Eve'], ['Amy', 'Dan'], ['Coy', 'Coy'], ['Dan', 'Amy'], ['Eve', 'Ben'], ['Eve', 'Dan'], ['Dan', 'Ben'], ['Dan', 'Dan'], ['Ben', 'Coy'], ['Ben', 'Dan'], ['Ben', 'Amy'], ['Dan', 'Coy'], ['Coy', 'Dan'], ['Eve', 'Amy'], ['Ben', 'Ben']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1, alias2.c1 FROM t4 alias1, t4 alias2 WHERE alias1.c3 = alias2.c3",N,Y,Y
5852,4,"{'student_result': [['Ben', 'Dan']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","WITH alias1 AS ( SELECT alias2.c1 AS c1, alias3.c1 AS c2, SUM(alias2.c3) AS total_freq FROM t4 alias2, t4 alias3 WHERE alias2.c1 < alias3.c1 AND alias2.c2 = alias3.c2 GROUP BY alias2.c1, alias3.c1 ) SELECT c1, c2 FROM alias1 WHERE total_freq = ( SELECT MAX(total_freq) FROM alias1 );",N,Y,Y
7146,4,"{'student_result': [['Amy', 'Ben'], ['Amy', 'Coy'], ['Amy', 'Dan'], ['Amy', 'Eve'], ['Ben', 'Amy'], ['Ben', 'Coy'], ['Ben', 'Dan'], ['Ben', 'Eve'], ['Coy', 'Amy'], ['Coy', 'Ben'], ['Coy', 'Dan'], ['Coy', 'Eve'], ['Dan', 'Amy'], ['Dan', 'Ben'], ['Dan', 'Coy'], ['Dan', 'Eve'], ['Eve', 'Amy'], ['Eve', 'Ben'], ['Eve', 'Coy'], ['Eve', 'Dan']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias1, (SELECT c1, sum(c3) as st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT alias1.c1, alias2.c1 FROM t4 alias1, t4 alias2 WHERE alias1.c1 <> alias2.c1 GROUP BY alias1.c1, alias2.c1 HAVING COUNT(alias1.c3) = COUNT(alias2.c3)",N,Y,Y
7174,4,"{'student_result': [['Ben', 'Amy'], ['Coy', 'Amy'], ['Coy', 'Ben'], ['Dan', 'Amy'], ['Dan', 'Ben'], ['Dan', 'Coy'], ['Eve', 'Amy'], ['Eve', 'Ben'], ['Eve', 'Coy'], ['Eve', 'Dan']], 'teacher_result': [['Coy', 'Eve'], ['Amy', 'Eve'], ['Amy', 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias1.c1, alias2.c1 FROM (SELECT c1, SUM(c3) AS st FROM t4 GROUP BY c1) alias1, (SELECT c1, SUM(c3) AS st FROM t4 GROUP BY c1) alias2 WHERE alias1.c1 < alias2.c1 AND alias1.st = alias2.st","SELECT DISTINCT CASE WHEN t4.c1 > alias1.c1 THEN t4.c1 ELSE alias1.c1 END AS ""t4.c1"", CASE WHEN t4.c1 > alias1.c1 THEN alias1.c1 ELSE t4.c1 END AS ""alias1.c1"" FROM t4, t4 AS alias1 WHERE t4.c1 <> alias1.c1 GROUP BY t4.c1, alias1.c1 HAVING COUNT(t4.c3) = COUNT(alias1.c3)",N,Y,Y
24,5,"{'student_result': [['Amy'], ['Ben'], ['Coy'], ['Dan'], ['Eve']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));","SELECT c1 FROM t3 WHERE EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",N,Y,Y
25,5,"{'student_result': [['Coy']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",N,Y,Y
45,5,"{'student_result': [['Amy'], ['Eve']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));","SELECT alias3.c1 FROM (SELECT alias4.c1 as c1, COUNT(alias4.c2) as NumBarFreq FROM t4 as alias4 GROUP BY alias4.c1 ORDER BY alias4.c1 ASC) as alias3 JOIN (SELECT alias5.c1 as c1, COUNT(alias5.c2) as NumBarFreqLike FROM t4 as alias5 JOIN (SELECT alias6.c1 as c1, alias6.c2 as c2 FROM (SELECT alias7.c1 as c1, alias8.c1 as c2, COUNT(alias8.c1) as CountBarServesBeerLiked FROM t5 alias8, t6 as alias7 WHERE alias7.c2 = alias8.c2 GROUP BY alias7.c1, alias8.c1 ORDER BY alias7.c1 ASC, alias8.c1 ASC) AS alias6 JOIN (SELECT alias9.c1 as c1, COUNT(alias9.c2) as CountBeerLiked FROM t6 as alias9 GROUP BY alias9.c1 ORDER BY alias9.c1 ASC) AS alias10 ON alias6.c1 = alias10.c1 AND alias6.CountBarServesBeerLiked = alias10.CountBeerLiked) as alias11 ON alias5.c1 = alias11.c1 AND alias5.c2 = alias11.c2 GROUP BY alias5.c1) as alias12 ON alias3.c1 = alias12.c1 AND alias3.NumBarFreq = alias12.NumBarFreqLike ORDER BY alias3.c1 ASC;",N,Y,Y
100,5,"{'student_result': [['Amy'], ['Ben'], ['Dan'], ['Eve']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));","SELECT DISTINCT alias1.c1 FROM t4 alias1 WHERE alias1.c1 NOT IN (SELECT DISTINCT alias2.c1 FROM t4 alias2 WHERE NOT EXISTS (SELECT * FROM t5 alias3, t6 alias4 WHERE alias2.c2 = alias3.c1 AND alias2.c1 = alias4.c1 AND alias3.c2 = alias4.c2));",N,Y,Y
126,5,"{'student_result': [['Coy'], ['Coy']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT alias1.c1 FROM t4 alias1 WHERE NOT EXISTS (SELECT * FROM t4 alias2 JOIN t5 alias3 ON alias2.c2 = alias3.c1 JOIN t6 alias4 ON alias2.c1 = alias4.c1 AND alias3.c2 = alias4.c2 WHERE alias1.c1 = alias2.c1);,N,Y,Y
128,5,"{'student_result': [['Ben'], ['Ben'], ['Ben'], ['Amy'], ['Eve'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));","SELECT alias1.c1 FROM t4 alias1 WHERE EXISTS (SELECT * FROM t4 alias2, t5 alias3, t6 alias4 WHERE alias1.c1 = alias2.c1 AND alias2.c2 = alias3.c1 AND alias3.c2 = alias4.c2 AND alias2.c1 = alias4.c1);",N,Y,Y
131,5,"{'student_result': [['Ben'], ['Dan'], ['Dan'], ['Dan'], ['Dan']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT alias1.c1 FROM t4 alias1 WHERE NOT EXISTS (SELECT * FROM t5 alias2 WHERE alias1.c2 = alias2.c1 AND NOT EXISTS (SELECT * FROM t6 alias3 WHERE alias3.c1 = alias1.c1 AND alias2.c2 = alias3.c2));,N,Y,Y
132,5,"{'student_result': [['Amy'], ['Coy'], ['Eve']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT DISTINCT alias1.c1 FROM t4 alias1 WHERE NOT EXISTS (SELECT * FROM t4 alias2 WHERE alias1.c1 = alias2.c1 AND alias2.c2 NOT IN (SELECT alias3.c1 FROM t5 alias3 WHERE NOT EXISTS (SELECT * FROM t6 alias4 WHERE alias4.c1 = alias2.c1 AND alias4.c2 = alias3.c2)));,N,Y,Y
133,5,"{'student_result': [], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT DISTINCT alias1.c1 FROM t4 alias1 WHERE NOT EXISTS (SELECT alias2.c1 FROM t5 alias2 WHERE alias2.c1 = alias1.c2 AND NOT EXISTS (SELECT alias3.c2 FROM t6 alias3 WHERE alias3.c1 = alias1.c1 AND alias3.c2 = alias2.c2)) AND NOT EXISTS (SELECT alias4.c1 FROM t5 alias4 WHERE alias4.c1 = alias1.c2 AND EXISTS (SELECT alias5.c2 FROM t6 alias5 WHERE alias5.c1 = alias1.c1 AND alias5.c2 != alias4.c2));,N,Y,Y
138,5,"{'student_result': [['Dan']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT DISTINCT alias1.c1 FROM t4 alias1 WHERE NOT EXISTS (SELECT alias2.c1 FROM t5 alias2 WHERE alias2.c1 = alias1.c2 AND NOT EXISTS (SELECT alias3.c2 FROM t6 alias3 WHERE alias3.c1 = alias1.c1 AND alias3.c2 = alias2.c2)) AND NOT EXISTS (SELECT alias4.c1 FROM t5 alias4 WHERE alias4.c1 NOT IN (SELECT alias5.c2 FROM t4 alias5 WHERE alias5.c1 = alias1.c1));,N,Y,Y
145,5,"{'student_result': [['Ben'], ['Dan']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT DISTINCT alias1.c1 FROM t4 alias1 WHERE NOT EXISTS (SELECT alias2.c1 FROM t5 alias2 LEFT JOIN t6 alias3 ON alias2.c2 = alias3.c2 AND alias1.c1 = alias3.c1 WHERE alias2.c1 = alias1.c2 AND (alias3.c1 IS NULL OR alias3.c1 <> alias1.c1)) AND NOT EXISTS (SELECT alias2.c1 FROM t5 alias2 WHERE alias2.c1 = alias1.c2 AND alias2.c2 NOT IN (SELECT alias3.c2 FROM t6 alias3 WHERE alias3.c1 = alias1.c1));,N,Y,Y
215,5,"{'student_result': [['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Amy'], ['Amy'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Amy'], ['Amy'], ['Eve'], ['Eve'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Amy'], ['Amy'], ['Eve'], ['Eve'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Amy'], ['Amy'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Coy'], ['Coy'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Coy'], ['Coy'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Ben'], ['Ben']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT alias1.c1 FROM t5 alias2 JOIN t6 alias1 ON alias2.c2 = alias1.c2 JOIN t4 alias3 ON alias2.c1 = alias3.c2 WHERE alias2.c2 = alias1.c2;,N,Y,Y
276,5,"{'student_result': [['Dan'], ['Ben'], ['Dan'], ['Dan'], ['Dan']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));","WITH alias1 AS ( SELECT c1 AS c1, c2 AS c2 FROM t5 ), alias2 AS ( SELECT c1 AS c1, c2 AS c2 FROM t6 ), alias3 AS ( SELECT DISTINCT c1 AS c1, c2 AS c2 FROM t4 ) SELECT alias3.c1 FROM alias3 LEFT JOIN alias1 ON alias3.c2 = alias1.c1 LEFT JOIN alias2 ON alias3.c1 = alias2.c1 AND alias1.c2 = alias2.c2 GROUP BY alias3.c1, alias3.c2 HAVING COUNT(alias1.c2) = COUNT(alias2.c2) AND NOT EXISTS ( SELECT 1 FROM t5 alias4 LEFT JOIN t6 alias5 ON alias4.c2 = alias5.c2 AND alias3.c1 = alias5.c1 WHERE alias4.c1 = alias3.c2 AND alias5.c1 IS NULL );",N,Y,Y
344,5,"{'student_result': [['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT t4.c1 FROM t4 WHERE EXISTS (SELECT t5.c2 FROM t5 WHERE t5.c1 = t4.c2 AND t5.c2 IN (SELECT t6.c2 FROM t6 WHERE t6.c1 = t4.c1));,N,Y,Y
484,5,"{'student_result': [['Dan'], ['Dan'], ['Dan'], ['Amy'], ['Eve'], ['Dan'], ['Ben'], ['Amy'], ['Eve'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Dan'], ['Ben'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Dan'], ['Ben'], ['Dan'], ['Dan'], ['Dan']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));","WITH alias1 AS ( SELECT t5.c1, t5.c2, t6.c1 FROM t5 JOIN t6 ON t5.c2=t6.c2 JOIN t4 ON t6.c1=t4.c1 WHERE t5.c1=t4.c2 ORDER BY t5.c1 ), alias2 AS ( SELECT t5.c1, t5.c2, t4.c1 FROM t4 JOIN t5 ON t5.c1=t4.c2 ORDER BY t4.c1 ) SELECT c1 FROM ( SELECT * FROM alias1 ) AS alias3;",N,Y,Y
488,5,"{'student_result': [['Amy'], ['Amy'], ['Amy'], ['Amy'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Ben'], ['Coy'], ['Coy'], ['Coy'], ['Coy'], ['Coy'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Eve'], ['Eve'], ['Eve'], ['Eve']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));","WITH innie AS ( SELECT t5.c1, t5.c2, t6.c1 FROM t5 JOIN t6 ON t5.c2 = t6.c2 JOIN t4 ON t6.c1 = t4.c1 WHERE t5.c1 = t4.c2 ORDER BY t5.c1 ), otherBeers AS ( SELECT t5.c1, t5.c2, t4.c1 FROM t4 JOIN t5 ON t5.c1 = t4.c2 ORDER BY t4.c1 ) SELECT c1 FROM ( SELECT * FROM otherBeers ) AS alias1;",N,Y,Y
788,5,"{'student_result': [['Dan'], ['Ben']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT alias1.c1 FROM t4 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c1 WHERE NOT EXISTS (SELECT 1 FROM t5 alias3 WHERE alias3.c1 = alias1.c2 AND alias3.c2 NOT IN (SELECT alias4.c2 FROM t6 alias4 WHERE alias4.c1 = alias1.c1)) GROUP BY alias1.c1;,N,Y,Y
792,5,"{'student_result': [['Dan'], ['Coy'], ['Ben'], ['Amy'], ['Eve']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c1 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT alias1.c1 FROM t4 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c1 INTERSECT SELECT alias2.c1 FROM t6 alias2,N,Y,Y
805,5,"{'student_result': [['Dan'], ['Coy'], ['Ben'], ['Eve'], ['Amy']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT alias1.c1 FROM t4 alias1 JOIN t6 alias2 ON alias1.c1 = alias2.c1 INTERSECT SELECT alias3.c1 FROM t6 alias3 JOIN t5 alias4 ON alias3.c2 = alias4.c2;,N,Y,Y
1100,5,"{'student_result': [['Down Under Pub'], ['James Joyce Pub'], ['Satisfaction'], ['The Edge']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT DISTINCT c1 FROM t5 WHERE (c2 = 'Amstel' OR c2 = 'Corona') AND c3 > 2;,N,Y,Y
2005,5,"{'student_result': [['Ben'], ['Coy']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT alias1.c1 FROM t3 alias1 WHERE alias1.c1 NOT IN (SELECT c1 FROM t6 WHERE c2 = 'Corona') AND alias1.c1 IN (SELECT alias2.c1 FROM t4 alias2 JOIN t5 alias3 ON alias2.c2 = alias3.c1 WHERE alias3.c2 = 'Corona');,N,Y,Y
2085,5,"{'student_result': [['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Coy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Coy'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Eve'], ['Eve'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Amy'], ['Amy'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Dan'], ['Ben'], ['Ben']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));","SELECT t6.c1 FROM t6, t5, t4 WHERE t6.c1 = t4.c1 AND t5.c1 = t4.c2;",N,Y,Y
2100,5,"{'student_result': [['Down Under Pub'], ['James Joyce Pub'], ['Talk of the Town'], ['The Edge']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));","WITH alias1 AS ( SELECT DISTINCT t3.c1, t6.c2 FROM t3 JOIN t6 ON t3.c1 = t6.c1 ), alias2 AS ( SELECT DISTINCT t1.c1, t5.c2 FROM t1 JOIN t5 ON t1.c1 = t5.c1 ), alias3 AS ( SELECT DISTINCT c1, c2 FROM t4 ), alias4 AS ( SELECT DISTINCT alias2.c1, alias2.c2 FROM alias2 JOIN alias1 ON alias1.c2 = alias2.c2 ), alias5 AS ( SELECT alias4.c1 FROM alias4 GROUP BY c1 HAVING COUNT(DISTINCT c2) = ( SELECT COUNT(DISTINCT c2) FROM alias2 WHERE alias2.c1 = alias4.c1 ) ) SELECT * FROM alias5;",N,Y,Y
4165,5,"{'student_result': [[None], ['Dan'], ['Ben'], ['Amy'], ['Eve']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT alias1.c1 FROM t4 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c1 RIGHT JOIN t6 alias3 ON alias1.c1 = alias3.c1 AND alias2.c2 = alias3.c2 GROUP BY alias1.c1 HAVING COUNT(CASE WHEN alias3.c2 IS NULL THEN 1 ELSE NULL END) = 0;,N,Y,Y
4930,5,"{'student_result': [['Ben'], [None]], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));","WITH 
	-- the number of beers served at each bar
	BeerServedBar AS 
	(SELECT t5.c1 AS bar, COUNT(t5.c2) as NumBeerServed
	FROM t5
	GROUP BY t5.c1),

	-- the number of bars frequented by each drinker
	BarsFrequented AS
	(SELECT DISTINCT t4.c1 as drinker,  COUNT(t4.c2) as NumBarFreq
	FROM t4
	RIGHT JOIN t3
	ON t4.c1 = t3.c1
	GROUP BY t4.c1
	ORDER BY t4.c1 ASC),

	-- the number of beers liked by each drinker
	BeersLiked AS
	(SELECT DISTINCT t3.c1 as drinker, COUNT(t6.c2) as CountBeerLiked
	FROM t6
	RIGHT JOIN t3
	ON t6.c1 = t3.c1
	GROUP BY t3.c1
	ORDER BY t3.c1 ASC),

	-- drinkers, and bars that serve all the beers they like
	DrinkerBarServeAllBeerLiked AS
	(SELECT Q2.drinker as drinker, Q2.bar as bar, BeersLiked.CountBeerLiked as CountBeerLiked 
	FROM BeersLiked,
		-- drinkers, bars, and the number of beers served there that they like
		(SELECT t6.c1 as drinker, t5.c1 as bar, COUNT(t5.c1) as CountBarServesBeerLiked
		FROM t5, t6
		WHERE t6.c2 = t5.c2
		GROUP BY t6.c1, t5.c1
		ORDER BY t6.c1 ASC, t5.c1 ASC) AS Q2
	WHERE Q2.drinker = BeersLiked.drinker
	AND Q2.CountBarServesBeerLiked = BeersLiked.CountBeerLiked) 

SELECT DISTINCT Q5.drinker
FROM BarsFrequented
LEFT JOIN
	(SELECT DISTINCT Q4.drinker as drinker, COUNT(Q4.bar) as NumBarFreqOnlyBeerLike
	FROM
		-- the bars that drinkers frequent that ONLY serve the beer they like
		(SELECT DrinkerBarServeAllBeerLiked.drinker as drinker, DrinkerBarServeAllBeerLiked.bar as bar, DrinkerBarServeAllBeerLiked.CountBeerLiked
		FROM BeerServedBar, DrinkerBarServeAllBeerLiked
		WHERE DrinkerBarServeAllBeerLiked.bar = BeerServedBar.bar
		AND DrinkerBarServeAllBeerLiked.CountBeerLiked = BeerServedBar.NumBeerServed) as Q4
	GROUP BY Q4.drinker) as Q5
ON BarsFrequented.drinker = Q5.drinker
WHERE BarsFrequented.NumBarFreq = Q5.NumBarFreqOnlyBeerLike;",N,Y,FIXED
7161,5,"{'student_result': [['Amy'], ['Ben'], ['Eve']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT DISTINCT t4.c1 FROM t4 WHERE t4.c2 IN (SELECT t5.c1 FROM t5 WHERE t5.c2 IN (SELECT t6.c2 FROM t6 WHERE t6.c1 = t4.c1) GROUP BY t5.c1 HAVING COUNT(DISTINCT t5.c2) = (SELECT COUNT(DISTINCT t6.c2) FROM t6 WHERE t6.c1 = t4.c1));,N,Y,Y
7189,5,"{'student_result': [['Ben'], ['Eve'], ['Amy'], ['Dan']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));","SELECT DISTINCT t4.c1 FROM t5, t4, t6 WHERE t5.c1 = t4.c2 AND t4.c1 = t6.c1 AND t6.c2 = t5.c2 INTERSECT SELECT DISTINCT t4.c1 FROM t5, t4, t6 WHERE t5.c1 = t4.c2 AND t4.c1 = t6.c1 AND t6.c2 <> t5.c2;",N,Y,Y
7668,5,"{'student_result': [['Dan'], ['Coy'], ['Dan'], ['Coy'], ['Dan'], ['Coy'], ['Dan'], ['Coy'], ['Dan'], ['Coy'], ['Dan'], ['Coy'], ['Eve'], ['Dan'], ['Ben'], ['Amy'], ['Eve'], ['Dan'], ['Ben'], ['Amy'], ['Eve'], ['Dan'], ['Ben'], ['Amy'], ['Eve'], ['Dan'], ['Ben'], ['Amy'], ['Dan'], ['Ben'], ['Dan'], ['Ben'], ['Dan'], ['Ben'], ['Dan'], ['Ben'], ['Dan'], ['Ben'], ['Dan'], ['Ben']], 'teacher_result': []}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c1 FROM t3 WHERE NOT EXISTS (SELECT alias1.c2 FROM t4 alias1, t5 alias2 WHERE alias1.c1 = t3.c1 AND alias1.c2 = alias2.c1 AND alias2.c2 NOT IN (SELECT c2 FROM t6 WHERE c1 = t3.c1));",SELECT c1 FROM t4 NATURAL JOIN t5 WHERE c2 IN (SELECT c2 FROM t6);,N,Y,Y
72,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4166666666666667')], ['Budweiser', Decimal('0.05'), Decimal('2.2250000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2 AS beer, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c2 AND alias2.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH alias1 AS ( SELECT DISTINCT alias2.c2 FROM t5 alias2 JOIN t4 alias3 ON alias2.c1 = alias3.c2 JOIN t3 alias4 ON alias3.c1 = alias4.c1 WHERE alias4.c1 LIKE 'B%' ), alias2 AS ( SELECT alias3.c2, MAX(alias3.c3) - MIN(alias3.c3) AS price_gap, AVG(alias3.c3) AS avg_price, COUNT(DISTINCT alias3.c1) AS bar_count FROM t5 alias3 JOIN alias1 alias4 ON alias3.c2 = alias4.c2 GROUP BY alias3.c2 HAVING COUNT(DISTINCT alias3.c1) >= 2 ) SELECT alias5.c2 AS beer, alias5.price_gap, alias5.avg_price FROM alias2 alias5 ORDER BY alias5.c2;",N,Y,Y
112,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4166666666666667')], ['Budweiser', Decimal('0.05'), Decimal('2.2250000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')], ['Erdinger', Decimal('0.00'), Decimal('3.5000000000000000')], ['Full Sail', Decimal('0.00'), Decimal('7.7500000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4166666666666667')], ['Budweiser', Decimal('0.05'), Decimal('2.2250000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c2 AND f.c1 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH alias1 AS ( SELECT DISTINCT f.c2 FROM t4 f JOIN t3 d ON f.c1 = d.c1 WHERE d.c1 LIKE 'B%' ), alias2 AS ( SELECT s.c2, s.c1, s.c3 FROM t5 s JOIN alias1 bfbb ON s.c1 = bfbb.c2 ), alias3 AS ( SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM alias2 GROUP BY c2 ) SELECT c2, price_gap, avg_price FROM alias3 ORDER BY c2;",N,Y,Y
197,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4166666666666667')], ['Budweiser', Decimal('0.05'), Decimal('2.2250000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c2 AND f.c1 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH alias1 AS ( SELECT DISTINCT f.c2 FROM t4 f JOIN t3 d ON f.c1 = d.c1 WHERE d.c1 LIKE 'C%' ), alias2 AS ( SELECT s.c2 FROM t5 s JOIN alias1 b ON s.c1 = b.c2 GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2 ), alias3 AS ( SELECT s.c2, MAX(s.c3) - MIN(s.c3) AS gap, AVG(s.c3) AS avg_price FROM t5 s WHERE s.c2 IN (SELECT c2 FROM alias2) GROUP BY s.c2 ) SELECT c2, gap, avg_price FROM alias3 ORDER BY c2;",N,Y,Y
365,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c1 AND alias2.c2 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT alias1.c2, MAX(alias1.c3)-MIN(alias1.c3), AVG(alias1.c3) FROM t5 alias1 RIGHT JOIN (SELECT alias2.c2 FROM (SELECT alias3.c2, COUNT(alias3.c1) AS beer_count FROM t5 alias3 RIGHT JOIN (SELECT c1 FROM t4 WHERE c2 LIKE 'B%') AS alias4 ON alias3.c1 = alias4.c1 GROUP BY alias3.c2) AS alias2 WHERE alias2.beer_count >= 2) AS alias5 ON alias5.c2 = alias1.c2 GROUP BY alias1.c2",N,Y,Y
438,8,"{'student_result': [['Amstel', Decimal('0.7500000000000000'), Decimal('1.4166666666666667')], ['Budweiser', Decimal('0.0500000000000000'), Decimal('2.2250000000000000')], ['Corona', Decimal('0E-16'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.2500000000000000'), Decimal('2.8750000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c2 AND f.c1 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT s.c2, CAST(MAX(s.c3) - MIN(s.c3) AS NUMERIC(20, 16)) AS price_gap, CAST(AVG(s.c3) AS NUMERIC(20, 16)) AS avg_price FROM t5 s JOIN t4 f ON s.c1 = f.c2 JOIN t1 d ON f.c1 = d.c1 AND d.c1 LIKE 'B%' WHERE s.c2 IN (SELECT s2.c2 FROM t5 s2 JOIN t4 f2 ON s2.c1 = f2.c2 JOIN t1 d2 ON f2.c1 = d2.c1 AND d2.c1 LIKE 'B%' GROUP BY s2.c2 HAVING COUNT(DISTINCT s2.c1) >= 2) GROUP BY s.c2 ORDER BY s.c2;",N,Y,Y
578,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4166666666666667')], ['Budweiser', Decimal('0.05'), Decimal('2.2250000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2 AS beer, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c2 AND alias2.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT alias1.c2 AS beer, MAX(alias1.c3) - MIN(alias1.c3) AS price_gap, AVG(alias1.c3) AS avg_price FROM t5 alias1 JOIN t4 alias2 ON alias1.c1 = alias2.c2 JOIN t3 alias3 ON alias2.c1 = alias3.c1 WHERE alias3.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2;",N,Y,Y
812,8,"{'student_result': [], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2 AS alias1, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 AS alias2 FROM t5 s, t4 f WHERE s.c1 = f.c2 AND f.c1 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT s.c2 AS alias1, (MAX(s.c3) - MIN(s.c3)) AS price_gap, AVG(s.c3) AS avg_price FROM t5 s WHERE s.c1 IN (SELECT f.c2 AS alias2 FROM t4 f WHERE f.c1 LIKE 'B%' GROUP BY f.c2 HAVING COUNT(DISTINCT f.c1) >= 2) GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2 ORDER BY s.c2;",N,Y,Y
819,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4125000000000000')], ['Budweiser', Decimal('0.05'), Decimal('2.2222222222222222')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8800000000000000')], ['Erdinger', Decimal('0.00'), Decimal('3.5000000000000000')], ['Full Sail', Decimal('0.00'), Decimal('7.7500000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c2 AND alias2.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT alias1.c2, (MAX(alias1.c3) - MIN(alias1.c3)) AS price_gap, AVG(alias1.c3) AS avg_price FROM t5 alias1 JOIN t4 alias2 ON alias1.c1 = alias2.c2 CROSS JOIN t5 alias3 WHERE alias2.c1 LIKE 'B%' AND alias1.c1 <> alias3.c1 GROUP BY alias1.c2 ORDER BY alias1.c2;",N,Y,Y
865,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4166666666666667')], ['Budweiser', Decimal('0.05'), Decimal('2.2250000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')], ['Erdinger', Decimal('0.00'), Decimal('3.5000000000000000')], ['Full Sail', Decimal('0.00'), Decimal('7.7500000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c2 AND f.c1 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH alias1 AS ( SELECT DISTINCT f.c2 FROM t4 f JOIN t3 d ON f.c1 = d.c1 WHERE d.c1 LIKE 'B%' ), alias2 AS ( SELECT s.c2, s.c1, s.c3 FROM t5 s JOIN alias1 bfbb ON s.c1 = bfbb.c2 ), alias3 AS ( SELECT c2 FROM alias2 GROUP BY c2 HAVING COUNT(DISTINCT c1) >= 2 ), alias4 AS ( SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM alias2 WHERE c2 IN (SELECT c2 FROM t5) GROUP BY c2 ) SELECT c2, price_gap, avg_price FROM alias4 ORDER BY c2;",N,Y,Y
1014,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2 AS beer, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c2 AND alias2.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT c2 AS beer, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c2 AND alias2.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 3) GROUP BY c2 ORDER BY c2;",N,Y,Y
1016,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')], ['Erdinger', Decimal('0.00'), Decimal('3.5000000000000000')], ['Full Sail', Decimal('0.00'), Decimal('7.7500000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2 AS beer, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 AS beer FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c2 AND alias2.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT c2 AS beer, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 AS beer FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c2 AND alias2.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 1) GROUP BY c2 ORDER BY c2;",N,Y,Y
1211,8,"{'student_result': [['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c2 AND alias2.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT alias1.c2, MAX(alias1.c3) - MIN(alias1.c3) price_gap, AVG(alias1.c3) avg_price FROM t5 alias1 WHERE alias1.c2 IN (SELECT alias2.c2 FROM t5 alias2 JOIN t4 alias3 ON alias3.c2 = alias2.c1 JOIN t1 alias4 ON alias4.c1 = alias3.c1 WHERE alias4.c1 LIKE 'B%') GROUP BY alias1.c2 HAVING COUNT(alias1.c1) >= 2;",N,Y,Y
1376,8,"{'student_result': [['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c1 AND f.c2 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH new_table AS( SELECT f.c1, s.c3, s.c2 FROM t4 f JOIN t5 s ON s.c1=f.c1 WHERE f.c2 LIKE '%B%' ), average_price AS( SELECT c2, avg(c3) AS ap, (max(c3)-min(c3)) AS gap FROM t5 GROUP BY c2 ) SELECT a_p.c2, a_p.gap, a_p.ap FROM average_price a_p JOIN new_table nt ON a_p.c2 = nt.c2 GROUP BY a_p.c2, a_p.ap, a_p.gap HAVING count(nt.c1) > 1",N,Y,Y
1555,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c2 AND f.c1 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH alias1 AS ( SELECT DISTINCT f.c2 FROM t4 f JOIN t3 d ON f.c1 = d.c1 WHERE d.c1 LIKE 'B%' ), alias2 AS ( SELECT s.c2, s.c3 FROM t5 s WHERE s.c1 IN (SELECT c2 FROM alias1) ), alias3 AS ( SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price, COUNT(DISTINCT c1) AS bar_count FROM t5 GROUP BY c2 HAVING COUNT(DISTINCT c1) >= 2 ) SELECT alias3.c2, alias3.price_gap, alias3.avg_price FROM alias3 JOIN alias2 ON alias3.c2 = alias2.c2 ORDER BY alias3.c2;",N,Y,Y
1680,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.37500000000000000000')], ['Budweiser', Decimal('0.00'), Decimal('2.2500000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')], ['Erdinger', Decimal('0.00'), Decimal('3.5000000000000000')], ['Full Sail', Decimal('0.00'), Decimal('7.7500000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c2 AND f.c1 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT b, (max_price - min_price), avg_price FROM (SELECT c2 AS b, MAX(c3) AS max_price, MIN(c3) AS min_price, AVG(c3) AS avg_price FROM t5 WHERE c1 IN (SELECT c1 FROM (SELECT c1, COUNT(*) AS servecount FROM t5 WHERE c1 IN (SELECT c2 FROM t4 WHERE c1 LIKE 'B%') GROUP BY c1 ORDER BY c1) as alias1 WHERE servecount > 2) GROUP BY c2) AS alias2;",N,Y,Y
1683,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4166666666666667')], ['Budweiser', Decimal('0.05'), Decimal('2.2250000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c1 AND f.c2 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT b, (max_price - min_price), avg_price FROM (SELECT c2 AS b, MAX(c3) AS max_price , MIN(c3) AS min_price, AVG(c3) AS avg_price FROM t5 WHERE c1 IN (SELECT c1 FROM (SELECT c1, COUNT(*) AS servecount FROM t5 WHERE c1 IN (SELECT c1 FROM t4 WHERE c2 LIKE 'B%') GROUP BY c1 ORDER BY c1) AS alias1 WHERE servecount>=2) AND c2 IN (SELECT DISTINCT c2 FROM (SELECT c2, COUNT(*) AS servebeercount FROM t5 GROUP BY c2) AS alias2 WHERE servebeercount>2) GROUP BY c2) AS alias3",N,Y,Y
2092,8,"{'student_result': [['Dixie', Decimal('6.75'), Decimal('3.6000000000000000')], ['Corona', Decimal('6.75'), Decimal('3.6000000000000000')], ['Full Sail', Decimal('6.75'), Decimal('3.6000000000000000')], ['Erdinger', Decimal('6.75'), Decimal('3.6000000000000000')], ['Budweiser', Decimal('6.75'), Decimal('3.6000000000000000')], ['Amstel', Decimal('6.75'), Decimal('3.6000000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c1 AND f.c2 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT DISTINCT c2, ((SELECT MAX(c3) FROM t5 S WHERE S.c2 = c2) - (SELECT MIN(c3) FROM t5 S WHERE S.c2 = c2)) AS diff, (SELECT AVG(c3) FROM t5 S WHERE S.c2 = c2) FROM (SELECT c2, c1 FROM t5 NATURAL JOIN t4 GROUP BY c1, c2 HAVING (SELECT COUNT(*) FROM t4 F WHERE F.c1 = c1 AND F.c2 LIKE 'B%') >= 2 ORDER BY c1) br;",N,Y,Y
2139,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.3333333333333333')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.9166666666666667')], ['Erdinger', Decimal('0.00'), Decimal('3.5000000000000000')], ['Full Sail', Decimal('0.00'), Decimal('7.7500000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c2 AND alias2.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT alias1.c2 AS beer, MAX(alias1.c3) - MIN(alias1.c3) AS price_gap, AVG(alias1.c3) AS avg_price FROM t5 alias1 INNER JOIN t4 alias2 ON alias1.c1 = alias2.c2 WHERE alias1.c2 IN (SELECT alias3.c2 FROM t5 alias3 INNER JOIN t4 alias4 ON alias3.c1 = alias4.c2 WHERE alias4.c1 LIKE 'B%') GROUP BY alias1.c2 ORDER BY alias1.c2;",N,Y,Y
3250,8,"{'student_result': [['Amstel', Decimal('-0.75'), Decimal('1.4166666666666667')], ['Budweiser', Decimal('-0.05'), Decimal('2.2250000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('-0.25'), Decimal('2.8750000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2 AS beer, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 AS beer FROM t5 s, t4 f WHERE s.c1 = f.c2 AND f.c1 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH temp (c1, c2, c3) AS (SELECT s.c1, s.c2, s.c3 FROM t5 s, t4 f WHERE s.c1 = f.c2 AND f.c1 LIKE 'B%') SELECT c2 AS beer, MIN(c3) - MAX(c3), AVG(c3) FROM temp GROUP BY c2 HAVING COUNT(DISTINCT c1) >= 2;",N,Y,Y
3620,8,"{'student_result': [['Erdinger', Decimal('0.00'), Decimal('3.5000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Budweiser', Decimal('0.05'), Decimal('2.3000000000000000')], ['Full Sail', Decimal('0.00'), Decimal('7.7500000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')], ['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c2 AND f.c1 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","with alias1 as 
		(select c2 from t4 where c1 like '%B%'), /*bars B's frequent)*/
	alias2 as
		(select c2, max(c3)-min(c3) as price_gap from t5 where c1 in(select c2 from alias1) group by c2), /*price gap*/
	alias3 as
		(select alias2.c2, avg(c3) as avg_price from alias2,t5 where alias2.c2 = t5.c2 group by alias2.c2) /*avg price*/
select alias2.c2, price_gap, avg_price from alias2,alias3 where alias2.c2 = alias3.c2",N,Y,Y
3659,8,"{'student_result': [['Corona', Decimal('0.00'), Decimal('7.0000000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c2 AND alias2.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH beer_prices AS ( SELECT alias1.c2, alias1.c3 FROM t5 alias1 JOIN t4 alias2 ON alias1.c1 = alias2.c2 JOIN t3 alias3 ON alias2.c1 = alias3.c1 WHERE alias3.c1 LIKE 'B%' GROUP BY alias1.c2, alias1.c3 HAVING COUNT(DISTINCT alias1.c1) >= 2 ), beer_stats AS ( SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM beer_prices GROUP BY c2 ) SELECT c2, price_gap, avg_price FROM beer_stats ORDER BY c2;",N,Y,Y
3851,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4166666667')], ['Budweiser', Decimal('0.05'), Decimal('2.2250000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c1 AND f.c2 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH alias1 AS ( SELECT s.c2, s.c1, s.c3 FROM t5 s JOIN t4 f ON s.c1 = f.c1 JOIN t1 d ON f.c2 = d.c1 WHERE d.c1 LIKE 'B%' ), alias2 AS ( SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM alias1 GROUP BY c2 HAVING COUNT(DISTINCT c1) >= 2 ) SELECT c2, price_gap, CAST(avg_price AS DECIMAL(16, 10)) AS avg_price FROM alias2 ORDER BY c2;",N,Y,Y
5001,8,"{'student_result': [['Budweiser', Decimal('0.05'), Decimal('2.3000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c2 AND alias2.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH beer_price_gaps AS ( SELECT alias1.c2, alias1.max_price - alias1.min_price AS price_gap FROM ( SELECT c2, COUNT(c1) AS bar_count, MIN(c3) AS min_price, MAX(c3) AS max_price FROM t4 NATURAL JOIN t5 WHERE c1 LIKE 'B%' GROUP BY t5.c2 ) AS alias1 WHERE alias1.bar_count >= 2 ), avg_prices AS ( SELECT c2, AVG(c3) AS avg_price FROM t5 GROUP BY c2 ) SELECT beer_price_gaps.c2, beer_price_gaps.price_gap, avg_prices.avg_price FROM beer_price_gaps NATURAL JOIN avg_prices;",N,Y,Y
5598,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4166666666666667')], ['Budweiser', Decimal('0.05'), Decimal('2.2250000000000000')], ['Corona', Decimal('7.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c2 AND alias2.c1 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH alias1 AS ( SELECT t5.c2 AS c2, MAX(t5.c3) AS max_price, MIN(t5.c3) AS min_price, AVG(t5.c3) AS avg_price FROM t5 WHERE t5.c1 IN (SELECT t4.c2 FROM t4 WHERE t4.c1 LIKE 'B%') GROUP BY t5.c2 HAVING COUNT(DISTINCT t5.c1) >= 2 ) SELECT alias1.c2 AS c2, CASE WHEN max_price = min_price THEN max_price ELSE max_price - min_price END AS price_gap, alias1.avg_price AS avg_price FROM alias1 ORDER BY alias1.c2;",N,Y,Y
6059,8,"{'student_result': [['Dixie', Decimal('3.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.75'), 'The Edge'], ['Budweiser', Decimal('2.50'), 'The Edge'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'The Edge'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Budweiser', Decimal('2.25'), 'Satisfaction'], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Amstel', Decimal('1.75'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Amstel', Decimal('1.50'), 'Talk of the Town'], ['Budweiser', Decimal('2.25'), 'Down Under Pub']], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c2 AND f.c1 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","SELECT B.c1 AS beer, MIN(S.c3) AS price, S.c1 AS bar FROM t2 B LEFT JOIN t5 S ON B.c1 = S.c2 GROUP BY B.c1, S.c1;",N,Y,Y
6147,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4166666666666667')], ['Budweiser', Decimal('0.05'), Decimal('2.2250000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c1 AND f.c2 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH alias1 AS ( SELECT s.c2, s.c3 FROM t5 s WHERE s.c1 IN ( SELECT f.c1 FROM t4 f JOIN t1 d ON f.c2 = d.c1 WHERE d.c1 LIKE 'B%' ) ) SELECT alias1.c2, MAX(alias1.c3) - MIN(alias1.c3) AS price_gap, AVG(alias1.c3) AS avg_price FROM alias1 GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c3) >= 2 ORDER BY alias1.c2;",N,Y,Y
6447,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4166666666666667')], ['Budweiser', Decimal('0.05'), Decimal('2.2250000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c2 AND f.c1 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH alias1 AS ( SELECT DISTINCT f.c2, l.c2 FROM t4 f JOIN t6 l ON f.c1 = l.c1 JOIN t3 d ON d.c1 LIKE 'B%' AND d.c1 = f.c1 ), alias2 AS ( SELECT s.c2, s.c1, s.c3 FROM t5 s JOIN alias1 db ON s.c1 = db.c2 AND s.c2 = db.c2 ), alias3 AS ( SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM alias2 GROUP BY c2 HAVING COUNT(DISTINCT c1) >= 2 ) SELECT c2, price_gap, avg_price FROM alias3 ORDER BY c2;",N,Y,Y
6494,8,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4166666666666667')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT alias1.c2 FROM t5 alias1, t4 alias2 WHERE alias1.c1 = alias2.c1 AND alias2.c2 LIKE 'B%' GROUP BY alias1.c2 HAVING COUNT(DISTINCT alias1.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH alias1 AS ( SELECT DISTINCT c1 FROM t4 WHERE c2 LIKE 'B%' ), alias2 AS ( SELECT alias3.c2, alias3.c1, alias3.c3 FROM t5 alias3 WHERE alias3.c1 IN ( SELECT c1 FROM alias1 ) ), alias3 AS ( SELECT c2, COUNT(c1) AS barCount FROM alias2 GROUP BY c2 HAVING COUNT(c1) > 2 ) SELECT alias2.c2, MAX(alias2.c3) - MIN(alias2.c3) AS price_gap, AVG(c3) AS avg_price FROM alias2 JOIN alias3 ON alias2.c2 = alias3.c2 GROUP BY alias2.c2;",N,Y,Y
6499,8,"{'student_result': [['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')], ['Budweiser', Decimal('0.05'), Decimal('2.2250000000000000')], ['Amstel', Decimal('0.75'), Decimal('1.4166666666666667')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')]], 'teacher_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')]]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT c2, MAX(c3) - MIN(c3) AS price_gap, AVG(c3) AS avg_price FROM t5 WHERE c2 IN (SELECT s.c2 FROM t5 s, t4 f WHERE s.c1 = f.c1 AND f.c2 LIKE 'B%' GROUP BY s.c2 HAVING COUNT(DISTINCT s.c1) >= 2) GROUP BY c2 ORDER BY c2;","WITH alias1 AS ( SELECT DISTINCT c1 FROM t4 WHERE c2 LIKE 'B%' ), alias2 AS ( SELECT s.c2, s.c1, s.c3 FROM t5 s WHERE s.c1 IN ( SELECT c1 FROM alias1 ) ), alias3 AS ( SELECT c2, COUNT(c1) AS barCount FROM alias2 GROUP BY c2 HAVING COUNT(c1) >= 2 ) SELECT bs.c2, MAX(bs.c3) - MIN(bs.c3) AS price_gap, AVG(bs.c3) AS avg_price FROM alias2 bs JOIN alias3 bsc ON bs.c2 = bsc.c2 GROUP BY bs.c2",N,Y,Y
4730,9,"{'student_result': [['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.50'), 'Talk of the Town'], ['Amstel', Decimal('1.75'), 'Satisfaction'], ['Amstel', Decimal('1.75'), 'The Edge'], ['Amstel', Decimal('1.00'), 'Down Under Pub']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT alias1.c2, alias1.c3, alias1.c1 FROM t5 as alias1 JOIN t5 as alias2 ON alias1.c1 = alias2.c1 GROUP BY alias1.c1, alias1.c3, alias1.c2 having alias1.c3 = min(alias2.c3);",N,FIXED,Y
7424,9,"{'student_result': [['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Amstel', None, 'Talk of the Town'], ['Amstel', None, 'Satisfaction'], ['Amstel', None, 'The Edge'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Budweiser', None, 'Satisfaction'], ['Budweiser', None, 'Down Under Pub'], ['Budweiser', None, 'The Edge'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Dixie', None, 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT t2.c1 AS beer, alias1.c3 AS price, t5.c1 AS bar FROM t2 LEFT JOIN t5 ON t2.c1 = t5.c2 LEFT JOIN (SELECT c2, MIN(c3) AS c3 FROM t5 GROUP BY c2) AS alias1 ON t5.c2 = alias1.c2 AND t5.c3 = alias1.c3 ORDER BY t2.c1;",N,FIXED,Y
241,6,"{'student_result': [['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Down Under Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1 AS bar1, alias2.c1 AS bar2 FROM t5 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c2 AND alias1.c1 <> alias2.c1 WHERE NOT EXISTS (SELECT 1 FROM t5 alias3 WHERE alias3.c1 = alias1.c1 AND alias3.c2 NOT IN (SELECT alias4.c2 FROM t5 alias4 WHERE alias4.c1 = alias2.c1)) AND EXISTS (SELECT 1 FROM t5 alias5 WHERE alias5.c1 = alias2.c1 AND alias5.c2 NOT IN (SELECT alias6.c2 FROM t5 alias6 WHERE alias6.c1 = alias1.c1));",N,Y,Y
371,6,"{'student_result': [['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'The Edge'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Satisfaction']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","WITH alias1 AS ( SELECT c1, c2 FROM t5 ), alias2 AS ( SELECT alias3.c1 AS bar1, alias4.c1 AS bar2 FROM t5 alias3 JOIN t5 alias4 ON alias3.c2 = alias4.c2 AND alias3.c1 <> alias4.c1 GROUP BY alias3.c1, alias4.c1 ), alias3 AS ( SELECT alias2.bar1, alias2.bar2 FROM alias2 JOIN (SELECT c1, COUNT(DISTINCT c2) AS beer_count FROM t5 GROUP BY c1) alias5 ON alias2.bar2 = alias5.c1 WHERE alias5.beer_count > (SELECT COUNT(DISTINCT c2) FROM t5 WHERE c1 = alias2.bar1) ) SELECT DISTINCT bar1, bar2 FROM alias3 ORDER BY bar1, bar2;",N,Y,Y
700,6,"{'student_result': [['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'The Edge'], ['Satisfaction', 'James Joyce Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'The Edge'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Satisfaction']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT DISTINCT alias1.c1 AS bar1, alias2.c1 AS bar2 FROM t5 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c2 AND alias1.c1 <> alias2.c1 GROUP BY alias1.c1, alias2.c1 HAVING COUNT(DISTINCT alias1.c2) = COUNT(DISTINCT alias2.c2) AND COUNT(DISTINCT alias1.c2) < (SELECT COUNT(DISTINCT c2) FROM t5 WHERE c1 = alias2.c1);",N,Y,Y
935,6,"{'student_result': [['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'The Edge'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Satisfaction'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Satisfaction'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Down Under Pub'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Satisfaction'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Down Under Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1 AS bar1, alias2.c1 AS bar2 FROM t5 alias1 INNER JOIN t5 alias2 ON alias1.c2 = alias2.c2 WHERE alias1.c1 <> alias2.c1;",N,Y,Y
943,6,"{'student_result': [['Satisfaction', 'James Joyce Pub'], ['James Joyce Pub', 'Satisfaction'], ['Talk of the Town', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Talk of the Town'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'The Edge'], ['Down Under Pub', 'James Joyce Pub'], ['Talk of the Town', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1 AS bar1, alias2.c1 AS bar2 FROM t5 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c2 AND alias1.c1 != alias2.c1 GROUP BY alias1.c1, alias2.c1 HAVING COUNT(alias1.c2) < (SELECT COUNT(*) FROM t5 WHERE c1 = alias2.c1);",N,Y,Y
1152,6,"{'student_result': [['Down Under Pub', 'Down Under Pub'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Satisfaction'], ['The Edge', 'Down Under Pub'], ['The Edge', 'The Edge'], ['The Edge', 'Satisfaction'], ['James Joyce Pub', 'James Joyce Pub'], ['Satisfaction', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Talk of the Town']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1, alias2.c1 FROM t1 alias1, t1 alias2 WHERE NOT EXISTS (SELECT c2 FROM t5 WHERE alias1.c1 = t5.c1 AND t5.c2 NOT IN (SELECT c2 FROM t5 WHERE alias2.c1 = t5.c1));",N,Y,Y
1294,6,"{'student_result': [['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'The Edge'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'The Edge'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'Talk of the Town']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT DISTINCT alias1.c1, alias2.c1 FROM t5 AS alias1 JOIN t5 AS alias2 ON alias1.c2 = alias2.c2 WHERE alias1.c1 <> alias2.c1 AND NOT EXISTS (SELECT * FROM t5 AS alias3 WHERE alias3.c1 = alias1.c1 AND alias3.c2 NOT IN (SELECT alias4.c2 FROM t5 AS alias4 WHERE alias4.c1 = alias2.c1) AND EXISTS (SELECT * FROM t5 AS alias5 WHERE alias5.c1 = alias2.c1 AND alias5.c2 NOT IN (SELECT alias6.c2 FROM t5 AS alias6 WHERE alias6.c1 = alias1.c1)));",N,Y,Y
1298,6,"{'student_result': [['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'The Edge'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Talk of the Town', 'The Edge']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT DISTINCT alias1.c1, alias2.c1 FROM t5 AS alias1 JOIN t5 AS alias2 ON alias1.c2 = alias2.c2 WHERE alias1.c1 < alias2.c1 AND NOT EXISTS (SELECT * FROM t5 AS alias3 WHERE alias3.c1 = alias1.c1 AND alias3.c2 NOT IN (SELECT alias4.c2 FROM t5 AS alias4 WHERE alias4.c1 = alias2.c1) AND EXISTS (SELECT * FROM t5 AS alias5 WHERE alias5.c1 = alias2.c1 AND alias5.c2 NOT IN (SELECT alias6.c2 FROM t5 AS alias6 WHERE alias6.c1 = alias1.c1)));",N,Y,Y
1800,6,"{'student_result': [['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'The Edge'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'The Edge'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'The Edge'], ['The Edge', 'Down Under Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'Talk of the Town']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT DISTINCT alias1.c1, alias2.c1 FROM t5 alias1, t5 alias2 WHERE alias1.c1 <> alias2.c1 AND EXISTS (SELECT * FROM t5 alias3 WHERE alias3.c2 IN (SELECT alias3.c2 FROM t5 alias4 WHERE alias4.c1 <> alias3.c1 AND alias4.c2 NOT IN (SELECT alias5.c2 FROM t5 alias5 WHERE alias5.c1 = alias3.c1)));",N,Y,Y
1960,6,"{'student_result': [['Satisfaction', 'James Joyce Pub'], ['James Joyce Pub', 'Satisfaction'], ['Satisfaction', 'Satisfaction'], ['The Edge', 'The Edge'], ['Talk of the Town', 'James Joyce Pub'], ['Satisfaction', 'Down Under Pub'], ['The Edge', 'Talk of the Town'], ['The Edge', 'James Joyce Pub'], ['Talk of the Town', 'Talk of the Town'], ['Down Under Pub', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Talk of the Town'], ['Talk of the Town', 'Satisfaction'], ['Satisfaction', 'Talk of the Town'], ['Talk of the Town', 'The Edge'], ['James Joyce Pub', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'The Edge'], ['Talk of the Town', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub'], ['Down Under Pub', 'Down Under Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT DISTINCT alias1.c1, alias2.c1 FROM t5 AS alias1 LEFT JOIN t5 AS alias2 ON alias1.c2 = alias2.c2;",N,Y,Y
2639,6,"{'student_result': [['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'Talk of the Town'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Talk of the Town'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1 AS bar1, alias2.c1 AS bar2 FROM t5 alias1 JOIN t5 alias2 ON alias1.c1 <> alias2.c1 WHERE NOT EXISTS (SELECT 1 FROM t5 alias3 WHERE alias3.c1 = alias2.c1 AND alias3.c2 NOT IN (SELECT alias4.c2 FROM t5 alias4 WHERE alias4.c1 = alias1.c1));",N,Y,Y
2776,6,"{'student_result': [['James Joyce Pub', 'The Edge'], ['Down Under Pub', 'James Joyce Pub'], ['James Joyce Pub', 'Satisfaction'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Down Under Pub', 'Satisfaction'], ['James Joyce Pub', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['Talk of the Town', 'The Edge']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT DISTINCT alias1.c1, alias2.c1 FROM t5 alias1 JOIN t5 alias2 ON alias1.c1 < alias2.c1 WHERE alias1.c2 = alias2.c2;",N,Y,Y
2824,6,"{'student_result': [['Down Under Pub', '802 W. Main Street'], ['The Edge', '108 Morris Street'], ['James Joyce Pub', '912 W. Main Street'], ['Satisfaction', '905 W. Main Street'], ['Talk of the Town', '108 E. Main Street']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));",SELECT * FROM t1,N,Y,Y
2827,6,"{'student_result': [['Satisfaction', 'James Joyce Pub'], ['James Joyce Pub', 'Satisfaction'], ['Talk of the Town', 'James Joyce Pub'], ['Satisfaction', 'Down Under Pub'], ['The Edge', 'Talk of the Town'], ['The Edge', 'James Joyce Pub'], ['Down Under Pub', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['Down Under Pub', 'James Joyce Pub'], ['James Joyce Pub', 'Down Under Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1 AS bar1, alias2.c1 AS bar2 FROM t5 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c2 WHERE alias1.c1 <> alias2.c1 GROUP BY alias1.c1, alias2.c1 HAVING COUNT(alias1.c2) < (SELECT COUNT(*) FROM t5 alias3 WHERE alias3.c1 = alias1.c1) AND COUNT(alias1.c2) = (SELECT COUNT(*) FROM t5 alias4 WHERE alias4.c1 = alias1.c1 AND alias4.c2 IN (SELECT c2 FROM t5 alias5 WHERE alias5.c1 = alias2.c1));",N,Y,Y
2899,6,"{'student_result': [['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1 AS bar1, alias2.c1 AS bar2 FROM t1 alias1, t1 alias2 WHERE (SELECT COUNT(*) FROM t5 WHERE c1 = alias1.c1) < (SELECT COUNT(*) FROM t5 WHERE c1 = alias2.c1);",N,Y,Y
3021,6,"{'student_result': [['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'The Edge'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Talk of the Town']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT DISTINCT alias1.c1 AS bar1, alias2.c1 AS bar2 FROM t5 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c2 AND alias1.c1 <> alias2.c1 WHERE NOT EXISTS (SELECT 1 FROM t5 alias3 WHERE alias3.c1 = alias2.c1 AND alias3.c2 NOT IN (SELECT c2 FROM t5 WHERE c1 = alias1.c1));",N,Y,Y
3022,6,"{'student_result': [['Satisfaction', 'James Joyce Pub'], ['James Joyce Pub', 'Satisfaction'], [None, 'Satisfaction'], ['Talk of the Town', 'James Joyce Pub'], ['Satisfaction', 'Down Under Pub'], ['The Edge', 'Talk of the Town'], ['The Edge', 'James Joyce Pub'], ['Down Under Pub', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Talk of the Town'], ['Talk of the Town', 'Satisfaction'], ['Satisfaction', 'Talk of the Town'], ['Talk of the Town', 'The Edge'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'The Edge'], ['Talk of the Town', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], [None, 'James Joyce Pub'], ['James Joyce Pub', 'Down Under Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT DISTINCT alias1.c1, alias2.c1 FROM t5 AS alias1 RIGHT OUTER JOIN t5 AS alias2 ON alias1.c2 = alias2.c2 AND alias1.c1 <> alias2.c1;",N,Y,Y
3026,6,"{'student_result': [['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'James Joyce Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'James Joyce Pub'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Satisfaction'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Down Under Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1 AS bar1, alias2.c1 AS bar2 FROM t5 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c2 AND alias1.c1 <> alias2.c1 WHERE EXISTS ( SELECT 1 FROM t5 alias3 WHERE alias3.c1 = alias2.c1 AND alias3.c2 NOT IN ( SELECT c2 FROM t5 WHERE c1 = alias1.c1 ) );",N,Y,Y
3028,6,"{'student_result': [[None, 'Down Under Pub'], [None, 'James Joyce Pub'], [None, 'Satisfaction'], [None, 'Talk of the Town'], [None, 'The Edge']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT DISTINCT alias1.c1, alias2.c1 FROM t5 AS alias1 RIGHT OUTER JOIN t1 AS alias2 ON alias1.c2 = alias2.c1",N,Y,Y
3186,6,"{'student_result': [['Talk of the Town', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['Talk of the Town', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Satisfaction', 'The Edge'], ['James Joyce Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Talk of the Town', 'The Edge'], ['Satisfaction', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Satisfaction', 'The Edge'], ['James Joyce Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Talk of the Town', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], [None, 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], [None, 'Satisfaction'], ['Satisfaction', 'Talk of the Town'], ['James Joyce Pub', 'Talk of the Town'], ['The Edge', 'Talk of the Town'], ['Down Under Pub', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['The Edge', 'Talk of the Town'], ['Down Under Pub', 'Talk of the Town']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1, alias2.c1 FROM t5 alias1 RIGHT OUTER JOIN t5 alias2 ON alias1.c1 != alias2.c1 AND alias1.c2 = alias2.c2;",N,Y,Y
3189,6,"{'student_result': [['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'The Edge'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Satisfaction'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Satisfaction'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Down Under Pub'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', None], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', None], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Down Under Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1, alias2.c1 FROM t5 alias1 LEFT OUTER JOIN t5 alias2 ON alias1.c1 != alias2.c1 AND alias1.c2 = alias2.c2;",N,Y,Y
3207,6,"{'student_result': [['Down Under Pub', 'The Edge'], ['The Edge', 'Down Under Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT DISTINCT alias1.c1 AS bar1, alias2.c1 AS bar2 FROM t5 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c2 WHERE alias1.c1 <> alias2.c1 AND ((SELECT COUNT(DISTINCT c2) FROM t5 WHERE c1 = alias1.c1) = (SELECT COUNT(DISTINCT c2) FROM t5 WHERE c1 = alias2.c1));",N,Y,Y
3384,6,"{'student_result': [['James Joyce Pub', None], ['Satisfaction', None]], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1, alias2.c1 FROM t5 alias1 LEFT JOIN t5 alias2 ON alias1.c1 != alias2.c1 AND alias1.c2 = alias2.c2 WHERE alias2.c2 IS NULL;",N,Y,Y
3387,6,"{'student_result': [[None, 'James Joyce Pub'], [None, 'Satisfaction']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1, alias2.c1 FROM t5 alias1 RIGHT OUTER JOIN t5 alias2 ON alias1.c1 != alias2.c1 AND alias1.c2 = alias2.c2 WHERE alias1.c2 IS NULL;",N,Y,Y
3649,6,"{'student_result': [['James Joyce Pub', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'James Joyce Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction'], ['The Edge', 'Down Under Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'Talk of the Town']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","WITH alias1 AS( SELECT c1, c2 FROM t5 ORDER BY c1 ), alias2 AS ( SELECT DISTINCT alias3.c1 AS barA, alias4.c1 AS barB FROM alias1 alias3, alias1 alias4 WHERE alias3.c1 > alias4.c1 ) SELECT * FROM alias2;",N,Y,Y
3704,6,"{'student_result': [['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Down Under Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1, alias2.c1 FROM t5 AS alias1 JOIN t5 AS alias2 ON alias1.c2 = alias2.c2 AND alias1.c1 <> alias2.c1 WHERE alias1.c2 IN (SELECT t5.c2 FROM t5 WHERE t5.c1 = alias2.c1) AND alias2.c1 NOT IN (SELECT alias3.c1 FROM t5 AS alias3 WHERE alias3.c2 NOT IN (SELECT alias4.c2 FROM t5 AS alias4 WHERE alias4.c1 = alias1.c1) AND alias3.c1 = alias2.c1);",N,Y,Y
3708,6,"{'student_result': [['Satisfaction', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['Down Under Pub', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['The Edge', 'Talk of the Town'], ['Down Under Pub', 'The Edge'], ['Satisfaction', 'The Edge']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1, alias2.c1 FROM t5 AS alias1 JOIN t5 AS alias2 ON alias1.c2 = alias2.c2 AND alias1.c1 <> alias2.c1 WHERE alias1.c2 IN (SELECT t5.c2 FROM t5 WHERE t5.c1 = alias2.c1) AND alias2.c1 NOT IN (SELECT alias3.c1 FROM t5 AS alias3 WHERE alias3.c2 NOT IN (SELECT alias4.c2 FROM t5 AS alias4 WHERE alias4.c1 = alias1.c1) AND alias3.c1 = alias2.c1) GROUP BY alias2.c1, alias1.c1;",N,Y,Y
3713,6,"{'student_result': [['James Joyce Pub', 'Down Under Pub'], ['Satisfaction', 'James Joyce Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction'], ['The Edge', 'Down Under Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Satisfaction']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","WITH alias1 AS ( SELECT c1, c2 FROM t5 ORDER BY c1 ), alias2 AS ( SELECT DISTINCT alias3.c1 AS barA, alias4.c1 AS barB FROM alias1 alias3, alias1 alias4 WHERE alias3.c1 > alias4.c1 ), alias3 AS ( SELECT barA, barB FROM alias2 WHERE NOT EXISTS ( SELECT c2 FROM alias1 alias5 WHERE alias5.c1 = barA AND alias5.c2 NOT IN ( SELECT c2 FROM alias1 alias6 WHERE alias6.c1 = barB ) ) OR EXISTS ( SELECT c2 FROM alias1 alias6 WHERE alias6.c1 = barB AND alias6.c2 NOT IN ( SELECT c2 FROM alias1 alias5 WHERE alias5.c1 = barA ) ) ) SELECT * FROM alias3;",N,Y,Y
3831,6,"{'student_result': [['Down Under Pub', 'The Edge'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Talk of the Town'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Talk of the Town'], ['Talk of the Town', 'The Edge']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1, alias2.c1 FROM t1 alias1, t1 alias2 WHERE alias1.c1 < alias2.c1 AND NOT EXISTS(SELECT * FROM t5 alias3 WHERE alias1.c1 = alias3.c1 AND NOT EXISTS (SELECT * FROM t5 alias4 WHERE alias2.c1 = alias4.c1 AND alias3.c2 <> alias4.c2));",N,Y,Y
4407,6,"{'student_result': [['Satisfaction', 'James Joyce Pub'], ['James Joyce Pub', 'Satisfaction'], ['Talk of the Town', 'James Joyce Pub'], ['Satisfaction', 'Down Under Pub'], ['The Edge', 'Talk of the Town'], ['The Edge', 'James Joyce Pub'], ['Down Under Pub', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Talk of the Town'], ['Talk of the Town', 'Satisfaction'], ['Satisfaction', 'Talk of the Town'], ['Talk of the Town', 'The Edge'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'The Edge'], ['Talk of the Town', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT DISTINCT alias1.c1, alias2.c1 FROM t5 AS alias1, t5 AS alias2 WHERE alias1.c2 IN (alias2.c2) AND alias1.c1 <> alias2.c1;",N,Y,Y
4630,6,"{'student_result': [['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'The Edge'], ['Satisfaction', 'James Joyce Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'The Edge'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT bar1, bar2 FROM (SELECT alias1.c1 AS bar1, alias2.c1 AS bar2, alias2.c2 FROM t5 AS alias1 JOIN t5 AS alias2 ON alias1.c1 != alias2.c1 EXCEPT SELECT alias1.c1 AS bar1, alias2.c1 AS bar2, alias1.c2 FROM t5 AS alias1 JOIN t5 AS alias2 ON alias1.c1 != alias2.c1) AS alias3;",N,Y,Y
4850,6,"{'student_result': [['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'James Joyce Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'The Edge'], ['James Joyce Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'James Joyce Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1, alias2.c1 FROM ( SELECT barsbeer.c1 AS c1, COUNT(barsbeer.c1) AS count FROM ( SELECT alias3.c1 FROM t1 alias3 LEFT JOIN t5 ON alias3.c1 = t5.c1 ) AS barsbeer GROUP BY barsbeer.c1 ) AS alias1, ( SELECT barsbeer.c1 AS c1, COUNT(barsbeer.c1) AS count FROM ( SELECT alias4.c1 FROM t1 alias4 LEFT JOIN t5 ON alias4.c1 = t5.c1 ) AS barsbeer GROUP BY barsbeer.c1 ) AS alias2 WHERE alias1.count < alias2.count;",N,Y,Y
5632,6,"{'student_result': [['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'The Edge'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'The Edge'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['Talk of the Town', 'The Edge']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1 AS bar1, alias2.c1 AS bar2 FROM t5 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c2 AND alias1.c1 < alias2.c1 GROUP BY alias1.c1, alias2.c1 HAVING COUNT(DISTINCT alias1.c2) = COUNT(alias1.c2);",N,Y,Y
6946,6,"{'student_result': [['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Talk of the Town'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Talk of the Town'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'Talk of the Town']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1 AS bar1, alias2.c1 AS bar2 FROM t1 alias1, t1 alias2 WHERE alias1.c1 <> alias2.c1 AND NOT EXISTS (SELECT c2 FROM t5 alias3 WHERE alias3.c1 = alias2.c1 AND alias3.c2 NOT IN (SELECT c2 FROM t5 alias4 WHERE alias4.c1 = alias1.c1));",N,Y,Y
7200,6,"{'student_result': [['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1, alias2.c1 FROM t5 AS alias1 JOIN t5 AS alias2 ON alias1.c1 <> alias2.c1 WHERE NOT EXISTS (SELECT * FROM t5 AS alias3 WHERE alias1.c1 = alias3.c1 AND NOT EXISTS (SELECT * FROM t5 AS alias4 WHERE alias4.c1 = alias2.c1 AND alias3.c2 = alias4.c2));",N,Y,Y
7208,6,"{'student_result': [['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'The Edge'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Talk of the Town'], ['Down Under Pub', 'Talk of the Town'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'Down Under Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'Talk of the Town'], ['The Edge', 'Talk of the Town'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'The Edge'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Talk of the Town'], ['James Joyce Pub', 'Talk of the Town'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'Down Under Pub'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'The Edge'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'Satisfaction']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","SELECT alias1.c1, alias2.c1 FROM t5 AS alias1 JOIN t5 AS alias2 ON alias1.c1 <> alias2.c1 WHERE NOT EXISTS (SELECT * FROM t5 AS alias3 LEFT JOIN t5 AS alias4 ON alias3.c1 <> alias4.c1 WHERE alias4.c2 IS NULL);",N,Y,Y
7778,6,"{'student_result': [['Satisfaction', 'James Joyce Pub'], ['Satisfaction', 'Down Under Pub'], ['James Joyce Pub', 'The Edge'], ['The Edge', 'Talk of the Town'], ['Down Under Pub', 'Talk of the Town'], ['Satisfaction', 'The Edge'], ['James Joyce Pub', 'Down Under Pub'], ['James Joyce Pub', 'Talk of the Town'], ['Satisfaction', 'Talk of the Town']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","WITH alias1 AS ( SELECT c1 AS bar1, COUNT(c2) AS count1 FROM t5 GROUP BY c1 ), alias2 AS ( SELECT c1 AS bar2, COUNT(c2) AS count2 FROM t5 GROUP BY c1 ), alias3 AS ( SELECT bar1, count1, t5.c2 AS beer1 FROM alias1 INNER JOIN t5 ON alias1.bar1=t5.c1 ), alias4 AS ( SELECT bar2, count2, t5.c2 AS beer2 FROM alias2 INNER JOIN t5 ON alias2.bar2=t5.c1 ), alias5 AS ( SELECT DISTINCT alias4.bar2, alias3.bar1 FROM alias4 LEFT JOIN alias3 ON alias4.beer2=alias3.beer1 AND alias4.bar2<>alias3.bar1 AND alias4.count2>alias3.count1 WHERE alias3.bar1 IS NOT NULL ) SELECT * FROM alias5;",N,Y,Y
7782,6,"{'student_result': [['James Joyce Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['The Edge', 'James Joyce Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Down Under Pub'], ['The Edge', 'Satisfaction'], ['Down Under Pub', 'James Joyce Pub'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'Satisfaction']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","WITH alias1 AS ( SELECT c1 AS bar1, COUNT(c2) AS count1 FROM t5 GROUP BY c1 ), alias2 AS ( SELECT c1 AS bar2, COUNT(c2) AS count2 FROM t5 GROUP BY c1 ), alias3 AS ( SELECT bar1, count1, t5.c2 AS beer1 FROM alias1 INNER JOIN t5 ON alias1.bar1=t5.c1 ), alias4 AS ( SELECT bar2, count2, t5.c2 AS beer2 FROM alias2 INNER JOIN t5 ON alias2.bar2=t5.c1 ), alias5 AS ( SELECT DISTINCT alias4.bar2, alias3.bar1 FROM alias4 LEFT JOIN alias3 ON alias4.beer2=alias3.beer1 AND alias4.bar2<>alias3.bar1 AND alias4.count2>alias3.count1 WHERE alias3.bar1 IS NOT NULL AND alias3.beer1 IS NOT NULL ) SELECT bar1, bar2 FROM alias5;",N,Y,Y
7783,6,"{'student_result': [['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'James Joyce Pub'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'Satisfaction'], ['Down Under Pub', 'James Joyce Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'James Joyce Pub'], ['The Edge', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['The Edge', 'James Joyce Pub'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['James Joyce Pub', 'Satisfaction'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'James Joyce Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'Satisfaction'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Down Under Pub']], 'teacher_result': [['Down Under Pub', 'Satisfaction'], ['The Edge', 'Satisfaction'], ['Talk of the Town', 'Down Under Pub'], ['Talk of the Town', 'The Edge'], ['Talk of the Town', 'Satisfaction']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT b1.c1 AS alias1, b2.c1 AS alias2 FROM t1 b1, t1 b2 WHERE NOT EXISTS (SELECT s1.c2 FROM t5 s1 WHERE s1.c1 = b1.c1 AND NOT EXISTS (SELECT 1 FROM t5 s2 WHERE s2.c1 = b2.c1 AND s2.c2 = s1.c2)) AND EXISTS (SELECT s2.c2 FROM t5 s2 WHERE s2.c1 = b2.c1 AND NOT EXISTS (SELECT 1 FROM t5 s1 WHERE s1.c1 = b1.c1 AND s1.c2 = s2.c2));","WITH alias1 AS ( SELECT c1 AS bar1, COUNT(c2) AS count1 FROM t5 GROUP BY c1 ), alias2 AS ( SELECT c1 AS bar2, COUNT(c2) AS count2 FROM t5 GROUP BY c1 ), alias3 AS ( SELECT alias1.bar1, alias1.count1, t5.c2 AS beer1 FROM alias1 INNER JOIN t5 ON alias1.bar1=t5.c1 ), alias4 AS ( SELECT alias2.bar2, alias2.count2, t5.c2 AS beer2 FROM alias2 INNER JOIN t5 ON alias2.bar2=t5.c1 ), alias5 AS ( SELECT alias3.bar1, alias3.count1, alias3.beer1, alias4.bar2, alias4.count2, alias4.beer2 FROM alias4 LEFT JOIN alias3 ON alias4.beer2=alias3.beer1 AND alias4.bar2<>alias3.bar1 AND alias4.count2>alias3.count1 WHERE alias3.bar1 IS NOT NULL AND alias3.beer1 IS NOT NULL ) SELECT bar1, bar2 FROM alias5;",N,Y,Y
317,7,"{'student_result': [['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT alias1.c2, alias2.total_num_drinker, alias2.avg_price, alias1.most_reg_drinker FROM (SELECT alias3.c2 AS c2, alias3.NumFreq AS total_num_drinker, alias4.AvgBeerPrice AS avg_price FROM (SELECT DISTINCT t4.c2 AS c2, COUNT(t4.c1) AS NumFreq FROM t4 GROUP BY t4.c2) AS alias3 JOIN (SELECT DISTINCT t5.c2 AS c2, AVG(t5.c3) AS AvgBeerPrice FROM t5 GROUP BY t5.c2) AS alias4 ON alias3.c2 = alias4.c2) AS alias2 JOIN (SELECT t4.c2 AS c2, t4.c1 AS most_reg_drinker FROM t4 JOIN (SELECT c2 AS c2, MAX(c3) AS MaxTimes FROM t4 GROUP BY c2) AS alias5 ON t4.c3 = alias5.MaxTimes AND t4.c2 = alias5.c2 GROUP BY t4.c2, t4.c1 ORDER BY t4.c2 ASC, t4.c1 ASC) AS alias1 ON alias1.c2 = alias2.c2 ORDER BY alias1.c2 ASC, alias1.most_reg_drinker ASC;",N,Y,Y
329,7,"{'student_result': [['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Coy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Ben'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT t4.c2, COUNT(DISTINCT t4.c1) AS num_drinkers, AVG(t5.c3) AS avg_price, sub1.alias1 FROM t4 JOIN t5 ON t4.c2 = t5.c1 JOIN (SELECT t4.c2, t4.c1 AS alias1 FROM t4 JOIN (SELECT c2, c1, MAX(c3) AS alias2 FROM t4 GROUP BY c2, c1) mf_sub ON t4.c2 = mf_sub.c2 AND t4.c1 = mf_sub.c1 AND t4.c3 = mf_sub.alias2) sub1 ON t4.c2 = sub1.c2 GROUP BY t4.c2, sub1.alias1 ORDER BY t4.c2;",N,Y,Y
385,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","Select alias1.c2, total_num_drinker, avg_price, most_reg_drinker From (SELECT total.c2, total_num_drinker, avg_price FROM (SELECT c2, Count(DISTINCT c1) as total_num_drinker FROM (SELECT DISTINCT c2, c1 FROM t4) as cnt RIGHT JOIN (SELECT t1.c1 as c2 FROM t1) as alias2 USING (c2) GROUP BY c2) as total INNER JOIN (SELECT c2, avg_price FROM (SELECT t1.c1 as c2 FROM t1) as alias3 LEFT JOIN (SELECT c2, AVG(c3) as avg_price FROM t5 GROUP BY c2) as average USING (c2)) as average ON total.c2 = average.c2) as alias1 INNER JOIN (SELECT t4.c2, c1 as most_reg_drinker FROM t4, (SELECT c2, MAX(c3) as Maxdrinker FROM t4 GROUP BY c2) as Maxvalues WHERE (t4.c2 = Maxvalues.c2) and (c3 = Maxdrinker)) as Maxdrinkers ON alias1.c2 = Maxdrinkers.c2 ORDER BY most_reg_drinker ASC, total_num_drinker DESC;",N,Y,Y
425,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT t1.c1 AS bar_name, COALESCE(COUNT(DISTINCT t4.c1), 0) AS total_num_drinker, COALESCE(AVG(t5.c3), NULL) AS avg_price, (SELECT c1 FROM t4 WHERE c2 = t1.c1 GROUP BY c1 ORDER BY SUM(c3) DESC, c1 ASC LIMIT 1) AS most_reg_drinker FROM t1 t1 LEFT JOIN t4 t4 ON t1.c1 = t4.c2 LEFT JOIN t5 t5 ON t1.c1 = t5.c2 GROUP BY t1.c1 ORDER BY total_num_drinker DESC, t1.c1;",N,Y,Y
577,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Coy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT alias1.c1, COALESCE(COUNT(DISTINCT alias2.c1), 0) AS total_num_drinker, AVG(alias3.c3) AS avg_price, (SELECT alias4.c1 FROM t4 alias4 WHERE alias4.c2 = alias1.c1 GROUP BY alias4.c1 ORDER BY COUNT(alias4.c3) DESC, alias4.c1 ASC LIMIT 1) AS most_reg_drinker FROM t1 alias1 LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2 LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1 GROUP BY alias1.c1 ORDER BY total_num_drinker DESC, alias1.c1 ASC;",N,Y,Y
910,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Ben'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Coy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT t1.c1 AS alias1, COUNT(DISTINCT t4.c1) AS total_num_drinker, AVG(t5.c3) AS avg_price, (SELECT alias2.c1 FROM t4 alias2 WHERE alias2.c2 = t1.c1 GROUP BY alias2.c1 ORDER BY MAX(alias2.c3), alias2.c1 LIMIT 1) AS most_reg_drinker FROM t1, t4, t5 WHERE t1.c1 = t4.c2 AND t1.c1 = t5.c2 GROUP BY t1.c1 ORDER BY total_num_drinker DESC, t1.c1;",N,Y,Y
963,7,"{'student_result': [['Down Under Pub', 6, Decimal('3.4166666666666667'), 'Dan'], ['James Joyce Pub', 16, Decimal('3.6250000000000000'), 'Amy'], ['James Joyce Pub', 16, Decimal('3.6250000000000000'), 'Eve'], ['Satisfaction', 10, Decimal('4.3000000000000000'), 'Ben'], ['Satisfaction', 10, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 4, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 6, Decimal('3.7500000000000000'), 'Coy'], ['The Edge', 6, Decimal('3.7500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH max_drinker AS( SELECT t4_alias1.c1, t4_alias1.c2, t4_alias1.c3 FROM t4 t4_alias1 JOIN (SELECT c2, max(c3) AS mt FROM t4 GROUP BY c2) AS t4_alias2 ON t4_alias1.c2 = t4_alias2.c2 AND t4_alias1.c3 = t4_alias2.mt ) SELECT t4_alias3.c2, count(t4_alias3.c1), avg(t5_alias2.c3), max_drinker.c1 FROM t4 t4_alias3 JOIN t5 t5_alias2 ON t4_alias3.c2 = t5_alias2.c1 JOIN max_drinker ON t4_alias3.c2 = max_drinker.c2 GROUP BY t4_alias3.c2, max_drinker.c1, max_drinker.c3;",N,Y,Y
965,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH alias1 AS( SELECT t4.c2, t4.c1, t4.c3 FROM t4 JOIN ( SELECT c2, max(c3) AS mt FROM t4 GROUP BY c2 ) AS alias2 ON t4.c2 = alias2.c2 AND t4.c3 = alias2.mt) SELECT t4.c2, count(DISTINCT t4.c1) AS cd, avg(t5.c3), alias1.c1 FROM t4 JOIN t5 ON t4.c2=t5.c1 JOIN alias1 ON t4.c2 = alias1.c2 GROUP BY t4.c2, alias1.c1 ORDER BY cd DESC, alias1.c1 ASC;",N,Y,Y
966,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH total_per_bar AS ( SELECT DISTINCT c2, count(c1) AS dc FROM t4 GROUP BY c2), average_per_bar AS ( SELECT c2, avg(c3) AS av FROM t5 GROUP BY c2 ), max_visits AS ( SELECT c2, c1 FROM t4 alias1 WHERE c3 = ( SELECT MAX(alias2.c3) FROM t4 alias2 WHERE alias1.c2 = alias2.c2 ) ) SELECT DISTINCT TPB.c2, TPB.dc, APB.av, MAX(mv.c1) FROM total_per_bar AS TPB JOIN average_per_bar AS APB ON TPB.c2=APB.c2 JOIN max_visits AS mv ON APB.c2=mv.c2 GROUP BY TPB.c2, TPB.dc, APB.av ORDER BY TPB.dc DESC",N,Y,Y
1341,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Ben'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Coy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT t1.c1 AS bar_name, COALESCE(total_num_drinker, 0) AS total_num_drinker, COALESCE(avg_price, NULL) AS avg_price, COALESCE(most_reg_drinker, NULL) AS most_reg_drinker FROM t1 LEFT JOIN (SELECT t4.c2, COUNT(DISTINCT t4.c1) AS total_num_drinker FROM t4 GROUP BY t4.c2) AS alias1 ON t1.c1 = alias1.c2 LEFT JOIN (SELECT t5.c1, AVG(t5.c3) AS avg_price FROM t5 GROUP BY t5.c1) AS alias2 ON t1.c1 = alias2.c1 LEFT JOIN (SELECT t4.c2, t4.c1 AS most_reg_drinker, MAX(t4.c3) AS times_a_week FROM t4 GROUP BY t4.c2, t4.c1 ORDER BY t4.c2, times_a_week DESC, t4.c1) AS alias3 ON t1.c1 = alias3.c2 ORDER BY total_num_drinker DESC, bar_name;",N,Y,Y
1443,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT f.c2, total_num_drinker, avg_price, most_reg_drinker 
FROM (
	SELECT t4.c2, COUNT(t4.c1) AS total_num_drinker FROM t4 GROUP BY t4.c2
	) AS f
JOIN (
	SELECT t5.c1, AVG(t5.c3) AS avg_price FROM t5 GROUP BY t5.c1
	) AS s
ON f.c2=s.c1
JOIN (
	SELECT f.c2, f.c1 AS most_reg_drinker FROM t4 f
	JOIN (
		SELECT t4.c2, MAX(t4.c3) AS mt FROM t4 GROUP BY t4.c2
		) AS mf
	ON f.c2=mf.c2 AND f.c3=mf.mt
	WHERE f.c1 = (SELECT t4.c1 FROM t4 WHERE t4.c2=f.c2 AND t4.c3=mf.mt ORDER BY t4.c1 ASC LIMIT 1)
	) AS m
ON f.c2=m.c2;",N,Y,FIXED
1659,7,"{'student_result': [['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT G.c2, COALESCE(COUNT(DISTINCT G.c1), 0) AS num_of_drinkers, COALESCE(AVG(c3), NULL) AS average, COALESCE((SELECT c1 FROM t4 WHERE c2 = G.c2 ORDER BY c3 DESC, c1 LIMIT 1), NULL) FROM t5 NATURAL JOIN t4 AS G GROUP BY G.c2 ORDER BY SUM(G.c3), G.c2;",N,Y,Y
1660,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT G.c2, COALESCE(COUNT(DISTINCT G.c1), 0) AS num_of_drinkers, COALESCE(AVG(c3), NULL) AS average, COALESCE((SELECT c1 FROM t4 WHERE c2 = G.c2 ORDER BY c3 DESC, c1 LIMIT 1), NULL) FROM t5 NATURAL JOIN t4 AS G GROUP BY G.c2 ORDER BY SUM(G.c3) DESC, G.c2;",N,Y,Y
1670,7,"{'student_result': [['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT c2, total_num_drinker, avg_price, most_reg_drinker FROM (SELECT DISTINCT c1 AS c2 FROM t1 ORDER BY c1) AS alias1 NATURAL JOIN (SELECT COUNT(c1) AS total_num_drinker, c2 FROM t4 GROUP BY c2 ORDER BY total_num_drinker DESC) AS alias2 NATURAL JOIN (SELECT AVG(c3) AS avg_price, c1 FROM t5 GROUP BY c1) AS alias3 NATURAL JOIN (SELECT MAX(c1) AS most_reg_drinker, c2 FROM t4 JOIN (SELECT MAX(c3) AS mostreg, c2 AS c2_alias FROM t4 GROUP BY c2) AS alias4 ON c3 = mostreg AND c2 = c2_alias GROUP BY c2) AS alias5 ORDER BY total_num_drinker",N,Y,Y
1671,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT c1, total_num_drinker, avg_price, most_reg_drinker FROM (SELECT DISTINCT c1 FROM t1 ORDER BY c1) AS alias1 NATURAL JOIN (SELECT COUNT(c1) AS total_num_drinker, c2 FROM t4 GROUP BY c2 ORDER BY total_num_drinker DESC) AS alias2 NATURAL JOIN (SELECT AVG(c3) AS avg_price, c1 FROM t5 GROUP BY c1) AS alias3 NATURAL JOIN (SELECT MAX(c1) AS most_reg_drinker, c2 FROM t4 JOIN (SELECT MAX(c3) AS mostreg, c2 AS alias4 FROM t4 GROUP BY c2) AS alias5 ON c3 = mostreg AND c2 = alias4 GROUP BY c2) AS alias6 ORDER BY total_num_drinker DESC",N,Y,Y
1677,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT c1, total_num_drinker, avg_price, most_reg_drinker FROM (SELECT DISTINCT c1 AS c1 FROM t1 ORDER BY c1) AS alias1 NATURAL JOIN (SELECT COUNT(c1) AS total_num_drinker, c2 FROM t4 GROUP BY c2 ORDER BY total_num_drinker DESC) AS alias2 NATURAL JOIN (SELECT AVG(c3) AS avg_price, c1 FROM t5 GROUP BY c1) AS alias3 NATURAL JOIN (SELECT MIN(c1) AS most_reg_drinker, c2 FROM t4 JOIN (SELECT MAX(c3) AS mostreg, c2 AS bar2 FROM t4 GROUP BY c2) AS alias4 ON c3 = mostreg AND c2 = bar2 GROUP BY c2) AS alias5 ORDER BY total_num_drinker DESC;",N,Y,Y
1765,7,"{'student_result': [[2, 'The Edge', Decimal('3.7500000000000000'), 'Coy'], [2, 'The Edge', Decimal('3.7500000000000000'), 'Dan'], [2, 'Down Under Pub', Decimal('3.4166666666666667'), 'Dan'], [2, 'Satisfaction', Decimal('4.3000000000000000'), 'Ben'], [2, 'Satisfaction', Decimal('4.3000000000000000'), 'Dan'], [2, 'Talk of the Town', Decimal('1.8500000000000000'), 'Dan'], [4, 'James Joyce Pub', Decimal('3.6250000000000000'), 'Amy'], [4, 'James Joyce Pub', Decimal('3.6250000000000000'), 'Eve']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT alias1.total_count, alias1.c2, alias2.avg_price, alias3.c1 FROM (SELECT t4.c2, COUNT(t4.c1) total_count FROM t4 GROUP BY c2 ORDER BY c2 ASC) alias1, (SELECT t5.c2, AVG(t5.c3) avg_price FROM t5 GROUP BY c2 ORDER BY c2 ASC) alias2, (SELECT t7.c2, t7.c1, t7.c3 FROM t4 t7, (SELECT t4.c2, MAX(t4.c3) times_max FROM t4 GROUP BY c2 ORDER BY c2 ASC) alias4 WHERE t7.c2 = alias4.c2 AND t7.c3 = alias4.times_max ORDER BY t7.c1 ASC) alias3 WHERE alias1.c2 = alias2.c2 AND alias1.c2 = alias3.c2 AND alias2.c2 = alias3.c2 ORDER BY alias1.total_count ASC;",N,Y,Y
1767,7,"{'student_result': [[4, 'James Joyce Pub', Decimal('3.6250000000000000'), 'Eve'], [4, 'James Joyce Pub', Decimal('3.6250000000000000'), 'Amy'], [2, 'Down Under Pub', Decimal('3.4166666666666667'), 'Dan'], [2, 'Talk of the Town', Decimal('1.8500000000000000'), 'Dan'], [2, 'The Edge', Decimal('3.7500000000000000'), 'Dan'], [2, 'Satisfaction', Decimal('4.3000000000000000'), 'Dan'], [2, 'The Edge', Decimal('3.7500000000000000'), 'Coy'], [2, 'Satisfaction', Decimal('4.3000000000000000'), 'Ben']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT alias1.total_count, alias1.c2, alias2.avg_price, alias3.c1 FROM (SELECT t4.c2, COUNT(t4.c1) total_count FROM t4 GROUP BY c2 ORDER BY c2 ASC) alias1, (SELECT t5.c1, AVG(t5.c3) avg_price FROM t5 GROUP BY c1 ORDER BY c1 ASC) alias2, (SELECT ft.c2, ft.c1, ft.c3 FROM t4 ft, (SELECT t4.c2, MAX(t4.c3) times_max FROM t4 GROUP BY c2 ORDER BY c2 ASC) alias_inner WHERE ft.c2 = alias_inner.c2 AND ft.c3 = alias_inner.times_max ORDER BY ft.c1 ASC) alias3 WHERE alias1.c2 = alias2.c1 AND alias1.c2 = alias3.c2 AND alias2.c1 = alias3.c2 ORDER BY alias1.total_count DESC, alias3.c1 DESC;",N,Y,Y
1769,7,"{'student_result': [[4, 'James Joyce Pub', Decimal('3.6250000000000000'), 'Amy'], [4, 'James Joyce Pub', Decimal('3.6250000000000000'), 'Eve'], [2, 'Satisfaction', Decimal('4.3000000000000000'), 'Ben'], [2, 'The Edge', Decimal('3.7500000000000000'), 'Coy'], [2, 'Satisfaction', Decimal('4.3000000000000000'), 'Dan'], [2, 'Down Under Pub', Decimal('3.4166666666666667'), 'Dan'], [2, 'Talk of the Town', Decimal('1.8500000000000000'), 'Dan'], [2, 'The Edge', Decimal('3.7500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT alias1.total_count, alias1.c2, alias2.avg_price, alias3.c1 FROM (SELECT t4.c2, COUNT(t4.c1) total_count FROM t4 GROUP BY c2 ORDER BY c2 ASC) alias1, (SELECT t5.c2, AVG(t5.c3) avg_price FROM t5 GROUP BY c2 ORDER BY c2 ASC) alias2, (SELECT t4.c2, t4.c1, t4.c3 FROM t4, (SELECT t4.c2, MAX(t4.c3) times_max FROM t4 GROUP BY c2 ORDER BY c2 ASC) bar_max WHERE t4.c2 = bar_max.c2 AND t4.c3 = bar_max.times_max ORDER BY t4.c1 ASC) alias3 WHERE alias1.c2 = alias2.c2 AND alias1.c2 = alias3.c2 AND alias2.c2 = alias3.c2 ORDER BY alias1.total_count DESC, alias3.c1 ASC;",N,Y,Y
1785,7,"{'student_result': [['James Joyce Pub', 6, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 4, Decimal('4.3000000000000000'), 'Ben'], ['Down Under Pub', 3, Decimal('3.4166666666666667'), 'Dan'], ['Talk of the Town', 3, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT alias1.c1, (SELECT SUM(c3) FROM t4 alias2 WHERE alias2.c2 = alias1.c1) AS total_num_drinker, (SELECT AVG(c3) FROM t5 alias3 WHERE alias3.c2 = alias1.c1) AS avg_price, (SELECT c1 FROM t4 alias4 WHERE alias4.c2 = alias1.c1 ORDER BY alias4.c3 DESC, alias4.c1 LIMIT 1) AS most_reg_drinker FROM t1 alias1 ORDER BY total_num_drinker DESC, alias1.c1;",N,Y,Y
2099,7,"{'student_result': [[4, 'James Joyce Pub', Decimal('3.6250000000000000'), 'Amy'], [2, 'Down Under Pub', Decimal('3.4166666666666667'), 'Dan'], [2, 'Satisfaction', Decimal('4.3000000000000000'), 'Ben'], [2, 'Talk of the Town', Decimal('1.8500000000000000'), 'Dan'], [2, 'The Edge', Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT td.total_count, td.bar, avg_p.avg_price, mfd.drinker FROM (SELECT t4.c2 bar, COUNT(t4.c1) total_count FROM t4 GROUP BY c2 ORDER BY c2 DESC) td, (SELECT t5.c1 bar, AVG(t5.c3) avg_price FROM t5 GROUP BY c1 ORDER BY c1 ASC) avg_p, (SELECT mfds.bar, MIN(mfds.drinker) drinker FROM (SELECT ft.c2 bar, ft.c1 drinker, ft.c3 times_a_week FROM t4 ft JOIN (SELECT ff.c2 bar, MAX(ff.c3) times_max FROM t4 ff GROUP BY c2) bar_max ON bar_max.bar = ft.c2 AND ft.c3 = bar_max.times_max ORDER BY ft.c2 ASC, ft.c3 DESC, ft.c1 ASC) mfds GROUP BY mfds.bar) mfd WHERE td.bar = avg_p.bar AND td.bar = mfd.bar AND avg_p.bar = mfd.bar ORDER BY td.total_count DESC, td.bar ASC, mfd.drinker ASC;",N,Y,Y
2148,7,"{'student_result': [['James Joyce Pub', 4, Decimal('7.2500000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT t1.c1, COALESCE(COUNT(DISTINCT t4.c1), 0) as total_num_drinker, COALESCE((SUM(t5.c3)/COUNT(DISTINCT t5.c2))/2, NULL) as avg_price, (SELECT t4.c1 FROM t4 WHERE t4.c2 = t1.c1 ORDER BY t4.c3 DESC, t4.c1 ASC LIMIT 1) as most_reg_drinker FROM t1 INNER JOIN t4 ON t1.c1 = t4.c2 INNER JOIN t5 ON t1.c1 = t5.c1 GROUP BY t1.c1 ORDER BY total_num_drinker DESC, t1.c1 ASC;",N,Y,Y
2327,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT t1.c1 AS bar, COUNT(DISTINCT t4.c1) AS total_num_drinker, AVG(t5.c3) AS avg_price, alias1.most_reg_drinker FROM t1 t1 LEFT JOIN t4 t4 ON t1.c1 = t4.c2 LEFT JOIN t5 t5 ON t1.c1 = t5.c2 LEFT JOIN ( SELECT t4.c2, t4.c1 AS most_reg_drinker FROM t4 t4 JOIN ( SELECT c2, MAX(c3) AS max_times_a_week FROM t4 GROUP BY c2 ) alias2 ON t4.c2 = alias2.c2 AND t4.c3 = alias2.max_times_a_week ) alias1 ON t1.c1 = alias1.c2 GROUP BY t1.c1, alias1.most_reg_drinker ORDER BY total_num_drinker DESC, t1.c1;",N,Y,Y
2397,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT t1.c1 AS bar_name, COALESCE(drinker_counts.total_num_drinker, 0) AS total_num_drinker, COALESCE(beer_prices.avg_price, NULL) AS avg_price, COALESCE(most_regular.most_reg_drinker, NULL) AS most_reg_drinker FROM t1 LEFT JOIN (SELECT t4.c2, COUNT(DISTINCT t4.c1) AS total_num_drinker FROM t4 GROUP BY t4.c2) AS drinker_counts ON t1.c1 = drinker_counts.c2 LEFT JOIN (SELECT t5.c1, AVG(t5.c3) AS avg_price FROM t5 GROUP BY t5.c1) AS beer_prices ON t1.c1 = beer_prices.c1 LEFT JOIN (SELECT t4.c2, t4.c1 AS most_reg_drinker FROM t4 INNER JOIN (SELECT c2, MAX(c3) AS max_times FROM t4 GROUP BY c2) AS max_frequent ON t4.c2 = max_frequent.c2 AND t4.c3 = max_frequent.max_times ORDER BY t4.c2, t4.c1) AS most_regular ON t1.c1 = most_regular.c2 ORDER BY total_num_drinker DESC, bar_name;",N,Y,Y
2461,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH alias1 AS ( SELECT alias2.c1 AS bar, t4.c1, t5.c2, t5.c3, t4.c3 FROM t1 alias2 FULL OUTER JOIN t4 ON alias2.c1 = t4.c2 FULL OUTER JOIN t5 ON alias2.c1 = t5.c1 ) SELECT bar, COALESCE(COUNT(DISTINCT c1), 0) AS distinct_drinkers, COALESCE(AVG(c3), null) AS avg_price, COALESCE((SELECT c1 FROM t4 WHERE c2=alias1.bar ORDER BY c3 DESC, c1 LIMIT 1), null) AS name FROM alias1 GROUP BY alias1.bar ORDER BY distinct_drinkers DESC, name DESC",N,Y,Y
2668,7,"{'student_result': [['Down Under Pub', 9, Decimal('3.4166666666666667'), 'Dan'], ['James Joyce Pub', 24, Decimal('3.6250000000000000'), 'Eve'], ['Satisfaction', 20, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 6, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 6, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH ranked_drinkers AS ( SELECT t4.c2, t4.c1, ROW_NUMBER() OVER (PARTITION BY t4.c2 ORDER BY t4.c3 DESC) AS rank FROM t4 t4 ) SELECT t4.c2, SUM(t4.c3) AS total_times_a_week, AVG(t5.c3) AS average_beers_price, rd.c1 AS most_frequent_drinker FROM t4 t4 JOIN t5 t5 ON t4.c2 = t5.c1 JOIN ranked_drinkers rd ON t4.c2 = rd.c2 AND rd.rank = 1 GROUP BY t4.c2, rd.c1;",N,Y,Y
2731,7,"{'student_result': [['Down Under Pub', 'Coy', 1, 1], ['Down Under Pub', 'Dan', 1, 1], ['James Joyce Pub', 'Dan', 1, 1], ['James Joyce Pub', 'Eve', 1, 1], ['James Joyce Pub', 'Ben', 1, 1], ['James Joyce Pub', 'Amy', 1, 1], ['Satisfaction', 'Ben', 1, 1], ['Satisfaction', 'Dan', 1, 1], ['Talk of the Town', 'Ben', 1, 1], ['Talk of the Town', 'Dan', 1, 1], ['The Edge', 'Coy', 1, 1], ['The Edge', 'Dan', 1, 1]], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH CTE AS ( SELECT c2, COUNT(*) as total_frequents FROM t4 GROUP BY c2), CTE2 AS ( SELECT c1, AVG(c3) as average_price FROM t5 GROUP BY c1), CTE3 AS( SELECT c2, c1, COUNT(*) AS freq_count, RANK() OVER (PARTITION BY c2 ORDER BY COUNT(*) DESC) AS rank FROM t4 GROUP BY c2, c1) SELECT * FROM CTE3",N,Y,Y
2742,7,"{'student_result': [['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH avg_price AS (
    SELECT t5.c1, AVG(t5.c3) AS average_beer_price
    FROM t5
    GROUP BY t5.c1
), total_drinkers AS (
    SELECT t4.c2, COUNT(t4.c1) AS total_drinker_frequents
    FROM t4
    GROUP BY t4.c2
), most_regular_drinker AS (
    SELECT t4.c2, t4.c1, RANK() OVER (ORDER BY t4.c2, t4.c3 DESC, t4.c1 ASC) AS rank
    FROM t4
)
SELECT
    t1.c1 AS bar,
    td.total_drinker_frequents AS total_num_drinker,
    ap.average_beer_price,
    mrd.c1 AS most_reg_drinker
FROM t1
JOIN total_drinkers td ON t1.c1 = td.c2
JOIN avg_price ap ON t1.c1 = ap.c1
JOIN most_regular_drinker mrd ON t1.c1 = mrd.c2 AND mrd.rank = 1
ORDER BY 
    total_num_drinker DESC, 
    t1.c1 ASC;",N,Y,FIXED
2896,7,"{'student_result': [['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH alias1 AS ( SELECT c2, COUNT(*) as total_frequents FROM t4 GROUP BY c2 ), alias2 AS ( SELECT c1, AVG(c3) as average_price FROM t5 GROUP BY c1 ), alias3 AS ( SELECT c2, MAX(c3) AS max_times_a_week FROM t4 GROUP BY c2 ), alias4 AS( SELECT * FROM t4 ORDER BY c1 ), alias5 AS( SELECT alias3.c2, alias4.c1 FROM alias3, alias4 WHERE alias3.c2 = alias4.c2 and alias3.max_times_a_week = alias4.c3 ), alias6 AS( SELECT c2, MIN(c1) as min FROM alias5 GROUP BY c2 ) SELECT alias1.c2, alias1.total_frequents, alias2.average_price, alias6.min FROM alias1, alias2, alias6 WHERE alias1.c2 = alias2.c1 AND alias2.c1 = alias6.c2 ORDER BY alias1.total_frequents;",N,Y,Y
3222,7,"{'student_result': [['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Coy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH Bar_Drinkers AS ( SELECT t4.c2, COUNT(t4.c1) AS total_num_drinker FROM t4 GROUP BY t4.c2 ), Avg_Bar_Price AS ( SELECT t5.c1, AVG(t5.c3) AS avg_price FROM t5 GROUP BY t5.c1 ), Max_Visits AS ( SELECT t4.c1, MAX(t4.c3) AS highest_visits FROM t4 GROUP BY t4.c1 ), Most_Freq_Drinker AS ( SELECT t4.c2, t4.c1 AS most_reg_drinker FROM t4 JOIN Max_Visits alias1 ON t4.c1 = alias1.c1 AND t4.c3 = alias1.highest_visits ) SELECT t1.c1, alias1.total_num_drinker, alias2.avg_price, alias3.most_reg_drinker FROM t1 LEFT JOIN Bar_Drinkers alias1 ON t1.c1 = alias1.c2 LEFT JOIN Avg_Bar_Price alias2 ON t1.c1 = alias2.c1 LEFT JOIN Most_Freq_Drinker alias3 ON t1.c1 = alias3.c2 ORDER BY t1.c1 ASC;",N,Y,Y
3225,7,"{'student_result': [['James Joyce Pub', 16, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 10, Decimal('4.3000000000000000'), 'Ben'], ['The Edge', 6, Decimal('3.7500000000000000'), 'Coy'], ['Down Under Pub', 6, Decimal('3.4166666666666667'), 'Dan'], ['The Edge', 6, Decimal('3.7500000000000000'), 'Dan'], ['Satisfaction', 10, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 4, Decimal('1.8500000000000000'), 'Dan'], ['James Joyce Pub', 16, Decimal('3.6250000000000000'), 'Eve']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH temp(c2, total_num_drinker, avg_price, most_reg) AS (SELECT f.c2, COUNT(f.c1), AVG(s.c3), MAX(f.c3) FROM t4 f, t5 s WHERE f.c2=s.c1 GROUP BY f.c2) SELECT f.c2, total_num_drinker, avg_price, f.c1 AS most_reg_drinker FROM t4 f, temp t WHERE f.c2= t.c2 AND f.c3 = t.most_reg;",N,Y,Y
3226,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Coy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH alias1 AS (SELECT t4.c2, COUNT(t4.c1) AS total_num_drinker FROM t4 GROUP BY t4.c2), alias2 AS (SELECT t5.c1, AVG(t5.c3) AS avg_price FROM t5 GROUP BY t5.c1), alias3 AS (SELECT t4.c1, MAX(t4.c3) AS highest_visits FROM t4 GROUP BY t4.c1), alias4 AS (SELECT t4.c2, t4.c1 AS most_reg_drinker FROM t4 JOIN alias3 ON t4.c1 = alias3.c1 AND t4.c3 = alias3.highest_visits) SELECT t1.c1, alias1.total_num_drinker, alias2.avg_price, alias4.most_reg_drinker FROM t1 LEFT JOIN alias1 ON t1.c1 = alias1.c2 LEFT JOIN alias2 ON t1.c1 = alias2.c1 LEFT JOIN alias4 ON t1.c1 = alias4.c2 ORDER BY total_num_drinker DESC, t1.c1 ASC;",N,Y,Y
3231,7,"{'student_result': [['Down Under Pub', 6, Decimal('3.4166666666666667'), 'Dan'], ['James Joyce Pub', 16, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 10, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 4, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 6, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","with temp(c2, total_num_drinker, avg_price, most_reg) as (select t4.c2, count(t4.c1), avg(t5.c3), max(t4.c3) from t4, t5 where t4.c2=t5.c1 group by t4.c2) select t4.c2, total_num_drinker, avg_price, min(t4.c1) as most_reg_drinker from t4, temp t where t4.c2= t.c2 and t4.c3 = t.most_reg group by t4.c2, total_num_drinker, avg_price;",N,Y,Y
3265,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Coy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH All_Bars AS ( SELECT DISTINCT alias1.c1 FROM t1 alias1 ), Bar_Drinkers AS ( SELECT alias2.c2, COUNT(alias2.c1) AS total_num_drinker FROM t4 alias2 GROUP BY alias2.c2 ), Avg_Bar_Price AS ( SELECT alias3.c2, AVG(alias3.c3) AS avg_price FROM t5 alias3 GROUP BY alias3.c2 ), Max_Visits AS ( SELECT alias4.c1, MAX(alias4.c3) AS highest_visits FROM t4 alias4 GROUP BY alias4.c1 ), Most_Freq_Drinker AS ( SELECT alias5.c2, alias5.c1 AS most_reg_drinker FROM t4 alias5, Max_Visits mv WHERE alias5.c1 = mv.c1 AND alias5.c3 = mv.highest_visits ) SELECT DISTINCT alias6.c1, bd.total_num_drinker, abp.avg_price, mfd.most_reg_drinker FROM All_Bars alias6 LEFT JOIN Bar_Drinkers bd ON alias6.c1 = bd.c2 LEFT JOIN Avg_Bar_Price abp ON alias6.c1 = abp.c2 LEFT JOIN Most_Freq_Drinker mfd ON alias6.c1 = mfd.c2 ORDER BY bd.total_num_drinker DESC;",N,Y,Y
3566,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH All_Bars AS (SELECT DISTINCT t1.c1 FROM t1), Bar_Drinkers AS (SELECT t4.c2, COUNT(t4.c1) AS total_num_drinker FROM t4 GROUP BY t4.c2), Avg_Bar_Price AS (SELECT t5.c1, AVG(t5.c3) AS avg_price FROM t5 GROUP BY t5.c1), Most_Freq_Drinker AS (SELECT t4.c2, t4.c1 AS most_reg_drinker FROM t4 LEFT JOIN (SELECT t4.c2, t4.c1, t4.c3 FROM t4 INNER JOIN (SELECT t4.c2, MAX(t4.c3) AS most_freq FROM t4 GROUP BY t4.c2) t4_agg ON t4.c2 = t4_agg.c2 AND t4.c3 = t4_agg.most_freq) maxf ON t4.c2 = maxf.c2 AND t4.c1 = maxf.c1 WHERE maxf.c1 IS NOT NULL) SELECT t1.c1, COALESCE(Bar_Drinkers.total_num_drinker, 0) AS total_num_drinker, Avg_Bar_Price.avg_price, Most_Freq_Drinker.most_reg_drinker FROM All_Bars t1 LEFT JOIN Bar_Drinkers ON t1.c1 = Bar_Drinkers.c2 LEFT JOIN Avg_Bar_Price ON t1.c1 = Avg_Bar_Price.c1 LEFT JOIN Most_Freq_Drinker ON t1.c1 = Most_Freq_Drinker.c2 ORDER BY Most_Freq_Drinker.most_reg_drinker ASC, Bar_Drinkers.total_num_drinker DESC, t1.c1 ASC;",N,Y,Y
3615,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Dan'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Coy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT t1.c1,
COUNT(DISTINCT t4.c1) total_num_drinker,
AVG(t5.c3) avg_price,
(
	SELECT t4.c1
	FROM t4
	WHERE t4.c2 = t1.c1
	ORDER BY t4.c3, t4.c1 DESC
	LIMIT 1
) most_reg_drinker
FROM
    t1
    JOIN t4 ON t1.c1 = t4.c2
    JOIN t5 ON t1.c1 = t5.c1
GROUP BY
    t1.c1
ORDER BY total_num_drinker DESC;",N,Y,REMAPPED
4220,7,"{'student_result': [['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH alias1 AS ( SELECT t4.c2 AS barName, COUNT(DISTINCT t4.c1) AS totalDrinkers, AVG(t5.c3) AS avgPrice FROM t4 JOIN t5 ON t4.c2 = t5.c2 GROUP BY t4.c2 ), alias2 AS ( SELECT t4.c2 AS barName, FIRST_VALUE(t4.c1) OVER (PARTITION BY t4.c2 ORDER BY SUM(t4.c3) DESC) AS mostReg FROM t4 GROUP BY t4.c2, t4.c1 ) SELECT DISTINCT alias1.barName, alias1.totalDrinkers, alias1.avgPrice, alias2.mostReg FROM alias1 JOIN alias2 ON alias1.barName = alias2.barName ORDER BY alias1.barName ASC;",N,Y,Y
4221,7,"{'student_result': [['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH alias1 AS ( SELECT t4.c2 AS barName, COUNT(DISTINCT t4.c1) AS totalDrinkers, AVG(t5.c3) AS avgPrice FROM t4 JOIN t5 ON t4.c2 = t5.c1 GROUP BY t4.c2 ), alias2 AS ( SELECT t4.c2 AS barName, FIRST_VALUE(t4.c1) OVER (PARTITION BY t4.c2 ORDER BY SUM(t4.c3) DESC) AS mostReg FROM t4 GROUP BY t4.c2, t4.c1 ) SELECT DISTINCT alias1.barName, alias1.totalDrinkers, alias1.avgPrice, alias2.mostReg FROM alias1 JOIN alias2 ON alias1.barName = alias2.barName ORDER BY alias1.avgPrice DESC;",N,Y,Y
4225,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH alias1 AS ( SELECT t4.c2 AS barName, COUNT(DISTINCT t4.c1) AS totalDrinkers, AVG(t5.c3) AS avgPrice FROM t4 JOIN t5 ON t4.c2 = t5.c1 GROUP BY t4.c2 ), alias2 AS ( SELECT t4.c2 AS barName, FIRST_VALUE(t4.c1) OVER (PARTITION BY t4.c2 ORDER BY SUM(t4.c3) DESC) AS mostReg FROM t4 GROUP BY t4.c2, t4.c1 ) SELECT DISTINCT alias1.barName, alias1.totalDrinkers, alias1.avgPrice, alias2.mostReg FROM alias1 JOIN alias2 ON alias1.barName = alias2.barName ORDER BY alias1.totalDrinkers DESC;",N,Y,Y
5463,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT 
    t1.c1, 
    COALESCE(COUNT(DISTINCT t4.c1), 0) as total_num_drinker, 
    COALESCE(AVG(t5.c3), NULL) as avg_price, 
    most_frequent.c1 as most_reg_drinker
FROM t1
JOIN t5 ON t5.c1 = t1.c1
JOIN t4 ON t4.c2 = t1.c1
LEFT JOIN (
    SELECT t4.c2, t4.c1
    FROM t4
    WHERE (t4.c2, t4.c3) IN (
        SELECT t4.c2, MAX(t4.c3)
        FROM t4
        GROUP BY t4.c2
    )
) AS most_frequent ON t1.c1 = most_frequent.c2
GROUP BY t1.c1, most_frequent.c1
ORDER BY most_frequent.c1 DESC, t1.c1;",N,Y,REMAPPED
5564,7,"{'student_result': [['James Joyce Pub', 24, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 20, Decimal('4.3000000000000000'), 'Ben'], ['Down Under Pub', 9, Decimal('3.4166666666666667'), 'Dan'], ['Talk of the Town', 6, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 6, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT t1.c1 AS bar_name, COALESCE(SUM(t4.c3), 0) AS total_num_drinker, AVG(t5.c3) AS avg_price, (SELECT c1 FROM (SELECT t3.c1, SUM(t4.c3) AS total_times FROM t3 JOIN t4 ON t3.c1 = t4.c1 WHERE t4.c2 = t1.c1 GROUP BY t3.c1 ORDER BY total_times DESC, t3.c1 ASC LIMIT 1) AS alias1) AS most_reg_drinker FROM t1 LEFT JOIN t4 ON t1.c1 = t4.c2 LEFT JOIN t5 ON t1.c1 = t5.c1 GROUP BY t1.c1 ORDER BY total_num_drinker DESC, t1.c1 ASC;",N,Y,Y
5746,7,"{'student_result': [['James Joyce Pub', 2, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['Down Under Pub', 1, Decimal('3.4166666666666667'), 'Dan'], ['Talk of the Town', 1, Decimal('1.8500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","select t1.c1, COALESCE(tm.total_num_drinker, 0), COALESCE(ap.avg_price, NULL), COALESCE(tm.most_reg_drinker, NULL) from t1 left join (select u.c2, count(u.c1) as total_num_drinker, min(u.c1) as most_reg_drinker from t4 as u join (select c2, max(c3) as max_times from t4 group by c2) as mrd on u.c2 = mrd.c2 and u.c3 = mrd.max_times group by u.c2) as tm on t1.c1 = tm.c2 left join (select c1, avg(c3) as avg_price from t5 group by c1) as ap on t1.c1 = ap.c1 order by tm.total_num_drinker desc, t1.c1, tm.most_reg_drinker",N,Y,Y
5824,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), None], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), None], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH numDrinker AS ( SELECT c2, COUNT(c1) AS num FROM t4 GROUP BY c2 ), avgPrice AS ( SELECT c1, AVG(c3) AS price FROM t5 GROUP BY c1 ), mostReg AS ( SELECT c2, c1 FROM t4 f1 WHERE f1.c3 = ( SELECT MAX(f2.c3) FROM t4 f2 WHERE f1.c2 = f2.c2 ) AND f1.c1 = ( SELECT MIN(f2.c1) FROM t4 f2 WHERE f1.c2 = f2.c2 AND f2.c3 = f2.c3 ) ) SELECT t1.c1, COALESCE(numDrinker.num, 0) AS num, avgPrice.price, mostReg.c1 FROM t1 LEFT JOIN numDrinker ON t1.c1 = numDrinker.c2 LEFT JOIN avgPrice ON t1.c1 = avgPrice.c1 LEFT JOIN mostReg ON t1.c1 = mostReg.c2 ORDER BY num DESC, t1.c1;",N,Y,Y
5914,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH frequents_count AS ( SELECT c2 AS c2_alias, COUNT(DISTINCT c1) AS total_drinkers FROM t4 GROUP BY c2 ), average_price AS ( SELECT c1 AS c1_alias, AVG(c3) AS avg_price FROM t5 GROUP BY c1 ), top_drinker AS ( SELECT c2 AS c2_alias, c1 AS c1_alias, c3, ROW_NUMBER() OVER (PARTITION BY c2 ORDER BY c3 DESC) AS rn FROM t4 ) SELECT t1.c1 AS bar_name, fc.total_drinkers, ap.avg_price, td.c1_alias AS top_drinker FROM t1 LEFT JOIN frequents_count fc ON t1.c1 = fc.c2_alias LEFT JOIN average_price ap ON t1.c1 = ap.c1_alias LEFT JOIN top_drinker td ON t1.c1 = td.c2_alias AND td.rn = 1 ORDER BY fc.total_drinkers DESC;",N,Y,Y
5923,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Dan'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT alias1.c1 AS bar_name, COUNT(DISTINCT alias2.c1) AS total_frequenters, AVG(alias3.c3) AS average_beer_price, (SELECT alias4.c1 FROM t4 alias5 JOIN t3 alias4 ON alias5.c1 = alias4.c1 GROUP BY alias5.c2, alias4.c1 ORDER BY COUNT(alias5.c3) DESC LIMIT 1) AS most_frequent_drinker FROM t1 alias1 LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2 LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1 GROUP BY alias1.c1 ORDER BY total_frequenters DESC;",N,Y,Y
6375,7,"{'student_result': [['Down Under Pub', 6, Decimal('3.4166666666666667'), 2], ['Talk of the Town', 4, Decimal('1.8500000000000000'), 2], ['Satisfaction', 10, Decimal('4.3000000000000000'), 2], ['James Joyce Pub', 16, Decimal('3.6250000000000000'), 2], ['The Edge', 6, Decimal('3.7500000000000000'), 1]], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT alias1.c1, COUNT(t4.c1), AVG(t5.c3), MAX(t4.c3) FROM t1 alias1 LEFT JOIN t4 ON alias1.c1 = t4.c2 LEFT JOIN t5 ON alias1.c1 = t5.c1 GROUP BY alias1.c1",N,Y,Y
6559,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH total_drinkers AS ( SELECT c2, COUNT(c1) AS total_num_drinker FROM t4 GROUP BY c2 ), avg_prices AS ( SELECT c1, AVG(c3) AS avg_price FROM t5 GROUP BY c1 ), most_reg_drinkers AS ( SELECT t4.c2, t4.c1, ROW_NUMBER() OVER (PARTITION BY t4.c2 ORDER BY MAX(t4.c3) DESC, t4.c1) AS rnk FROM t4 GROUP BY t4.c2, t4.c1 ) SELECT t1.c1 AS bar, COALESCE(total_drinkers.total_num_drinker, 0) AS total_num_drinker, avg_prices.avg_price, CASE WHEN total_drinkers.total_num_drinker = 0 THEN NULL ELSE most_reg_drinkers.c1 END FROM t1 LEFT JOIN total_drinkers ON t1.c1 = total_drinkers.c2 LEFT JOIN avg_prices ON t1.c1 = avg_prices.c1 LEFT JOIN ( SELECT c2, c1 FROM most_reg_drinkers WHERE rnk = 1 ) most_reg_drinkers ON t1.c1 = most_reg_drinkers.c2 ORDER BY total_num_drinker DESC, t1.c1 DESC;",N,Y,Y
6565,7,"{'student_result': [['Down Under Pub', 6, Decimal('3.4166666666666667'), 'Dan'], ['Talk of the Town', 4, Decimal('1.8500000000000000'), 'Dan'], ['Satisfaction', 10, Decimal('4.3000000000000000'), 'Dan'], ['James Joyce Pub', 16, Decimal('3.6250000000000000'), 'Eve'], ['The Edge', 6, Decimal('3.7500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT alias1.c1, COUNT(alias2.c1), AVG(alias3.c3), MAX(alias2.c1) FROM t1 alias1 LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c2 LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2 GROUP BY alias1.c1",N,Y,Y
6602,7,"{'student_result': [['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['Down Under Pub', 3, Decimal('3.4166666666666667'), 'Dan'], ['The Edge', 6, Decimal('3.7500000000000000'), 'Coy'], ['James Joyce Pub', 8, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 10, Decimal('4.3000000000000000'), 'Ben']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT alias1.c1, COUNT(alias2.c1), AVG(alias3.c3), MIN(alias2.c1) FROM t1 alias1, t5 alias3, t4 alias2 WHERE alias2.c2 = alias1.c1 AND alias3.c2 = alias1.c1 AND NOT EXISTS (SELECT * FROM t4 alias4 WHERE alias4.c3 > alias2.c3 AND alias2.c2 = alias4.c2) GROUP BY alias1.c1 ORDER BY COUNT(alias2.c1);",N,Y,Y
6616,7,"{'student_result': [['Down Under Pub', 'Dan', Decimal('1.00'), 'Dan'], ['Down Under Pub', 'Coy', Decimal('1.00'), 'Coy'], ['Down Under Pub', 'Dan', Decimal('2.25'), 'Dan'], ['Down Under Pub', 'Coy', Decimal('2.25'), 'Coy'], ['Down Under Pub', 'Dan', Decimal('7.00'), 'Dan'], ['Down Under Pub', 'Coy', Decimal('7.00'), 'Coy'], ['James Joyce Pub', 'Ben', Decimal('3.50'), 'Ben'], ['James Joyce Pub', 'Eve', Decimal('1.00'), 'Eve'], ['James Joyce Pub', 'Dan', Decimal('1.00'), 'Dan'], ['James Joyce Pub', 'Ben', Decimal('1.00'), 'Ben'], ['James Joyce Pub', 'Amy', Decimal('1.00'), 'Amy'], ['James Joyce Pub', 'Eve', Decimal('7.00'), 'Eve'], ['James Joyce Pub', 'Dan', Decimal('7.00'), 'Dan'], ['James Joyce Pub', 'Ben', Decimal('7.00'), 'Ben'], ['James Joyce Pub', 'Amy', Decimal('7.00'), 'Amy'], ['James Joyce Pub', 'Eve', Decimal('3.00'), 'Eve'], ['James Joyce Pub', 'Dan', Decimal('3.00'), 'Dan'], ['James Joyce Pub', 'Ben', Decimal('3.00'), 'Ben'], ['James Joyce Pub', 'Amy', Decimal('3.00'), 'Amy'], ['James Joyce Pub', 'Eve', Decimal('3.50'), 'Eve'], ['James Joyce Pub', 'Dan', Decimal('3.50'), 'Dan'], ['James Joyce Pub', 'Amy', Decimal('3.50'), 'Amy'], ['Satisfaction', 'Ben', Decimal('7.75'), 'Ben'], ['Satisfaction', 'Dan', Decimal('1.75'), 'Dan'], ['Satisfaction', 'Ben', Decimal('1.75'), 'Ben'], ['Satisfaction', 'Dan', Decimal('2.25'), 'Dan'], ['Satisfaction', 'Ben', Decimal('2.25'), 'Ben'], ['Satisfaction', 'Dan', Decimal('7.00'), 'Dan'], ['Satisfaction', 'Ben', Decimal('7.00'), 'Ben'], ['Satisfaction', 'Dan', Decimal('2.75'), 'Dan'], ['Satisfaction', 'Ben', Decimal('2.75'), 'Ben'], ['Satisfaction', 'Dan', Decimal('7.75'), 'Dan'], ['Talk of the Town', 'Ben', Decimal('2.20'), 'Ben'], ['Talk of the Town', 'Dan', Decimal('1.50'), 'Dan'], ['Talk of the Town', 'Ben', Decimal('1.50'), 'Ben'], ['Talk of the Town', 'Dan', Decimal('2.20'), 'Dan'], ['The Edge', 'Dan', Decimal('1.75'), 'Dan'], ['The Edge', 'Coy', Decimal('1.75'), 'Coy'], ['The Edge', 'Dan', Decimal('2.50'), 'Dan'], ['The Edge', 'Coy', Decimal('2.50'), 'Coy'], ['The Edge', 'Dan', Decimal('7.00'), 'Dan'], ['The Edge', 'Coy', Decimal('7.00'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT alias1.c1, alias3.c1, alias2.c3, alias3.c1 FROM t1 as alias1, t5 as alias2, t4 as alias3 WHERE alias3.c2 = alias1.c1 AND alias2.c2 = alias1.c1 ORDER BY alias1.c1",N,Y,Y
6617,7,"{'student_result': [['Down Under Pub', 1, Decimal('3.4166666666666667'), 'Dan'], ['James Joyce Pub', 2, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 1, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","Select t1.c1, COUNT(DISTINCT t4.c1), AVG(t5.c3), MIN(t4.c1) FROM t1, t5, t4 WHERE t4.c2 = t1.c1 AND t5.c2 = t1.c1 AND NOT EXISTS (SELECT * FROM t4 as alias1 WHERE alias1.c3 > t4.c3 AND t4.c2 = alias1.c2) GROUP BY t1.c1 ORDER BY t1.c1;",N,Y,Y
6667,7,"{'student_result': [['Talk of the Town', 4, Decimal('1.8500000000000000'), 'Dan'], ['Down Under Pub', 6, Decimal('3.4166666666666667'), 'Dan'], ['The Edge', 6, Decimal('3.7500000000000000'), 'Coy'], ['Satisfaction', 10, Decimal('4.3000000000000000'), 'Ben'], ['James Joyce Pub', 16, Decimal('3.6250000000000000'), 'Amy']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT t1.c1, COUNT(t4.c1), AVG(t5.c3), MIN(alias1.c2) FROM t1, t5, t4, (SELECT c2, MIN(c1) AS c1 FROM t4 WHERE NOT EXISTS (SELECT * FROM t4 AS alias2 WHERE alias2.c3 > t4.c3 AND t4.c2 = alias2.c2) GROUP BY c2) AS alias1 WHERE t4.c2 = t1.c1 AND t5.c1 = t1.c1 AND alias1.c2 = t5.c1 GROUP BY t1.c1 ORDER BY COUNT(t4.c1);",N,Y,Y
6837,7,"{'student_result': [['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH total AS ( SELECT c2, COUNT(c1) as totalno FROM t4 GROUP BY c2 ), average AS ( SELECT c1, AVG(c3) as averageprice FROM t5 GROUP BY c1 ), maxfreq AS ( SELECT c2, MAX(c3) as maxno FROM t4 GROUP BY c2 ), maxname AS ( SELECT t4.c2, c1 as theregular, c3 FROM t4 JOIN maxfreq ON t4.c2 = maxfreq.c2 AND t4.c3 = maxfreq.maxno ) SELECT t1.c1, COALESCE(total.totalno, 0), average.averageprice, maxname.theregular FROM t1 LEFT JOIN total ON t1.c1 = total.c2 LEFT JOIN average ON t1.c1 = average.c1 LEFT JOIN maxname ON t1.c1 = maxname.c2;",N,Y,Y
6856,7,"{'student_result': [['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Eve'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH total AS ( SELECT c2, COUNT(c1) as totalno FROM t4 GROUP BY c2 ), average AS ( SELECT c2, AVG(c3) as averageprice FROM t5 GROUP BY c2 ), maxfreq AS ( SELECT c2, MAX(c3) as maxno FROM t4 GROUP BY c2 ), maxname AS ( SELECT t4.c2, MAX(c1) as theregular FROM t4 JOIN maxfreq ON t4.c2 = maxfreq.c2 AND t4.c3 = maxfreq.maxno GROUP BY t4.c2 ) SELECT t1.c1, COALESCE(total.totalno, 0), average.averageprice, maxname.theregular FROM t1 LEFT JOIN total ON t1.c1 = total.c2 LEFT JOIN average ON t1.c1 = average.c2 LEFT JOIN maxname ON t1.c1 = maxname.c2;",N,Y,Y
6942,7,"{'student_result': [['James Joyce Pub', 16, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 10, Decimal('4.3000000000000000'), 'Ben'], ['Down Under Pub', 6, Decimal('3.4166666666666667'), 'Coy'], ['The Edge', 6, Decimal('3.7500000000000000'), 'Coy'], ['Talk of the Town', 4, Decimal('1.8500000000000000'), 'Ben']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT t1.c1 AS bar_name, COUNT(t4.c1) AS total_num_drinker, COALESCE(AVG(t5.c3), NULL) AS avg_price, (SELECT t3.c1 FROM t4 t6 JOIN t3 ON t6.c1 = t3.c1 WHERE t6.c2 = t1.c1 GROUP BY t6.c2, t6.c1, t3.c1 ORDER BY COUNT(*) DESC, t3.c1 ASC LIMIT 1) AS most_reg_drinker FROM t1 t1 LEFT JOIN t4 ON t1.c1 = t4.c2 LEFT JOIN t5 ON t1.c1 = t5.c2 GROUP BY t1.c1 ORDER BY total_num_drinker DESC, t1.c1 ASC;",N,Y,Y
7245,7,"{'student_result': [['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Ben'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Dan'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","SELECT alias1.c2, COUNT(DISTINCT alias1.c1) AS total_num_drinker, AVG(alias2.c3) AS avg_price, (SELECT alias3.c1 FROM t4 alias3 WHERE alias3.c2 = alias1.c2 GROUP BY alias3.c1 ORDER BY COUNT(alias3.c3) DESC LIMIT 1) AS most_reg_drinker FROM t4 alias1 JOIN t5 alias2 ON alias1.c2 = alias2.c1 GROUP BY alias1.c2;",N,Y,Y
7825,7,"{'student_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan']], 'teacher_result': [['James Joyce Pub', 4, Decimal('3.6250000000000000'), 'Amy'], ['Down Under Pub', 2, Decimal('3.4166666666666667'), 'Dan'], ['Satisfaction', 2, Decimal('4.3000000000000000'), 'Ben'], ['Talk of the Town', 2, Decimal('1.8500000000000000'), 'Dan'], ['The Edge', 2, Decimal('3.7500000000000000'), 'Coy']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT 
  alias1.c1 AS bar,
  COUNT(DISTINCT alias2.c1) AS num_drinker,
  AVG(alias3.c3) AS avg_price,
  (
    SELECT alias4.c1
    FROM t4 alias4
    WHERE alias4.c2 = alias1.c1
    ORDER BY alias4.c3 DESC, alias4.c1 ASC
    LIMIT 1
  ) AS most_reg_drinker
FROM 
  t1 alias1
  LEFT JOIN t4 alias2 ON alias1.c1 = alias2.c2
  LEFT JOIN t5 alias3 ON alias1.c1 = alias3.c1
GROUP BY 
  alias1.c1
ORDER BY 
  num_drinker DESC,
  alias1.c1 ASC;","WITH alias1 AS ( SELECT c1, c2, c3 AS taw FROM t4 ), alias2 AS ( SELECT c1, c2, c3 FROM t5 ), alias3 AS ( SELECT c2, COUNT(DISTINCT c1) AS tnd FROM alias1 GROUP BY c2 ), alias4 AS ( SELECT c1, AVG(c3) AS ap FROM alias2 GROUP BY c1 ), alias5 AS ( SELECT c2, MAX(taw) AS max_taw FROM alias1 GROUP BY c2 ), alias6 AS ( SELECT alias5.c2 AS c2, alias1.c1 AS c1 FROM alias5 INNER JOIN alias1 ON alias5.c2=alias1.c2 AND alias5.max_taw=alias1.taw ), alias7 AS ( SELECT c2, MIN(c1) AS c1 FROM alias6 GROUP BY c2 ) SELECT alias3.c2 AS c2, alias3.tnd AS total_num_drinker, alias4.ap AS avg_price, alias7.c1 AS most_reg_drinker FROM alias3, alias4, alias7 WHERE alias3.c2=alias4.c1 AND alias3.c2=alias7.c2 ORDER BY alias3.tnd DESC, alias7.c1 ASC;",N,Y,Y
374,9,"{'student_result': [['James Joyce Pub', 'Amstel', Decimal('1.00')], ['Down Under Pub', 'Amstel', Decimal('1.00')], ['Talk of the Town', 'Budweiser', Decimal('2.20')], ['Satisfaction', 'Corona', Decimal('7.00')], ['James Joyce Pub', 'Corona', Decimal('7.00')], ['The Edge', 'Corona', Decimal('7.00')], ['Down Under Pub', 'Corona', Decimal('7.00')], ['Satisfaction', 'Dixie', Decimal('2.75')], ['James Joyce Pub', 'Erdinger', Decimal('3.50')], ['Satisfaction', 'Full Sail', Decimal('7.75')]], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT t1.c1, alias1.c2, alias1.min_price FROM (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) AS alias1 LEFT JOIN t5 ON alias1.c2 = t5.c2 AND alias1.min_price = t5.c3 LEFT JOIN t1 ON t5.c1 = t1.c1 ORDER BY alias1.c2;",N,FIXED,Y
492,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Talk of the Town'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.00'), 'Satisfaction'], ['Amstel', Decimal('1.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Budweiser', Decimal('2.20'), 'Down Under Pub'], ['Budweiser', Decimal('2.20'), 'The Edge'], ['Budweiser', Decimal('2.20'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'James Joyce Pub'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","WITH alias1 AS (SELECT c2 AS alias2, MIN(c3) AS min_price FROM t5 GROUP BY c2) SELECT alias1.alias2, COALESCE(alias1.min_price, -1) AS c3, COALESCE(t5.c1, 'None') AS alias3 FROM alias1 LEFT JOIN t5 ON alias1.alias2 = t5.c2 ORDER BY alias1.alias2;",N,FIXED,Y
528,9,"{'student_result': [['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias3.c1, alias1.c1, alias1.alias5 FROM (SELECT alias2.c2 AS c1, MIN(alias2.c3) AS alias5 FROM t5 alias2 GROUP BY alias2.c2) AS alias1 LEFT JOIN t5 alias4 ON alias1.c1 = alias4.c2 AND alias1.alias5 = alias4.c3 LEFT JOIN t1 alias3 ON alias4.c1 = alias3.c1 ORDER BY alias1.c1;","SELECT alias1.c2, alias1.min_price as price, t5.c1 FROM (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) AS alias1 LEFT JOIN t5 ON alias1.c2 = t5.c2 AND alias1.min_price = t5.c3 FULL OUTER JOIN t2 ON alias1.c2 = t2.c1 ORDER BY alias1.c2, alias1.min_price, t2.c1;",N,Y,Y
1202,9,"{'student_result': [['Down Under Pub', 'Amstel', Decimal('1.00')], ['Down Under Pub', 'Budweiser', Decimal('2.25')], ['Down Under Pub', 'Corona', Decimal('7.00')], ['The Edge', 'Amstel', Decimal('1.75')], ['The Edge', 'Budweiser', Decimal('2.50')], ['The Edge', 'Corona', Decimal('7.00')], ['James Joyce Pub', 'Amstel', Decimal('1.00')], ['James Joyce Pub', 'Corona', Decimal('7.00')], ['James Joyce Pub', 'Dixie', Decimal('3.00')], ['James Joyce Pub', 'Erdinger', Decimal('3.50')], ['Satisfaction', 'Amstel', Decimal('1.75')], ['Satisfaction', 'Budweiser', Decimal('2.25')], ['Satisfaction', 'Corona', Decimal('7.00')], ['Satisfaction', 'Dixie', Decimal('2.75')], ['Satisfaction', 'Full Sail', Decimal('7.75')], ['Talk of the Town', 'Amstel', Decimal('1.50')], ['Talk of the Town', 'Budweiser', Decimal('2.20')]], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;",SELECT * FROM t5;,N,FIXED,Y
1238,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'The Edge'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","WITH lowest_price AS (SELECT t2.c1 beer, MIN(t5.c3) num FROM t2, t5 WHERE t2.c1 = t5.c2 GROUP BY t2.c1) SELECT DISTINCT lowest_price.beer, lowest_price.num, t5.c1 FROM t2, t5, lowest_price WHERE t2.c1 = lowest_price.beer AND t5.c3 = lowest_price.num ORDER BY lowest_price.beer ASC;",N,FIXED,Y
1350,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Budweiser', Decimal('2.20'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'The Edge'], ['Budweiser', Decimal('2.20'), 'The Edge'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Dixie', Decimal('2.75'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Amstel', Decimal('1.00'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Amstel', Decimal('1.00'), 'Talk of the Town'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias3.c1, alias1.c1, alias1.alias5 FROM (SELECT alias2.c2 AS c1, MIN(alias2.c3) AS alias5 FROM t5 alias2 GROUP BY alias2.c2) AS alias1 LEFT JOIN t5 alias4 ON alias1.c1 = alias4.c2 AND alias1.alias5 = alias4.c3 LEFT JOIN t1 alias3 ON alias4.c1 = alias3.c1 ORDER BY alias1.c1;","SELECT alias1.c1, min_price.price, t5.c1 FROM t2 alias1 LEFT JOIN t5 ON alias1.c1 = t5.c2 LEFT JOIN (SELECT c2, MIN(c3) AS price FROM t5 GROUP BY c2) AS min_price ON alias1.c1 = min_price.c2;",N,Y,Y
1538,9,"{'student_result': [['Dixie', Decimal('2.75'), 'James Joyce Pub'], ['Budweiser', Decimal('2.20'), 'Down Under Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'Down Under Pub']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT t2.c1, MIN(t5.c3) AS min_price, (SELECT t5.c1 AS alias1 FROM t5 WHERE t5.c2 = t2.c1 LIMIT 1) AS alias2 FROM t2 LEFT JOIN t5 ON t5.c2 = t2.c1 GROUP BY t2.c1;",N,FIXED,Y
1539,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Budweiser', Decimal('2.20'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Dixie', Decimal('2.75'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias3.c1, alias1.c1, alias1.alias5 FROM (SELECT alias2.c2 AS c1, MIN(alias2.c3) AS alias5 FROM t5 alias2 GROUP BY alias2.c2) AS alias1 LEFT JOIN t5 alias4 ON alias1.c1 = alias4.c2 AND alias1.alias5 = alias4.c3 LEFT JOIN t1 alias3 ON alias4.c1 = alias3.c1 ORDER BY alias1.c1;","SELECT DISTINCT t2.c1, MIN(t5.c3) AS min_price, (SELECT t5.c1 FROM t5 WHERE t5.c2 = t2.c1 LIMIT 1) AS alias2 FROM t2 LEFT JOIN t5 ON t5.c2 = t2.c1 GROUP BY t2.c1;",N,Y,Y
1696,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.50'), 'Talk of the Town'], ['Amstel', Decimal('1.75'), 'Satisfaction'], ['Amstel', Decimal('1.75'), 'The Edge'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Budweiser', Decimal('2.25'), 'Down Under Pub'], ['Budweiser', Decimal('2.25'), 'Satisfaction'], ['Budweiser', Decimal('2.50'), 'The Edge'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'The Edge'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Dixie', Decimal('3.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias3.c1, alias1.c1, alias1.alias5 FROM (SELECT alias2.c2 AS c1, MIN(alias2.c3) AS alias5 FROM t5 alias2 GROUP BY alias2.c2) AS alias1 LEFT JOIN t5 alias4 ON alias1.c1 = alias4.c2 AND alias1.alias5 = alias4.c3 LEFT JOIN t1 alias3 ON alias4.c1 = alias3.c1 ORDER BY alias1.c1;","SELECT t2.c1 AS alias1, MIN(t5.c3) AS alias2, t1.c1 AS alias3 FROM t2 LEFT JOIN t5 ON t2.c1 = t5.c2 LEFT JOIN t1 ON t5.c1 = t1.c1 GROUP BY t2.c1, t1.c1 HAVING MIN(t5.c3) IS NOT NULL UNION SELECT t2.c1, NULL AS alias4, NULL AS alias5 FROM t2 WHERE NOT EXISTS (SELECT 1 FROM t5 WHERE t5.c2 = t2.c1) ORDER BY alias1, alias2, alias3;",N,Y,Y
1795,9,"{'student_result': [['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Budweiser', Decimal('2.20'), 'Down Under Pub'], ['Dixie', Decimal('2.75'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'Down Under Pub']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT c2, MIN(c3), MIN(c1) FROM t5 GROUP BY c2",N,FIXED,Y
2000,9,"{'student_result': [['Amstel', None, None], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', None, None], ['Amstel', None, None], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Budweiser', None, None], ['Budweiser', None, None], ['Budweiser', None, None], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', None, None], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT c2, CASE WHEN c3 = min_price THEN min_price ELSE NULL END AS c3, CASE WHEN c3 = min_price THEN c1 ELSE NULL END AS c1 FROM (SELECT s.c2, s.c3, s.c1, (SELECT MIN(c3) FROM t5 WHERE t5.c2 = s.c2) AS min_price FROM t5 s) AS alias2 ORDER BY c2;",N,FIXED,Y
2252,9,"{'student_result': [['Amstel', '1.00', 'Down Under Pub'], ['Budweiser', '2.25', 'Down Under Pub'], ['Corona', '7.00', 'Down Under Pub'], ['Amstel', '1.75', 'The Edge'], ['Budweiser', '2.50', 'The Edge'], ['Corona', '7.00', 'The Edge'], ['Amstel', '1.00', 'James Joyce Pub'], ['Corona', '7.00', 'James Joyce Pub'], ['Dixie', '3.00', 'James Joyce Pub'], ['Erdinger', '3.50', 'James Joyce Pub'], ['Amstel', '1.75', 'Satisfaction'], ['Budweiser', '2.25', 'Satisfaction'], ['Corona', '7.00', 'Satisfaction'], ['Dixie', '2.75', 'Satisfaction'], ['Full Sail', '7.75', 'Satisfaction'], ['Amstel', '1.50', 'Talk of the Town'], ['Budweiser', '2.20', 'Talk of the Town']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT alias1.c2, COALESCE(CAST(alias1.c3 AS varchar),'None'), COALESCE(alias1.c1,'None') FROM t2 alias2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS lowest FROM t5 GROUP BY c2) alias3 ON alias2.c1 = alias3.c2 LEFT OUTER JOIN t5 alias1 ON alias3.c2 = alias1.c2;",N,FIXED,Y
2254,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.75'), 'Satisfaction'], ['Amstel', Decimal('1.50'), 'Talk of the Town'], ['Amstel', Decimal('1.75'), 'The Edge'], ['Budweiser', Decimal('2.25'), 'Down Under Pub'], ['Budweiser', Decimal('2.25'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Budweiser', Decimal('2.50'), 'The Edge'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'The Edge'], ['Dixie', Decimal('3.00'), 'James Joyce Pub'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias3.c1, alias1.c1, alias1.alias5 FROM (SELECT alias2.c2 AS c1, MIN(alias2.c3) AS alias5 FROM t5 alias2 GROUP BY alias2.c2) AS alias1 LEFT JOIN t5 alias4 ON alias1.c1 = alias4.c2 AND alias1.alias5 = alias4.c3 LEFT JOIN t1 alias3 ON alias4.c1 = alias3.c1 ORDER BY alias1.c1;","SELECT t2.c1 AS beer, MIN(t5.c3) AS price, t5.c1 FROM t2 t2 LEFT JOIN t5 t5 ON t2.c1 = t5.c2 LEFT JOIN (SELECT c2, MIN(c3) AS lowest_price FROM t5 GROUP BY c2) alias1 ON t2.c1 = alias1.c2 AND t5.c3 = alias1.lowest_price GROUP BY t2.c1, t5.c1 ORDER BY t2.c1, t5.c1;",N,Y,Y
2344,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Down Under Pub, The Edge, James Joyce Pub, Satisfaction, Talk of the Town'], ['Budweiser', Decimal('2.20'), 'Down Under Pub, The Edge, Satisfaction, Talk of the Town'], ['Corona', Decimal('7.00'), 'Down Under Pub, The Edge, James Joyce Pub, Satisfaction'], ['Dixie', Decimal('2.75'), 'James Joyce Pub, Satisfaction'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT t3.c1 AS beer, MIN(alias1.c3) AS price, CASE WHEN MIN(alias1.c3) IS NOT NULL THEN STRING_AGG(t1.c1, ', ') ELSE NULL END AS bar FROM t3 LEFT JOIN t5 alias1 ON t3.c1 = alias1.c2 LEFT JOIN t1 ON alias1.c1 = t1.c1 GROUP BY t3.c1 ORDER BY t3.c1;",N,FIXED,Y
2356,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.00'), 'Satisfaction'], ['Amstel', Decimal('1.00'), 'Talk of the Town'], ['Amstel', Decimal('1.00'), 'The Edge'], ['Budweiser', Decimal('2.20'), 'Down Under Pub'], ['Budweiser', Decimal('2.20'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Budweiser', Decimal('2.20'), 'The Edge'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'The Edge'], ['Dixie', Decimal('2.75'), 'James Joyce Pub'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias3.c1, alias1.c1, alias1.alias5 FROM (SELECT alias2.c2 AS c1, MIN(alias2.c3) AS alias5 FROM t5 alias2 GROUP BY alias2.c2) AS alias1 LEFT JOIN t5 alias4 ON alias1.c1 = alias4.c2 AND alias1.alias5 = alias4.c3 LEFT JOIN t1 alias3 ON alias4.c1 = alias3.c1 ORDER BY alias1.c1;","WITH alias1 AS ( SELECT c2, MIN(c3) AS min_price FROM t5 GROUP BY c2 ) SELECT alias1.c2, alias1.min_price AS price, t5.c1 AS c1 FROM alias1 JOIN t5 ON alias1.c2 = t5.c2 ORDER BY alias1.c2, t5.c1;",N,Y,Y
2440,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias3.c1, alias1.c1, alias1.alias5 FROM (SELECT alias2.c2 AS c1, MIN(alias2.c3) AS alias5 FROM t5 alias2 GROUP BY alias2.c2) AS alias1 LEFT JOIN t5 alias4 ON alias1.c1 = alias4.c2 AND alias1.alias5 = alias4.c3 LEFT JOIN t1 alias3 ON alias4.c1 = alias3.c1 ORDER BY alias1.c1;","WITH alias1(title, min_val, bar_name) AS (SELECT A.c2, min_val, c1 FROM ((SELECT c2, MIN(c3) AS min_val FROM t5 GROUP BY c2) A JOIN t5 ON A.min_val = c3)) SELECT c1, min_val, bar_name FROM alias1 RIGHT OUTER JOIN t2 ON alias1.title = t2.c1;",N,Y,Y
2560,9,"{'student_result': [['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias3.c1, alias1.c1, alias1.alias5 FROM (SELECT alias2.c2 AS c1, MIN(alias2.c3) AS alias5 FROM t5 alias2 GROUP BY alias2.c2) AS alias1 LEFT JOIN t5 alias4 ON alias1.c1 = alias4.c2 AND alias1.alias5 = alias4.c3 LEFT JOIN t1 alias3 ON alias4.c1 = alias3.c1 ORDER BY alias1.c1;","SELECT DISTINCT alias1.c2, alias1.c3, t5.c1 FROM (SELECT c2, MIN(c3) AS c3 FROM t5 GROUP BY t5.c2) alias1, t5 WHERE alias1.c3 = t5.c3",N,Y,Y
2845,9,"{'student_result': [['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Amstel', Decimal('1.75'), 'Satisfaction'], ['Amstel', Decimal('1.50'), 'Talk of the Town'], ['Amstel', Decimal('1.75'), 'The Edge'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Budweiser', Decimal('2.50'), 'The Edge'], ['Budweiser', Decimal('2.25'), 'Satisfaction'], ['Budweiser', Decimal('2.25'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Dixie', Decimal('3.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT c2, MIN(c3) AS lowest_price, c1 FROM t5 GROUP BY c2, c1 ORDER BY c2;",N,FIXED,Y
3120,9,"{'student_result': [['James Joyce Pub', 'Amstel', Decimal('1.00')], ['Talk of the Town', 'Budweiser', Decimal('2.20')], ['James Joyce Pub', 'Corona', Decimal('7.00')], ['Satisfaction', 'Dixie', Decimal('2.75')], ['Satisfaction', 'Full Sail', Decimal('7.75')], ['Satisfaction', 'Corona', Decimal('7.00')], ['Down Under Pub', 'Corona', Decimal('7.00')], ['James Joyce Pub', 'Erdinger', Decimal('3.50')], ['Down Under Pub', 'Amstel', Decimal('1.00')], ['The Edge', 'Corona', Decimal('7.00')]], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT * FROM t5 EXCEPT SELECT alias1.c1, alias1.c2, alias1.c3 FROM t5 AS alias1, t5 AS alias2 WHERE alias1.c2 = alias2.c2 AND alias1.c3 > alias2.c3;",N,FIXED,Y
3305,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.50'), None], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Budweiser', Decimal('2.25'), None], ['Corona', Decimal('7.00'), 'The Edge'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Dixie', Decimal('3.00'), None], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT t2.c1 AS alias1, COALESCE(MIN(t5.c3), NULL) AS alias2, COALESCE(t1.c1, NULL) AS alias3 FROM t2 LEFT JOIN t5 ON t2.c1 = t5.c2 LEFT JOIN t1 ON t1.c1 = t5.c1 AND t5.c3 = (SELECT MIN(c3) FROM t5 WHERE c2 = t2.c1) GROUP BY t2.c1, t1.c1 ORDER BY t2.c1;",N,FIXED,Y
3306,9,"{'student_result': [['Amstel', Decimal('1.00'), None], ['Budweiser', Decimal('2.20'), None], ['Corona', Decimal('7.00'), None], ['Dixie', Decimal('2.75'), None], ['Erdinger', Decimal('3.50'), None], ['Full Sail', Decimal('7.75'), None]], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT t2.c1 AS beer, COALESCE(MIN(t5.c3), NULL) AS price, COALESCE(t1.c1, NULL) AS c2 FROM t2 LEFT JOIN t5 ON t2.c1 = t5.c2 LEFT JOIN t1 ON t1.c1 = t5.c1 AND t5.c3 < (SELECT MIN(c3) FROM t5 WHERE c2 = t2.c1) GROUP BY t2.c1, t1.c1 ORDER BY t2.c1;",N,FIXED,Y
3307,9,"{'student_result': [['Amstel', Decimal('1.75'), 'The Edge'], ['Amstel', Decimal('1.75'), 'Satisfaction'], ['Amstel', Decimal('1.50'), 'Talk of the Town'], ['Amstel', Decimal('1.00'), None], ['Budweiser', Decimal('2.20'), None], ['Budweiser', Decimal('2.25'), 'Satisfaction'], ['Budweiser', Decimal('2.25'), 'Down Under Pub'], ['Budweiser', Decimal('2.50'), 'The Edge'], ['Corona', Decimal('7.00'), None], ['Dixie', Decimal('2.75'), None], ['Dixie', Decimal('3.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), None], ['Full Sail', Decimal('7.75'), None]], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias3.c1, alias1.c1, alias1.alias5 FROM (SELECT alias2.c2 AS c1, MIN(alias2.c3) AS alias5 FROM t5 alias2 GROUP BY alias2.c2) AS alias1 LEFT JOIN t5 alias4 ON alias1.c1 = alias4.c2 AND alias1.alias5 = alias4.c3 LEFT JOIN t1 alias3 ON alias4.c1 = alias3.c1 ORDER BY alias1.c1;","SELECT t2.c1 AS c1, COALESCE(MIN(t5.c3), NULL) AS c2, COALESCE(t1.c1, NULL) AS c3 FROM t2 LEFT JOIN t5 ON t2.c1 = t5.c2 LEFT JOIN t1 ON t1.c1 = t5.c1 AND t5.c3 > (SELECT MIN(c3) FROM t5 WHERE c2 = t2.c1) GROUP BY t2.c1, t1.c1 ORDER BY t2.c1;",N,Y,Y
3652,9,"{'student_result': [['Amstel', Decimal('0.75'), Decimal('1.4000000000000000')], ['Budweiser', Decimal('0.30'), Decimal('2.3000000000000000')], ['Corona', Decimal('0.00'), Decimal('7.0000000000000000')], ['Dixie', Decimal('0.25'), Decimal('2.8750000000000000')], ['Erdinger', Decimal('0.00'), Decimal('3.5000000000000000')], ['Full Sail', Decimal('0.00'), Decimal('7.7500000000000000')]], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","WITH ValidBeers AS (SELECT c2 AS alias1 FROM t5 WHERE t5.c1 IN (SELECT c2 AS alias2 FROM t4 WHERE c1 LIKE 'B%') GROUP BY c2 HAVING COUNT(c1) >= 2), BeerPrices AS (SELECT t5.c2 AS alias3, t5.c3 AS alias4 FROM t5 FULL OUTER JOIN ValidBeers ON t5.c2 = ValidBeers.alias1) SELECT bp.alias3, MAX(bp.alias4) - MIN(bp.alias4) AS price_gap, AVG(bp.alias4) AS avg_price FROM BeerPrices bp GROUP BY bp.alias3 ORDER BY bp.alias3;",N,FIXED,Y
3759,9,"{'student_result': [['Amstel', Decimal('1.50'), 'Talk of the Town'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.75'), 'Satisfaction'], ['Amstel', Decimal('1.75'), 'The Edge'], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Budweiser', Decimal('2.25'), 'Down Under Pub'], ['Budweiser', Decimal('2.50'), 'The Edge'], ['Budweiser', Decimal('2.25'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('3.00'), 'James Joyce Pub'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT alias1.c2, alias1.c3 AS min_price, alias1.c1 FROM t5 alias1 LEFT JOIN (SELECT c2, MIN(c3) AS min_price FROM t5 GROUP BY c2) alias2 ON alias1.c2 = alias2.c2 AND alias1.c3 = alias2.min_price ORDER BY alias1.c2;",N,FIXED,Y
4033,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.50'), None], ['Amstel', Decimal('1.75'), None], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Budweiser', Decimal('2.25'), None], ['Budweiser', Decimal('2.50'), None], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'The Edge'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Dixie', Decimal('3.00'), None], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT alias1.c1 AS beer, MIN(alias2.c3) AS price, alias3.c1 AS bar FROM t2 alias1 LEFT JOIN t5 alias2 ON alias1.c1 = alias2.c2 LEFT JOIN t1 alias3 ON alias2.c1 = alias3.c1 AND alias2.c3 = (SELECT MIN(alias4.c3) FROM t5 alias4 WHERE alias4.c2 = alias1.c1) OR (alias2.c3 IS NULL AND alias3.c1 IS NULL) GROUP BY alias1.c1, alias3.c1, alias2.c3 ORDER BY alias1.c1, alias2.c3;",N,FIXED,Y
4788,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.50'), 'Talk of the Town'], ['Amstel', Decimal('1.75'), 'Satisfaction'], ['Amstel', Decimal('1.75'), 'The Edge']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT distinct alias1.c2, alias1.c3, alias1.c1 FROM t5 as alias1 JOIN t5 as alias2 ON alias1.c1 = alias2.c1 GROUP BY alias1.c1, alias1.c3, alias1.c2 having alias1.c3 = min(alias2.c3);",N,FIXED,Y
5586,9,"{'student_result': [['Amstel', 'Down Under Pub', Decimal('1.00')], ['Corona', 'Down Under Pub', Decimal('7.00')], ['Corona', 'The Edge', Decimal('7.00')], ['Amstel', 'James Joyce Pub', Decimal('1.00')], ['Corona', 'James Joyce Pub', Decimal('7.00')], ['Erdinger', 'James Joyce Pub', Decimal('3.50')], ['Corona', 'Satisfaction', Decimal('7.00')], ['Dixie', 'Satisfaction', Decimal('2.75')], ['Full Sail', 'Satisfaction', Decimal('7.75')], ['Budweiser', 'Talk of the Town', Decimal('2.20')]], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT alias1.c1 AS beer, alias2.c1, alias2.c3 FROM t2 alias1 LEFT JOIN t5 alias2 ON alias1.c1 = alias2.c2 WHERE alias2.c3 IS NULL OR alias2.c3 = ( SELECT MIN(c3) FROM t5 WHERE c2 = alias1.c1 );",N,FIXED,Y
6509,9,"{'student_result': [['Down Under Pub', Decimal('1.00'), 'Down Under Pub'], ['Down Under Pub', Decimal('7.00'), 'Down Under Pub'], ['The Edge', Decimal('7.00'), 'The Edge'], ['James Joyce Pub', Decimal('1.00'), 'James Joyce Pub'], ['James Joyce Pub', Decimal('7.00'), 'James Joyce Pub'], ['James Joyce Pub', Decimal('3.50'), 'James Joyce Pub'], ['Satisfaction', Decimal('7.00'), 'Satisfaction'], ['Satisfaction', Decimal('2.75'), 'Satisfaction'], ['Satisfaction', Decimal('7.75'), 'Satisfaction'], ['Talk of the Town', Decimal('2.20'), 'Talk of the Town']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","WITH alias1 AS ( SELECT c2, MIN(c3) AS minPrice FROM t5 GROUP BY c2 ), alias2 AS ( SELECT t5.c2, t5.c1, t5.c3 FROM t5 JOIN alias1 ON t5.c2 = alias1.c2 AND t5.c3 = alias1.minPrice ) SELECT t1.c1, alias2.c3, alias2.c1 FROM t1 LEFT JOIN alias2 on t1.c1 = alias2.c1",N,FIXED,Y
6747,9,"{'student_result': [['Dixie', Decimal('2.75'), 'Down Under Pub'], ['Budweiser', Decimal('2.20'), 'Down Under Pub'], ['Erdinger', Decimal('3.50'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Full Sail', Decimal('7.75'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Dixie', Decimal('2.75'), 'Down Under Pub'], ['Budweiser', Decimal('2.20'), 'Down Under Pub'], ['Erdinger', Decimal('3.50'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Full Sail', Decimal('7.75'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Dixie', Decimal('2.75'), 'Down Under Pub'], ['Budweiser', Decimal('2.20'), 'Down Under Pub'], ['Erdinger', Decimal('3.50'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Full Sail', Decimal('7.75'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Dixie', Decimal('2.75'), 'The Edge'], ['Budweiser', Decimal('2.20'), 'The Edge'], ['Erdinger', Decimal('3.50'), 'The Edge'], ['Amstel', Decimal('1.00'), 'The Edge'], ['Full Sail', Decimal('7.75'), 'The Edge'], ['Corona', Decimal('7.00'), 'The Edge'], ['Dixie', Decimal('2.75'), 'The Edge'], ['Budweiser', Decimal('2.20'), 'The Edge'], ['Erdinger', Decimal('3.50'), 'The Edge'], ['Amstel', Decimal('1.00'), 'The Edge'], ['Full Sail', Decimal('7.75'), 'The Edge'], ['Corona', Decimal('7.00'), 'The Edge'], ['Dixie', Decimal('2.75'), 'The Edge'], ['Budweiser', Decimal('2.20'), 'The Edge'], ['Erdinger', Decimal('3.50'), 'The Edge'], ['Amstel', Decimal('1.00'), 'The Edge'], ['Full Sail', Decimal('7.75'), 'The Edge'], ['Corona', Decimal('7.00'), 'The Edge'], ['Dixie', Decimal('2.75'), 'James Joyce Pub'], ['Budweiser', Decimal('2.20'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Dixie', Decimal('2.75'), 'James Joyce Pub'], ['Budweiser', Decimal('2.20'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Dixie', Decimal('2.75'), 'James Joyce Pub'], ['Budweiser', Decimal('2.20'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Dixie', Decimal('2.75'), 'James Joyce Pub'], ['Budweiser', Decimal('2.20'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'Satisfaction'], ['Amstel', Decimal('1.00'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'Satisfaction'], ['Amstel', Decimal('1.00'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'Satisfaction'], ['Amstel', Decimal('1.00'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'Satisfaction'], ['Amstel', Decimal('1.00'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'Satisfaction'], ['Amstel', Decimal('1.00'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Talk of the Town'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Erdinger', Decimal('3.50'), 'Talk of the Town'], ['Amstel', Decimal('1.00'), 'Talk of the Town'], ['Full Sail', Decimal('7.75'), 'Talk of the Town'], ['Corona', Decimal('7.00'), 'Talk of the Town'], ['Dixie', Decimal('2.75'), 'Talk of the Town'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Erdinger', Decimal('3.50'), 'Talk of the Town'], ['Amstel', Decimal('1.00'), 'Talk of the Town'], ['Full Sail', Decimal('7.75'), 'Talk of the Town'], ['Corona', Decimal('7.00'), 'Talk of the Town']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","SELECT alias1.c1, alias1.min_price, t5.c1 FROM (SELECT t2.c1, MIN(t5.c3) AS min_price FROM t2 LEFT JOIN t5 ON t2.c1 = t5.c2 GROUP BY t2.c1) AS alias1 NATURAL JOIN t5;",N,FIXED,Y
6724,9,"{'student_result': [['Amstel', 'Down Under Pub', Decimal('1.00')], ['Amstel', 'James Joyce Pub', Decimal('1.00')], ['Budweiser', 'Talk of the Town', Decimal('2.20')], ['Corona', 'Down Under Pub', Decimal('7.00')], ['Corona', 'The Edge', Decimal('7.00')], ['Corona', 'James Joyce Pub', Decimal('7.00')], ['Corona', 'Satisfaction', Decimal('7.00')], ['Dixie', 'Satisfaction', Decimal('2.75')], ['Erdinger', 'James Joyce Pub', Decimal('3.50')], ['Full Sail', 'Satisfaction', Decimal('7.75')]], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","WITH alias1 AS ( SELECT c2, MIN(c3) AS lowestprice FROM t5 GROUP BY c2 ), alias2 AS ( SELECT t5.c2, t5.c1, t5.c3 FROM t5 JOIN alias1 ON t5.c2 = alias1.c2 AND t5.c3 = alias1.lowestprice ) SELECT t2.c1, alias2.c1, alias2.c3 FROM t2 LEFT JOIN alias2 ON t2.c1 = alias2.c2;",N,FIXED,Y
7272,9,"{'student_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'The Edge'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT t2.c1, min_price, t5.c1 FROM t2 LEFT OUTER JOIN (SELECT t5.c2, MIN(t5.c3) AS min_price FROM t5 GROUP BY t5.c2) t ON t2.c1 = t.c2 LEFT OUTER JOIN t5 ON t2.c1 = t5.c2 AND min_price = t5.c3;","WITH alias1 AS ( SELECT t2.c1 AS beer, MIN(t5.c3) AS min_price FROM t2 LEFT JOIN t5 ON t2.c1 = t5.c2 GROUP BY t2.c1 ), alias2 AS ( SELECT t5.c2 AS beer, t5.c3 AS price, t5.c1 AS bar FROM t5 JOIN alias1 ON t5.c2 = alias1.beer AND t5.c3 = alias1.min_price ) SELECT alias1.beer, alias1.min_price AS price, alias2.bar FROM alias1 LEFT JOIN alias2 ON alias1.beer = alias2.beer UNION ALL SELECT t2.c1 AS beer, NULL AS price, NULL AS bar FROM t2 WHERE t2.c1 NOT IN ( SELECT DISTINCT t5.c2 FROM t5 ) ORDER BY beer;",N,FIXED,Y
7426,9,"{'student_result': [['Amstel', Decimal('1.50'), 'Talk of the Town'], ['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Amstel', Decimal('1.75'), 'Satisfaction'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Amstel', Decimal('1.75'), 'The Edge'], ['Budweiser', Decimal('2.25'), 'Down Under Pub'], ['Budweiser', Decimal('2.50'), 'The Edge'], ['Budweiser', Decimal('2.20'), 'Talk of the Town'], ['Budweiser', Decimal('2.25'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Corona', Decimal('7.00'), 'The Edge'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Dixie', Decimal('3.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Full Sail', Decimal('7.75'), 'Satisfaction']], 'teacher_result': [['Amstel', Decimal('1.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'Down Under Pub'], ['Corona', Decimal('7.00'), 'The Edge'], ['Amstel', Decimal('1.00'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'James Joyce Pub'], ['Erdinger', Decimal('3.50'), 'James Joyce Pub'], ['Corona', Decimal('7.00'), 'Satisfaction'], ['Dixie', Decimal('2.75'), 'Satisfaction'], ['Full Sail', Decimal('7.75'), 'Satisfaction'], ['Budweiser', Decimal('2.20'), 'Talk of the Town']]}","CREATE TABLE t1 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t2 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t3 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1)
);

CREATE TABLE t4 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 SMALLINT NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t1(c1)
);

CREATE TABLE t5 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    c3 DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t1(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);

CREATE TABLE t6 (
    c1 VARCHAR NOT NULL,
    c2 VARCHAR NOT NULL,
    PRIMARY KEY (c1, c2),
    FOREIGN KEY (c1) REFERENCES t3(c1),
    FOREIGN KEY (c2) REFERENCES t2(c1)
);","SELECT alias3.c1, alias1.c1, alias1.alias5 FROM (SELECT alias2.c2 AS c1, MIN(alias2.c3) AS alias5 FROM t5 alias2 GROUP BY alias2.c2) AS alias1 LEFT JOIN t5 alias4 ON alias1.c1 = alias4.c2 AND alias1.alias5 = alias4.c3 LEFT JOIN t1 alias3 ON alias4.c1 = alias3.c1 ORDER BY alias1.c1;","SELECT t2.c1 AS beer, MIN(t5.c3) AS price, t5.c1 AS bar FROM t2 LEFT JOIN t5 ON t2.c1 = t5.c2 GROUP BY t2.c1, t5.c1 HAVING COUNT(t5.c1) > 0 ORDER BY t2.c1;",N,Y,Y
